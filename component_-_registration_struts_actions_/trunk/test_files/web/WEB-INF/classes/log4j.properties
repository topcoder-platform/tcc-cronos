log4j.rootCategory=error, stdout
# log4j.rootCategory=debug, rolling
# log4j.rootCategory=warn, stdout, rolling

# BEGIN APPENDER: CONSOLE APPENDER (stdout)
#  first:  type of appender (fully qualified class name)
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

#  second: Any configuration information needed for that appender.
#    Many appenders require a layout.
log4j.appender.stdout.layout=org.apache.log4j.TTCCLayout
# log4j.appender.stdout.layout=org.apache.log4j.SimpleLayout

# Possible information overload?
# log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#  additionally, some layouts can take additional information --
#    like the ConversionPattern for the PatternLayout.
# log4j.appender.stdout.layout.ConversionPattern=%d %-5p %-17c{2} (%30F:%L) %3x
- %m%n
# END APPENDER: CONSOLE APPENDER (stdout)

# BEGIN APPENDER: ROLLING FILE APPENDER (rolling)
#  first:  type of appender (fully qualified class name)
log4j.appender.rolling=org.apache.log4j.RollingFileAppender

#  second: Any configuration information needed for that appender.
#    Many appenders require a layout.
log4j.appender.rolling.File=test.log

log4j.appender.rolling.MaxFileSize=1000KB
#  Keep one backup file
log4j.appender.rolling.MaxBackupIndex=1

log4j.appender.rolling.layout=org.apache.log4j.PatternLayout
log4j.appender.rolling.layout.ConversionPattern=%p %t %c - %m%n

# Possible information overload?
# log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#  additionally, some layouts can take additional information --
#    like the ConversionPattern for the PatternLayout.
# log4j.appender.stdout.layout.ConversionPattern=%d %-5p %-17c{2} (%30F:%L) %3x
- %m%n
# END APPENDER: ROLLING FILE APPENDER (rolling)