<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2009 TopCoder Inc., All Rights Reserved.
-->

<!--

     This is item renderer for rank bar.
     
     Version 1.0.1 (Cockpit Release Assembly 4) Change Notes:
        - BUGR-2134: (1) for multi submission MultiImageView is opened rather than MultiSubmissionView.
                     (2) double click on rank box (that has thumbnail) lead to 
                         image (multi or simple, depending on submission type) view.
                     (3) hid the bad looking rank box header.

     @author snow01, TCSASSEMBLER
     @since Submission Viewer Overhaul
     @version 1.0.1
-->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
                xmlns:tc="com.topcoder.flex.widgets.widgetcontent.submissionviewerwidget.*"
                width="190"
                height="206"
                borderStyle="none"
                borderAlpha="0.0"
                dropShadowEnabled="false"
                cornerRadius="0"
                verticalScrollPolicy="off"
                horizontalScrollPolicy="off"
                doubleClick="handleDoubleClick(event)"
                doubleClickEnabled="true"
                showCloseButton="{data &amp;&amp; data.parentModel.isRankMode &amp;&amp; data.showClose}"
                close="removeRank()">
    <mx:Script>
        <![CDATA[
            import mx.collections.ArrayCollection;
            import com.topcoder.flex.widgets.widgetcontent.submissionviewerwidget.ThumbnailGalleryDataModel;
            import mx.events.DragEvent;

            /**
             * Handler for setting the submission content on the rank box.
             */
            private function handleContent():void {
                thumbnail.scaleContent=false;
                thumbnail.content.height=151;
                thumbnail.content.width=151;
            }

            /**
             * Handler for setting the empty place on the rank box.
             */
            private function handleEmptyContent():void {
                thumbnail_empty.scaleContent=false;
                thumbnail_empty.content.height=151;
                thumbnail_empty.content.width=151;
            }

            /**
             * Handler for calculating the rank box label.
             * If there is a valid submission, then label name has the id of submission.
             * Else it is just the rank place.
             *
             * @param label default rank place.
             * @id the submission identifier, if any.
             */
            private function handleLabel(label:String, id:int):String {
                if (id) {
                    return label + " " + id.toString();
                }
                return label;
            }

            /**
             * Handler for removing the sumbission from the rank box.
             */
            private function removeRank():void {
                //var model:ThumbnailGalleryDataModel=ThumbnailGalleryDataModel.instance;
                if (data) {
                    data.parentModel.removeRank(data.id as Number);
                }
            }

            /**
             * Handler for the case when image load errors out.
             */
            private function onIoError(event:IOErrorEvent):void {
                /*if (event.target is Image) {
                    var image:Image;
                    image=event.target as Image;
                    image.source="";
                }*/
            }
            
            /**
             * Event handler for double click on submission.
             *
             * Double click opens another view depending on the type of desired view.
             * 
             * @param event mouse event.
             * @since 1.0.1
             */
            private function handleDoubleClick(event:MouseEvent):void {
                // if this rank does not have any submission then simply return.
                if (!data || !data.thumbnail|| data.thumbnail == '') {
                    return;
                }
                
                data.parentModel.setCurrentSubmission(data.id);
                if (data.submission && data.submission.hasOwnProperty("multi") && data.submission.multi == true) {
                    data.parentModel.imageList=data.submission.fullsizepreviewList as ArrayCollection;
                    if (data.parentModel.imageList && data.parentModel.imageList.length > 0) {
                        data.parentModel.selectedImage=data.parentModel.imageList.getItemAt(0) as String;
                    } else {
                        data.parentModel.selectedImage="";
                    }
                    data.parentModel.selectedIndex=2;
                } else {
                    data.parentModel.selectedIndex=1;
                }
            }
        ]]>
    </mx:Script>
    <mx:ViewStack width="190"
                  height="206"
                  includeInLayout="false"
                  left="0" 
                  top="0" 
			      paddingTop="0" 
			      paddingBottom="0" 
			      paddingLeft="14"
                  paddingRight="15"
                  selectedIndex="{data &amp;&amp; data.thumbnail != null &amp;&amp; data.thumbnail != '' ? 1 : 0}">
        <mx:VBox width="100%"
                 height="100%"
                 verticalScrollPolicy="off"
                 horizontalScrollPolicy="off">
            <tc:TCImage id="thumbnail_empty"
                      width="151"
                      height="151"
                      source="@Embed(source='../../assets/dragdrop-box.png')"
                      complete="handleEmptyContent()"
                      ioError="onIoError(event)"/>
            <mx:HBox width="100%"
                     horizontalAlign="center">
                <mx:Label text="{handleLabel(data.label, data.id)}"
                          styleName="normalText"/>
            </mx:HBox>
        </mx:VBox>
        <mx:VBox width="100%"
                 height="100%"
                 verticalScrollPolicy="off"
                 horizontalScrollPolicy="off">
            <mx:Canvas>
                <mx:Image id="thumbnail"
                          width="151"
                          height="151"
                          source="{data.thumbnail}"
                          complete="handleContent()"
                          ioError="onIoError(event)"/>
                <mx:Canvas width="18"
                           height="19"
                           backgroundSize="100%"
                           bottom="0"
                           left="125"
                           visible="{data.purchased == true}"
                           styleName="purchaseLogo">
                </mx:Canvas>
            </mx:Canvas>

            <mx:HBox width="100%"
                     horizontalAlign="center">
                <mx:Label text="{handleLabel(data.label, data.id)}"
                          styleName="normalText"/>
            </mx:HBox>
        </mx:VBox>
    </mx:ViewStack>
</mx:TitleWindow>
