<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%"
    styleName="ContestRowStyle" mouseOver="mouseOverHandle()" mouseOut="mouseOutHandle()">
<mx:Script>
	<![CDATA[
		import com.topcoder.flex.widgets.model.IWidget;
	import com.topcoder.flex.widgets.widgetcontent.projectwidget.qs.Contest;
	import mx.collections.ArrayCollection;
	import mx.controls.Alert;

	private var _rowNum:int;
	private var _ContextId:String;
	
	private static const OneHour:Number = 1000 * 60 * 60;
	/**
     * The base url for the link of contents;
     */
    private var urlBase:String = "http://studio.topcoder.com/?module=ViewContestDetails&ct=";
    
    /**
     * The base url for the link of contents;
     */
    private var forumUrlBase:String = "http://studio.topcoder.com/forums?module=ThreadList&forumID=";
    
    
	[Bindable]
	private var _dataProvider:Contest;
	//setter and getter of dataProvider
	public function set dataProvider(temp:Contest):void{
		_dataProvider = temp;
		startDate=_dataProvider.startDate;
		endDate=_dataProvider.endDate;
		submissions=_dataProvider.submissions;
		if (_dataProvider.forumId == null || _dataProvider.forumId=="-1")
		{
			forumPosts="no forum";
		}
		else
		{
			forumPosts=_dataProvider.forumPosts
		}
		status=_dataProvider.status;
		registrants=_dataProvider.registrants;
		contextName=_dataProvider.name;
		ContextId=_dataProvider.id;
		editBtn.visible=false;

    var tmp:String = status.toLowerCase();
    if (tmp.indexOf("active") >= 0) {
      statusBtn.styleName = "active";
    } else if (tmp.indexOf("terminated") >= 0) {
      statusBtn.styleName = "terminated";
    } else if (tmp.indexOf("completed") >= 0) {
      statusBtn.styleName = "completed";
    } else if (tmp.indexOf("draft") >= 0) {
      statusBtn.styleName = "draft";
    } else if (tmp.indexOf("scheduled") >= 0) {
      statusBtn.styleName = "scheduled";
    } else if (tmp.indexOf("danger") >= 0) {
      statusBtn.styleName = "danger";
    }
  }
  public function get dataProvider():Contest{
    return _dataProvider;
  }
  // setter and getter of all propriety of Context
  public function set ContextId(value:String):void{
    _ContextId = value;
  }
  public function get ContextId():String{
    return _ContextId;
  }
  public function set rowNum(temp:Number):void{
    _rowNum = temp;
    /*if ((_rowNum % 2 )==0) {
      var o:Object=getStyle("oddRowColor");
      this.setStyle("backgroundColor",getStyle("oddRowColor"))
    }
    else {
      this.setStyle("backgroundColor",getStyle("evenRowColor"))
    }*/
  }
  public function get rowNum():Number{
    return _rowNum;
  }
  public function set status(temp:String):void{
    statusBtn.label = temp;
  }
  public function get contextName():String{
    return lblContextName.label;
  }
  public function set contextName(temp:String):void{
    lblContextName.label = temp;
  }
  public function get status():String{
    return statusBtn.label;
  }
  public function set startDate(temp:String):void{
    var dateStr:String = changeTimeToUMTMinus5(temp);
    var dataStrArr:Array = dateStr.split(" ");
    lblStartDatePart1.text = dataStrArr[0]+" "+dataStrArr[1]+" "+dataStrArr[2]+" "+dataStrArr[5];
    lblStartDatePart2.text = dataStrArr[3]+" "+dataStrArr[4];
  }
  public function get startDate():String{
    var part1:String = lblStartDatePart1.text;
    var part1Arr:Array = part1.split(" ");
    var result:String = part1Arr[0]+" "+part1Arr[1]+" "+part1Arr[2]+" "+lblStartDatePart2.text+" "+part1Arr[3];
    return result;
  }
  public function set endDate(temp:String):void{
    var dateStr:String = changeTimeToUMTMinus5(temp);
    var dataStrArr:Array = dateStr.split(" ");
    lblEndDatePart1.text = dataStrArr[0]+" "+dataStrArr[1]+" "+dataStrArr[2]+" "+dataStrArr[5];
    lblEndDatePart2.text = dataStrArr[3]+" "+dataStrArr[4];
  }
  public function get endDate():String{
    var part1:String = lblEndDatePart1.text;
    var part1Arr:Array = part1.split(" ");
    var result:String = part1Arr[0]+" "+part1Arr[1]+" "+part1Arr[2]+" "+lblEndDatePart2.text+" "+part1Arr[3];
    return result;
  }
  public function set registrants(temp:String):void{
    lblRegistrants.text = temp;
  }
  public function get registrants():String{
    return lblRegistrants.text;
  }

	public function set submissions(temp:String):void{
		lblSubmissions.text = temp;
		if (temp=='0') {
			lnkSubmissions.includeInLayout=false
			lnkSubmissions.visible=false
			//canvasSubmissions.percentWidth=100;
			lblSubmissions.setStyle("textAlign","center")

		}
		else{
			lnkSubmissions.includeInLayout=true
			lnkSubmissions.visible=true
			//canvasSubmissions.percentWidth=35
			lblSubmissions.setStyle("textAlign","center")

		}
	}
	public function get submissions():String{
		return lblSubmissions.text;
	}
	public function set forumPosts(temp:String):void{
		lblForumPosts.text = temp;
		if (temp=='no forum') {
			lnkFormPosts.includeInLayout=false
			lnkFormPosts.visible=false
			//canvasForumPosts.percentWidth=100
			lblForumPosts.setStyle("textAlign","center")
		}
		else{
			lnkFormPosts.includeInLayout=true
			lnkFormPosts.visible=true
			//canvasForumPosts.percentWidth=35
			lblForumPosts.setStyle("textAlign","center")
		}
	}
	public function get forumPosts():String{
		return lblForumPosts.text;
	}
	
	private function showStats():void
        {
        	var prjCt:ProjectsContainer;
        	var p:DisplayObjectContainer=parent;
        	while(p!=null){
        		if(p is ProjectsContainer)break;
        		p=p.parent;
        	}
        	if(p==null)return ;
        	
		prjCt=p as ProjectsContainer;
		var dict:Dictionary=new Dictionary();
		dict["contestid"]=_ContextId;
		prjCt.widgetFramework.addWidgetEx("Contest Monitor","Contest Monitor",dict );
        	
	}
	
	private function showSubmission():void
        {
        	var prjCt:ProjectsContainer;
        	var p:DisplayObjectContainer=parent;
        	while(p!=null){
        		if(p is ProjectsContainer)break;
        		p=p.parent;
        	}
        	if(p==null)return ;
		if(parseInt(submissions)>0){
			prjCt=p as ProjectsContainer;
			var dict:Dictionary=new Dictionary();
			dict["contestid"]=_ContextId;
			prjCt.widgetFramework.addWidgetEx("Submission Viewer","Submission Viewer",dict );
		}
	}

	/**
	 * Click on the label links to url.
	 */
        private function handleClick():void {
            navigateToURL(new URLRequest(urlBase+ ContextId));
        }
        
        /**
	 * Click on the view button to open forum link.
	 */
        private function openForum():void
        {
        	if(_dataProvider.forumId == null || _dataProvider.forumId=="-1")
        	{
        		//Alert.show("The forum has been created!");
        		return ;
        	}
        	navigateToURL(new URLRequest(forumUrlBase+ _dataProvider.forumId ));
        }
        
        private function mouseOverHandle():void
        {
        	if(_dataProvider.status.toLocaleLowerCase()=="draft"
        	  || _dataProvider.status.toLocaleLowerCase()=="unactive - not yet published")
		  {
        		editBtn.visible=true;
		  }
        }
        
         private function mouseOutHandle():void
        {
        	editBtn.visible=false;
        }
        
        private function editContest():void
        {
        	var prjCt:ProjectsContainer;
        			var p:DisplayObjectContainer=parent;
        			while(p!=null){
        				if(p is ProjectsContainer)break;
        				p=p.parent;
        			}
        			if(p==null)return ;
					prjCt=p as ProjectsContainer;
					var widget:IWidget=prjCt.widgetFramework.getWidget("Launch Contests","Launch Contest");
					var props:Dictionary=new Dictionary();
					props["contestid"]=_dataProvider.id;
					widget.setAttributes(props);
					prjCt.widgetFramework.openWidget("Launch Contests","Launch Contest");
        }
        
        //change the time to UMT-5 time for BUGR-1196
        private function changeTimeToUMTMinus5(date:String):String {
            var dateTmp:Date = new Date(date);
            var tzOffHours:Number = dateTmp.timezoneOffset/60;
            dateTmp.setTime(dateTmp.getTime() - (5 - tzOffHours)*OneHour);
            var dateStr:String = dateTmp.toString();
            var GMTIndex:int = dateStr.indexOf("GMT");
            var result:String = dateStr.substr(0, GMTIndex);
            result += "UMT-0500 ";
            result += dateStr.substr(GMTIndex+9, 4);
            return result;
        }
	]]>
</mx:Script>
    <mx:HBox width="100%">
    	<mx:LinkButton width="100%" buttonMode="true" useHandCursor="true" id="lblContextName" styleName="linkBtn" click="handleClick()"/>
        <mx:Spacer width="100%" />
        <mx:LinkButton width="10%" id="editBtn" styleName="editBtn" labelPlacement="top" click="editContest()"/> 
    </mx:HBox>

  <mx:HBox width="100%" styleName="rowContent" >
    <mx:VBox width="100%" horizontalAlign="center" verticalAlign="middle">
        <mx:Text width="100%" styleName="rowContentLabel" id="lblStartDatePart1" />
        <mx:Text width="100%" styleName="rowContentLabel" id="lblStartDatePart2" />
    </mx:VBox>
    <mx:VBox width="100%" horizontalAlign="center" verticalAlign="middle">
        <mx:Text width="100%" styleName="rowContentLabel" id="lblEndDatePart1" />
        <mx:Text width="100%" styleName="rowContentLabel" id="lblEndDatePart2" />
    </mx:VBox>
    <mx:Text width="100%" styleName="rowContentLabel" id="lblRegistrants" />
    <mx:VBox width="100%" horizontalAlign="center" verticalAlign="middle">
      <mx:Text width="100%" styleName="rowContentLabel" id="lblSubmissions" />
      <mx:LinkButton buttonMode="true" styleName="viewBtn" label="View" labelPlacement="bottom" id="lnkSubmissions" click="showSubmission()"/>
    </mx:VBox>
    <mx:VBox width="100%" styleName="bottomAlign">
      <mx:Text width="100%"   styleName="rowContentLabel" id="lblForumPosts" />
      <mx:LinkButton buttonMode="true" styleName="viewBtn" label="View" labelPlacement="bottom" id="lnkFormPosts" click="openForum()"/>
    </mx:VBox>
    <mx:VBox width="100%" styleName="bottomAlign">
      <mx:LinkButton buttonMode="true" id="statusBtn" styleName="statusBtn" labelPlacement="bottom" click="showStats()"/>
    </mx:VBox>
  </mx:HBox>
</mx:VBox>
