<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:ns1="com.topcoder.flex.widgets.widgetcontent.projectwidget.com.*" width="100%" height="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off" styleName="ProjectList" verticalGap="0">
<mx:Script>
  <![CDATA[
    import mx.events.MenuEvent;
    import mx.collections.XMLListCollection;
    import com.topcoder.flex.widgets.widgetcontent.projectwidget.qs.Project;
    import com.topcoder.flex.widgets.widgetcontent.projectwidget.qs.Contest;
    import mx.collections.ArrayCollection;
    import com.topcoder.flex.widgets.widgetcontent.projectwidget.com.ContestRow;
    import com.topcoder.flex.widgets.widgetcontent.projectwidget.ProjectWidget;
    //status icon class declaration
    [Embed(source="../../assets/icon/terminated.png")]
        private var prjTerminated:Class;
    [Embed(source="../../assets/icon/completed.png")]
        private var prjCompleted:Class;
		[Embed(source="../../assets/icon/draft.png")]
        private var prjDraft:Class;
		[Embed(source="../../assets/icon/active.png")]
        private var prjActive:Class;
		[Embed(source="../../assets/icon/scheduled.png")]
        private var prjScheduled:Class;
		[Embed(source="../../assets/icon/in_danger.png")]
        private var prjInDanger:Class;
		//[+ and - icon class
        [Embed(source="../../assets/image/winMax.png")]
        private var winMax:Class;
        [Embed(source="../../assets/image/winMin.png")]
        [Bindable]private var winMin:Class;
        
        [Embed(source="../../assets/icon/rightArrow.png")]
		[Bindable]private var rightArrowHidden:Class;
		[Embed(source="../../assets/icon/rightArrowDown.png")]
		private var rightArrowShow:Class;
					
		private var projectRow:Array=new Array();
		private var winH:int;

		[Bindable]
		private var winStatus:String="maximized";
		[Bindable]
		private var prjDesc:String="";
		
		[Bindable]
            public var menuBarCollection:XMLListCollection;
    
            private var menubarXML:XMLList =
                <>
                    <menuitem label="Menu" data="top">
                        <menuitem label="Launch Project Tab"/>
                    </menuitem>
                </>;
        private var _dataProvider:Project;
		private var _status:String;
		// setter and getter of status propriety
		// the status change the icon and the color of the label
		public function set status(value:String):void
		{
			_status = value;
			projectStatus.text=value;
			switch(_status.toLowerCase())
			{
	    	case "terminated":
	    		statusIcon.source=prjTerminated;
	    		projectStatus.setStyle ("color","#000000")
				break;
			case "active":
				statusIcon.source=prjActive;
	    		projectStatus.setStyle ("color","#95E840")
				break;
			case "draft":
				statusIcon.source=prjDraft;
	    		projectStatus.setStyle ("color","#ADADAD")
				break;
			case "completed":
				statusIcon.source=prjCompleted;
	    		projectStatus.setStyle ("color","#607FB2")
				break;
			case "scheduled":
				statusIcon.source=prjScheduled;
	    		projectStatus.setStyle ("color","#9579C2")
				break;
			case "in danger":
				statusIcon.source=prjInDanger;
	    		projectStatus.setStyle ("color","#ff5F50")
				break;
			default:
	    	    trace("Out of range");
	        break;
			}
		}
		public function get status():String{
			return _status;
		}
		// setter and getter of dataprovider

		public function set dataProvider(temp:Project):void{
			_dataProvider = temp;
			projectName.text=_dataProvider.name;
			status=_dataProvider.status;
			prjDesc=_dataProvider.description;
			for (var i:int;i<_dataProvider.contests.length;i++){
				var cnt:Contest=_dataProvider.contests[i];
				var prjRow:ContestRow=new ContestRow();
				content.addChild(prjRow);
				prjRow.dataProvider=cnt ;
				prjRow.rowNum=i;
				prjRow.projectId=_dataProvider.id;
			}
			menuBarCollection = new XMLListCollection(menubarXML);
		}
		public function get dataProvider():Project{
			return _dataProvider;
		}
		public function collapse():void {
			winCtrlBut.source=winMax;
			winStatus="minimized";
			contents.visible = false;
			contents.includeInLayout = false;
			/* winH=this.height;
			this.height=27; */
		}
		public function expand():void {
			winCtrlBut.source=winMin;
			winStatus="maximized";
			contents.visible = true;
			contents.includeInLayout = true;
			/* this.height=winH; */
		}
		public function isexpand():Boolean
		{
			return winStatus=="maximized";
		}
		//function called from - or + icon
		private function winResize():void {
			if (winStatus=="maximized"){
				collapse();
			}
			else {
				expand();
			}
		}
		
		//function called view project description is clicked
		
		private var showdesc:int = 0;
		private var donealigning:int =0;
		
		private function toggleDescription():void {
			if (showdesc == 0) showdesc = 1;
			else showdesc = 0;
			
			
			if (showdesc == 1)
			{
			projectDesc.text = prjDesc;
			//projectDesc.x = 0;
//			rightArrowImg.source = rightArrowShow;
      //open.styleName = "blackBtnOpen";
      Table.height=80;
      if (!donealigning)
      {
      projectDesc.x -=25;
      donealigning = 1;
      }

      }
      else
      {
      projectDesc.text = "";
//			rightArrowImg.source = rightArrowHidden;
      //open.styleName = "blackBtn";
      Table.height=46;
      }

    }

     /**
	 * Click on the add contest button.
	 */
        private function addcontest():void {
           var prjCt:ProjectsContainer;
        	var p:DisplayObjectContainer=parent;
        	while(p!=null){
        		if(p is ProjectsContainer)break;
        		p=p.parent;
        	}
        	if(p==null)return ;
			prjCt=p as ProjectsContainer;
			var dict:Dictionary=new Dictionary();
			var tabDict:Dictionary = new Dictionary();
			tabDict["columnNum"] = 1;

			prjCt.widgetFramework.addWidgetEx2("Launch Contest","Launch Contest","Launch Contest",dict, tabDict);
        }
		
		
		 // Event handler for the MenuBar control's itemClick event.
            private function openNewTabHandler(event:MouseEvent):void  {
            
                    var prjCt:ProjectsContainer;
        			var p:DisplayObjectContainer=parent;
        			while(p!=null){
        				if(p is ProjectsContainer)break;
        				p=p.parent;
        			}
        			if(p==null)return ;
					prjCt=p as ProjectsContainer;
					var props:Dictionary=new Dictionary();
					props["pid"]=_dataProvider.id;
					props["openAll"]="True";
					
					var dict:Dictionary=new Dictionary();
					dict["name"]=_dataProvider.name;
					dict["allowclose"]="true";
					dict["columnNum"]=3;
					prjCt.widgetFramework.addTabCtlWithProperties(dict);
					
					dict["tabName"]=_dataProvider.name;
					dict["name"]="My Projects";
					dict["title"]="My Projects";
					dict["widgetConfig"]=props;
					dict["minHeight"]=400;
					prjCt.widgetFramework.addWidgetWithProperties(dict );
					
					dict["name"]="Contest Monitor";
					dict["title"]="Contest Monitor";
					prjCt.widgetFramework.addWidgetWithProperties(dict );
					
					dict["name"]="Submission Viewer";
					dict["title"]="Submission Viewer";
					prjCt.widgetFramework.addWidgetWithProperties(dict );
					
					
					/*
					prjCt.widgetFramework.addWidgetEx2(_dataProvider.name,"My Projects","My Projects",dict );
					prjCt.widgetFramework.addWidgetEx2(_dataProvider.name,"Contest Monitor","Contest Monitor",dict );
					prjCt.widgetFramework.addWidgetEx2(_dataProvider.name,"Submission Viewer","Submission Viewer",dict );
					*/
                     
            }
	]]>
</mx:Script>
  <mx:HBox id="projectTitle" styleName="titleBar" width="100%" height="27" backgroundSize="100%"
      verticalScrollPolicy="off" horizontalScrollPolicy="auto" click="winResize()"
      useHandCursor="true" buttonMode="true"
      rollOver="{projectTitle.styleName='titleBarHover'}" rollOut="{projectTitle.styleName='titleBar'}">
    <mx:Image width="16" height="16" id="winCtrlBut" init="winResize()" buttonMode="true" source="{winMin}"/>
    <mx:Label text="Label" id="projectName" styleName="nameLabel" buttonMode="true" />
    <mx:Spacer width="100%" />
    <mx:Label id="projectStatus" styleName="statusLabel" />
    <mx:Image id="statusIcon" />
  </mx:HBox>
  <mx:VBox id="contents" paddingLeft="4" paddingRight="4" width="100%" verticalGap="0" initialize="winResize()">
    <mx:Canvas width="100%" styleName="descPanel" backgroundSize="100%" height="46" id="Table"
        verticalScrollPolicy="off" horizontalScrollPolicy="off">
      <mx:Button id="open" buttonMode="true" styleName="viewDescButton" y="6" label="View Description"
          left="10" height="29" click="toggleDescription()"/>
      <mx:Button id="launch" buttonMode="true" styleName="openNewTabButton" y="6" label="Open in New Tab"
          left="{open.x+open.width+10}" height="29" click="openNewTabHandler(event)"/>

      <mx:Button y="6" buttonMode="true" label="Add New Contest" height="29"
          right="28" styleName="addContestBtn" click="addcontest()"/>
      <mx:HBox x="0" y="47" height="100%" width="100%" backgroundColor="#e0e0e0"
          paddingTop="8" paddingLeft="5" paddingRight="5">
      <mx:Label width="100%" id="projectDesc" fontSize="12" color="#333333" textAlign="left" />
      </mx:HBox>
    </mx:Canvas>
    <mx:HBox width="100%" height="15" styleName="title" id="Hbox1"
        verticalScrollPolicy="off" horizontalScrollPolicy="off">
      <mx:Label width="100%" textAlign="center" id="lblStartDate" text="START" />
      <mx:Label width="100%" textAlign="center" id="lblEndDate" text="END" />
      <mx:Label width="100%" textAlign="center" id="lblRegistrants" text="REGISTRANTS" />
      <mx:Label width="100%" textAlign="center" id="lblSubmissions" text="SUBMISSIONS" />
      <mx:Label width="100%" textAlign="center" id="lblForumPosts" text="FORUM" />
      <mx:Label width="100%" textAlign="center" id="lStatus" text="STATUS" />
      <mx:Label width="20" textAlign="center" id="lbledit" text="" />
    </mx:HBox>
    <mx:VBox id="content" paddingLeft="0" paddingRight="0" verticalGap="0" width="100%" />
  </mx:VBox>
</mx:VBox>
