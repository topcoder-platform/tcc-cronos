<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           width="100%"
           height="100%"
           horizontalScrollPolicy="off"
           verticalScrollPolicy="off"
           creationComplete="init()">
    <mx:HTTPService id="requestSchedule"
                    url="data/launch_a_contest/schedule.xml"
                    resultFormat="e4x"
                    result="loadSchedule(event)"
                    fault="Helper.showAlertMessage(event.fault.faultString);">
    </mx:HTTPService>
    <mx:Script>
        <![CDATA[
            import mx.controls.Alert;
            import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.LaunchWidget;
            import mx.rpc.events.ResultEvent;
            import com.topcoder.flex.Helper;
            import com.topcoder.flex.util.date.DateUtil;
			import mx.controls.ButtonLabelPlacement; // BUGR-1501	

            [Bindable]
            public var mainWidget:LaunchWidget;
			
            [Bindable]
            private var rangeEndDate:Date;
            
            [Bindable]
            private var rangeStartDate:Date;
		
			[Bindable]
            private var scheduleTypes:XML;
            
            [Bindable]
            public var curContestType:Number;

            public static const ETtoUTC:int=1000 * 60 * 60 * 5;
            private static const OneHour:Number=1000 * 60 * 60;

            public function initData():void {
                termCheckBox.selected=false;

                var startDate:Date=null;
                var endDate:Date=null;

                if (mainWidget.competition != null) {
                    var startTime:Object=mainWidget.competition.startTime;
                    var endTime:Object=mainWidget.competition.endTime;
                }

                //
                // Updated to avoid 'duplicate variable definition' warning.
                // @since Flex Cockpit Launch Contest - Integrate Software Contests v1.0
                //
                var dataStrArr:Array=null;
                var timeStrArray:Array=null;
                var timeStr:String=null;

                if (startTime != null) {
                    var startDateStr:String=(mainWidget.studioContestType ? mainWidget.competition.startTime : mainWidget.softwareCompetition.assetDTO.productionDate) as String;

                    if (startDateStr != null) {
                        startDate=DateUtil.parseFromString(startDateStr);
                        dataStrArr=startDateStr.split("T");
                        timeStrArray=dataStrArr[1].split(".");
                        timeStr=timeStrArray[1];
                        timezoneStart.text="ET (GMT" + timeStr.substr(3, 3) + timeStr.substr(7, 2) + ")";
                    }
                }

                dfStart.selectedDate=startDate;
                setTimeControl(CmbHourStart, CmbMinuteStart, startDate);

                //
                // End Date need to be only for studio contest types and not for software.
                // @since Flex Cockpit Launch Contest - Integrate Software Contests v1.0
                //
                if (mainWidget.studioContestType) {
                    if (endTime != null) {
                        var endDateStr:String=mainWidget.competition.endTime as String;

                        if (endDateStr != null) {
                            endDate=DateUtil.parseFromString(endDateStr);
                            dataStrArr=endDateStr.split("T");
                            timeStrArray=dataStrArr[1].split(".");
                            timeStr=timeStrArray[1];
                            timezoneEnd.text="ET (GMT" + timeStr.substr(3, 3) + timeStr.substr(7, 2) + ")";
                        }
                    }

                    dfEnd.selectedDate=endDate;
                    setTimeControl(CmbHourEnd, CmbMinuteEnd, endDate);
                }
            }
            
            public function validateFields():Boolean {
                // BUGR-1475
                return validateFieldsEx2(true, false);
            }
            
            // BUGR-1475
            public function validateFieldsEx2(showMsg:Boolean, showPageName:Boolean):Boolean {
                if (dfStart.selectedDate == null) {
                    if (showMsg) {
                        Helper.showAlertMessage("Start date not selected" + (showPageName ? " at Schedule Page" : ""));
                    }
                    return false;
                }

                //
                // End Date need to be only for studio contest types and not for software.
                // @since Flex Cockpit Launch Contest - Integrate Software Contests v1.0
                //
                if (mainWidget.studioContestType) {
                    if (dfEnd.selectedDate == null) {
                        if (showMsg) {
                            Helper.showAlertMessage("End date not selected" + (showPageName ? " at Schedule Page" : ""));
                        }
                        return false;
                    }
                }

                var current:Date=new Date();
                var tzOffHours:Number=current.timezoneOffset / 60;
                var startDate:Date=getAssembleDate(dfStart, CmbHourStart, CmbMinuteStart);
                //change the start time to local time
                startDate.setTime(startDate.getTime() + (5 - tzOffHours) * OneHour);
                if (startDate.time <= current.time) {
                    if (showMsg) {
                        Helper.showAlertMessage("Start date must be in future" + (showPageName ? " at Schedule Page" : ""));
                    }
                    return false;
                }

                //
                // End Date need to be only for studio contest types and not for software.
                // @since Flex Cockpit Launch Contest - Integrate Software Contests v1.0
                //
                if (mainWidget.studioContestType) {
                    var endDate:Date=getAssembleDate(dfEnd, CmbHourEnd, CmbMinuteEnd);
                    //change the end time to local time
                    endDate.setTime(endDate.getTime() + (5 - tzOffHours) * OneHour);
                    if (endDate.time <= startDate.time) {
                        if (showMsg) {
                            Helper.showAlertMessage("End date must be after start date" + (showPageName ? " at Schedule Page" : ""));
                        }
                        return false;
                    }
                }

                if (termCheckBox.selected == false) {
                    if (showMsg) {
                        Helper.showAlertMessage("Please agree to TopCoder Direct Terms" + (showPageName ? " at Schedule Page" : ""));
                    }
                    return false;
                }

                updateData();
                return true;
            }

            private function getAssembleDate(dateField:DateField, hourComb:ComboBox, minuteComb:ComboBox):Date {
                var result:Date=dateField.selectedDate;
                var hour:Number=Number(hourComb.value);

                var resultDate:Date=new Date(result.getTime() + hour * 60 * 60 * 1000 + Number(minuteComb.value) * 60 * 1000);

                return resultDate;
            }


            private function getAssembleDateToString(dateField:DateField, hourComb:ComboBox, minuteComb:ComboBox):String {
                var result:Date=dateField.selectedDate;
                var hour:Number=Number(hourComb.value);

                var resultstr:String="";
                resultstr=resultstr + DateUtil.formatString(result.getFullYear(), 4) + "-";
                resultstr=resultstr + DateUtil.formatString(result.getMonth() + 1, 2) + "-";
                resultstr=resultstr + DateUtil.formatString(result.getDate(), 2) + "T";
                resultstr=resultstr + DateUtil.formatString(hour, 2) + ":";
                resultstr=resultstr + DateUtil.formatString(Number(minuteComb.value), 2) + ":00";

                return resultstr;
            }

            //
            // Updated to integrate software contests also.
            // @since Flex Cockpit Launch Contest - Integrate Software Contests v1.0
            //
            private function updateData():void {
                if (mainWidget.studioContestType) {
                    s_updateData();
                } else {
                    ns_updateData();
                }

                mainWidget.review.setAllValues();
            }

            //
            // Updates data for studio contest types.
            // @since Flex Cockpit Launch Contest - Integrate Software Contests v1.0
            //
            private function s_updateData():void {
                var start:Date=getAssembleDate(dfStart, CmbHourStart, CmbMinuteStart);
                start.setTime(start.getTime() + ETtoUTC);
                var end:Date=getAssembleDate(dfEnd, CmbHourEnd, CmbMinuteEnd);
                end.setTime(end.getTime() + ETtoUTC);

                var startDate:String=getAssembleDateToString(dfStart, CmbHourStart, CmbMinuteStart); //DateUtil.toString(start);
                var endDate:String=getAssembleDateToString(dfEnd, CmbHourEnd, CmbMinuteEnd); //DateUtil.toString(end);
                mainWidget.competition.startTime=startDate;
                mainWidget.competition.endTime=endDate;

                mainWidget.competition.contestData.launchDateAndTime=startDate;
                mainWidget.competition.contestData.durationInHours=Number(((end.time - start.time) / 3600000).toFixed(2));

                this.mainWidget.review.fromDate=dfStart.selectedDate;
                this.mainWidget.review.fromTime=CmbHourStart.selectedItem.label + ":" + CmbMinuteStart.selectedItem.label + " " + timezoneStart.text;
                this.mainWidget.review.toDate=dfEnd.selectedDate;
                this.mainWidget.review.toTime=CmbHourEnd.selectedItem.label + ":" + CmbMinuteEnd.selectedItem.label + " " + timezoneEnd.text;
            }

            //
            // Updates data for non studio contest types.
            // @since Flex Cockpit Launch Contest - Integrate Software Contests v1.0
            //
            private function ns_updateData():void {
                var start:Date=getAssembleDate(dfStart, CmbHourStart, CmbMinuteStart);
                start.setTime(start.getTime() + ETtoUTC);
                mainWidget.softwareCompetition.assetDTO.productionDate=start;

                this.mainWidget.review.fromDate=dfStart.selectedDate;
                this.mainWidget.review.fromTime=CmbHourStart.selectedItem.label + ":" + CmbMinuteStart.selectedItem.label + " " + timezoneStart.text;
            }

            private function setTimeControl(hourComb:ComboBox, minuteComb:ComboBox, date:Date):void {
                if (date == null) {
                    hourComb.selectedIndex=0;
                    minuteComb.selectedIndex=0;
                    timezoneStart.text="ET";
                    timezoneEnd.text="ET";
                    return;
                }

                var hour:int=date.getHours();
                var am:Boolean=true;


                hourComb.selectedIndex=hour;
                var minute:int=date.getMinutes();
                minuteComb.selectedIndex=minute / 15;
            }

            private function init():void {
                var hourData:Array=new Array();
                for (var i:Number=0; i <= 23; i++) {
                    var o:Object=new Object();
                    o.label=i.toString();
                    o.data=i;
                    hourData.push(o);
                }
                var minuteData:Array=new Array();
                for (i=0; i <= 45; i+=15) {
                    var o1:Object=new Object();
                    if (i < 10)
                        o1.label='0' + i.toString();
                    else
                        o1.label=i.toString();
                    o1.data=i;
                    minuteData.push(o1);
                }
                CmbHourStart.dataProvider=hourData;
                CmbMinuteStart.dataProvider=minuteData;
                CmbHourEnd.dataProvider=hourData;
                CmbMinuteEnd.dataProvider=minuteData;
            }
            private function showfileDecsHint():void {
                    
            }

            private function startDateChanged():void {
                if (mainWidget.studioContestType) {
                    rangeEndDate=new Date(dfStart.selectedDate.getTime() - 1);
                    dfEnd.displayedMonth=rangeEndDate.getMonth();
                    dfEnd.displayedYear=rangeEndDate.getFullYear();
                    dfEnd.selectedDate=null;
                }
            }

            private function loadSchedule(e:ResultEvent):void {
                if (e != null && e.result != null && e.result is XML) {
                    scheduleTypes=e.result as XML;
                }
            }

            private function startDateOpen():void {
                var currentTime:Date=new Date();
                //change current time to UMT-5
                var tzOffHours:Number=currentTime.timezoneOffset / 60;
                currentTime.setTime(currentTime.getTime() - (5 - tzOffHours) * OneHour);
                // disable those days before the current day
                var currentDayBegin:Date=new Date(currentTime.getFullYear(), currentTime.getMonth(), currentTime.getDate());
                rangeStartDate=new Date(currentDayBegin.getTime() - 1);
            }
        ]]>
    </mx:Script>
    <mx:VBox width="100%" styleName="boxStyle" height="100%">
	<mx:HBox horizontalAlign="right" width="100%">
		<mx:Label text="Schedule" width="80%" styleName="sectionTitle" /> <!-- BUGR-1503 -->	
		<mx:Spacer width="100" />	
		<mx:Button styleName="arrowRightBtnStyle" labelPlacement="{ButtonLabelPlacement.LEFT}" label="PREVIEW CONTEST" click="this.mainWidget.previewContest()" /> <!-- BUGR-1501 -->
		<!--  <mx:Image source="@Embed('../../assets/more_info.png')"/>  BUGR-1501 -->
	</mx:HBox>
		<mx:Label text="Set the Contest Schedule" width="80%" styleName="subsectionTitle" /> <!-- BUGR-1503 -->
		<mx:Text width="100%" id="attachFiles">
            <mx:htmlText>
                <![CDATA[When scheduling your contest, consider the following: <br>
                -	Complexity. Are you allowing enough time for the members to complete the work with quality results, or will they be rushed?
                -	Pipeline. How many similar contests will be launching at the same time? See the Studio pipeline here:
                -	Selection Deadline. If you plan to be out of town or otherwise unavailable when your contest ends, you might want to alter the schedule to ensure you have time to pick your winners.
                Tips:
                -	If you're running a short contest, consider a higher prize amount to bring attention to it and increase your likelihood for more and better submissions.
                -	Consider allowing part of your contest to fall over a weekend. Members tend to have more time to work on their designs during weekend hours.
                -	Try not to end your contest during a time when you are unavailable to answer forum questions. Many members have last-minute questions before they submit.
                ]]>
            </mx:htmlText>
        </mx:Text>
        <mx:Text text="For your chosen contest type - {mainWidget.overView.studioType.selection.label} - the suggested timelines are:" />
        <mx:Label text="Min Allowable Time: {scheduleTypes.contestType.(@id==curContestType).minTime}"/>
        <mx:Label text="Average Timeframe: {scheduleTypes.contestType.(@id==curContestType).averageTime}"/>
        <mx:Label text="High Complexity: {scheduleTypes.contestType.(@id==curContestType).highComplexity}"/>
        <mx:Text>
            <mx:htmlText>
                <![CDATA[
                ** NOTE: Your contest will only launch at your selected date and time IF payment has been made. Otherwise, it will launch when payment is received. **
                ]]>
            </mx:htmlText>
        </mx:Text>
       <!-- <mx:Spacer height="5"/> BUGR-1503 -->
        <mx:VBox paddingLeft="10">
            <mx:HBox verticalAlign="middle">
                <mx:Label text="Start Date:"
                          fontWeight="bold"/>
                <mx:DateField id="dfStart"
                              yearNavigationEnabled="true"
                              width="116"
                              disabledRanges="{[ {rangeEnd: rangeStartDate} ]}"
                              change="startDateChanged()"
                              open="startDateOpen()"/>
                <mx:Spacer width="10"/>

            </mx:HBox>
            <mx:HBox verticalAlign="middle">
                <mx:Label text="Start Time:"
                          fontWeight="bold"/>
                <mx:Label text="Hour:"/>
                <mx:ComboBox id="CmbHourStart"
                             width="57"/>
                <mx:Label text="Minute:"/>
                <mx:ComboBox id="CmbMinuteStart"
                             width="57"/>

                <mx:Text id="timezoneStart"
                         text="ET"/>
            </mx:HBox>
            <mx:Spacer height="5"/>
            <mx:HBox verticalAlign="middle"
                     visible="{mainWidget.studioContestType}"
                     includeInLayout="{mainWidget.studioContestType}">
                <mx:Label text="End Date:  "
                          fontWeight="bold"/>
                <mx:DateField id="dfEnd"
                              yearNavigationEnabled="true"
                              width="116"
                              disabledRanges="{[ {rangeEnd: rangeEndDate} ]}"/>
            </mx:HBox>
            <mx:HBox verticalAlign="middle"
                     visible="{mainWidget.studioContestType}"
                     includeInLayout="{mainWidget.studioContestType}">
                <mx:Label text="End Time:  "
                          fontWeight="bold"/>
                <mx:Label text="Hour:"/>
                <mx:ComboBox id="CmbHourEnd"
                             width="57"/>
                <mx:Label text="Minute:"/>
                <mx:ComboBox id="CmbMinuteEnd"
                             width="57"/>

                <mx:Text id="timezoneEnd"
                         text="ET"/>
            </mx:HBox>
        </mx:VBox>
        <mx:Spacer height="25"/>
        <mx:VBox verticalGap="0">
            <mx:Label text="Terms and Conditions" styleName="subsectionTitle" /> <!-- BUGR-1503 -->
            <mx:Text text="Please read TopCoder's Term &amp; Conditions and indicate that you understand and agree."/>
            <mx:TextArea width="100%"
                         height="120">
                <mx:htmlText>
                    <![CDATA[                                     <font color="#000000" size="13">TopCoder Direct Terms</font>
                    These TopCoder Direct Terms ("Agreement") are an agreement between you and TopCoder, Inc. ("TopCoder," "we," "us," or "our"). You means either yourself personally, or the company on the behalf of whom you are requesting Competition Services (defined below). Each of you and TopCoder are a party to this Agreement and TopCoder and you are the parties. This Agreement governs your use of the TopCoder Direct service ("Service"). This Agreement is in addition to the Terms of Use applicable to the TopCoder website.
                    The Service allows customers to hold competitions for the development of graphics and design-related material. TopCoder makes no guarantee about the reliability, quality, performance, accuracy, or timeliness of the Service or the results obtained from the Service. You understand that any security mechanisms provided by the Service have inherent limitations and that you are responsible for determining whether the Service meets your needs.
                    You represent that you are at least 18 years old. Your use of the Service is conditioned on your acceptance without modification of all of the terms and conditions, rules, conditions, and notices on the TopCoder website, including without limitation this Agreement, as may be modified by TopCoder. TopCoder reserves the right, in its discretion, to change or modify all or any part of this Agreement at any time, effective immediately upon publish to the TopCoder website. The most current version of this Agreement can be viewed by clicking on the "Terms of Use" link on the TopCoder Direct web site. If at any time you do not agree to accept and abide by this Agreement, you should not access or use the Service.
                    PRIVACY
                    In order to operate and provide the Service, we collect certain information about you. We use and protect that information as described in the TopCoder Privacy Policy, available at: http://www.topcoder.com/tc?module=Static&d1=about&d2=privacy
                    1. SERVICES.
                    1.1 Custom Competitions. TopCoder will conduct online competitions for you among members of TopCoder’s community as designed by you on the TopCoder web site and as approved and agreed to by TopCoder (“Competition Services”). TopCoder shall have the right, but not the obligation, to review all competition documents (e.g., specifications, contest rules and requirements, prizes, etc.) and may require that you make such changes as TopCoder deems necessary in TopCoder’s sole discretion to maintain the integrity of the competitions and the platform. TopCoder reserves the right to terminate any online competition, for any reason or no reason, in its sole discretion, whether or not TopCoder has reviewed the competition documents.
                    1.2 Your Use of the Competition Services. In addition to the restrictions provided in the TopCoder Terms of Use, You agree that you will not:
                    Fail to pay for competitions initiated by you or for content used by you;
                    Manipulate the prize for a competition;
                    Circumvent or manipulate the fee structure, billing process or fees owed to TopCoder;
                    Transfer your account to another party without TopCoder’s prior written consent;
                    Copy, modify, or transfer content from the Service or any information protected by copyright and/or trademark laws except as explicitly permitted under this Agreement;
                    Use any Third Party Content in the Service which is protected by copyright and/or trademark laws unless you are able to demonstrate the possession of the necessary rights and/or licenses to such content;
                    Take any action that imposes or may impose (in our sole discretion) an unreasonable or disproportionately large load on our infrastructure;
                    Interfere or attempt to interfere with the proper working of the Competition Services or any activity conducted on the web site;
                    Harvest or otherwise collect information about users without the consent of TopCoder and the users.
                    Engage or act in a dishonest or unfair manner, or in bad faith.
                    Modify, publish, transmit, transfer or sell, reproduce, create derivative works from, distribute, perform, display, reverse engineer or in any way exploit any of the content on the web site or as part of the Competition Services except as explicitly permitted under this Agreement.
                    1.3 Transfer of Deliverables. Upon payment in full of all outstanding invoices, all work product other than Third-Party Content and Licensed Content, developed in the course of Competition Services and Consulting Services and delivered to you under this Agreement (“Deliverables”) shall be owned by you. TopCoder agrees to assign to you all of its right, title, and interest in and to such Deliverables, subject to payment of all fees.
                    1.4 Licensed Content. In the event you use or require content or software designated by TopCoder as owned or licensed by TopCoder (“Licensed Content”), whether from a TopCoder software component, widget, photo, or design catalog or otherwise, in any competition, such Licensed Content shall be licensed (and not assigned) to you in accordance with the terms of this Section 1.4. Subject to full payment of all amounts owed and this Agreement, TopCoder grants to you a non-exclusive, non-transferable license under TopCoder’s copyrights in the Licensed Content to copy, modify, prepare derivative works, distribute, publicly perform and publicly display the Licensed Content; provided, however, that you may not may not sublicense, distribute or resell the Licensed Content to any third party separate from or for use other than as incorporated into the Deliverables. TopCoder retains all right, title and interest in and to the Licensed Content. Any use of the Licensed Content beyond the scope of the licenses expressly granted herein is prohibited. You shall retain all copyright notices and authorship credits for the Licensed Content in the Deliverable and associated documentation. Nothing in this Agreement shall be construed so as to prohibit TopCoder from reusing any Licensed Content, whether existing before or developed during or after Deliverables.
                    1.5 Third-Party Content. If you request that the Deliverables interface with, accompany, or include content or material not developed or licensed by TopCoder (“Third-Party Content”), any such Third-Party Content shall be subject to its own terms and conditions, and shall not be considered part of the Deliverables under this Agreement. You represent that you have all rights in the Third-Party Content specified or provided by you that are necessary to authorize its use in Competition Services and incorporation into the Deliverables. You agree to indemnify TopCoder for any breach of this indemnification.
                    2. DISCLAIMER OF WARRANTIES. To the extent permitted by law, the Deliverables and all TopCoder services are provided AS IS, WITH ALL FAULTS, and TOPCODER MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, STATUTORY OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE, TITLE, OR NONINFRINGEMENT. No statement by TopCoder’s personnel or otherwise shall be deemed to be a warranty by TopCoder for any purpose or to give rise to any liability on the part of TopCoder unless contained in this Agreement. The parties acknowledge and agree that the fees charged by TopCoder under this Agreement reflect the allocation of risks provided by the foregoing warranty, the limitations of liability, and other terms set forth in this Agreement, and any modification of the allocation of risks would affect the fees charged.
                    3. PAYMENT. Payment will be required upon execution of a request for Competition Services. In the event that payment does not go through (for example, if a credit card payment is rejected) TopCoder may charge interest on overdue amounts at the rate of 1.5% per month or the highest lawful rate, whichever is less. You agree to pay to TopCoder all costs of collection of overdue amounts incurred by TopCoder. You shall be responsible for all taxes under this Agreement, except those taxes based on TopCoder’s income or payroll.
                    4. TERM AND TERMINATION. The Competition Services may be terminated by TopCoder at any time, and for any reason. Notwithstanding any termination of this Agreement, you shall remain obligated to pay all fees for competitions launched and services rendered prior to termination. Section 2 (Disclaimer of Warranties), Section 3 (Payment), Section 4 (Term and Termination), Section 5 (Limitation of Liability), Section 7 (Arbitration), Section 8 (Promotion), and Section 9 (General) of this Agreement shall survive any termination.
                    5. LIMITATION OF LIABILITY. NEITHER PARTY SHALL BE LIABLE TO THE OTHER, UNDER THIS AGREEMENT OR OTHERWISE FOR ANY CLAIM ARISING OUT OF OR RELATED TO A PARTY’S PERFORMANCE OF ITS OBLIGATIONS HEREUNDER, FOR ANY INCIDENTAL, PUNITIVE, SPECIAL, CONSEQUENTIAL OR OTHER INDIRECT DAMAGES, LOSS OF PROFITS, LOSS OF DATA OR USE OF DATA OR INTERRUPTION OF BUSINESS, EVEN IF SUCH PARTY OR ITS REPRESENTATIVE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSS. IN NO EVENT SHALL TOPCODER’S LIABILITY UNDER THIS AGREEMENT EXCEED THE FEES DUE OR PAYABLE UNDER THIS AGREEMENT FOR THE SERVICE GIVING RISE TO THE CLAIM.
                    6. CLAIMS OF INFRINGEMENT. If TopCoder becomes aware or reasonably believes that a Deliverable provided to you is or is likely to become, the subject of a claim of infringement, then TopCoder shall, at its option and expense either (i) procure for you the right to use the Deliverable or portion thereof, or (ii) replace or modify the Deliverable or portion thereof to make it non-infringing, or (iii) at TopCoder’s option, accept the return of the Deliverable (or the portion thereof), and refund the undepreciated portion of the fees paid by you for that Deliverable, assuming a 12-month straight-line depreciation schedule. THIS SECTION 6 STATES THE ENTIRE LIABILITY OF TOPCODER WITH RESPECT TO INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS RELATED TO THE DELIVERABLES, LICENSED CONTENT OR THEIR USE.
                    7. ARBITRATION OPTION. For any claim arising out of the services under this Agreement (excluding claims for injunctive or other equitable relief) where the total amount of the award sought is less than $10,000, the party requesting relief may elect to resolve the dispute in a cost effective manner through non-appearance-based arbitration. In the event a party elects arbitration, they shall initiate such arbitration through an established alternative dispute resolution (“ADR”) provider mutually agreed upon by the parties (such agreement not to be unreasonably withheld). The ADR provider and the parties must comply with the following rules: (i) the arbitration shall be conducted by telephone, online and/or be solely based on written submissions, the specific manner shall be chosen by the party initiating the arbitration; (ii) the arbitration shall not involve any personal appearance by the parties or witnesses unless mutually agreed by the parties; and (iii) any judgment on the award rendered by the arbitrator may be entered in any court of competent jurisdiction. All claims brought against TopCoder must be resolved in accordance with this section. All claims filed or brought contrary to this section shall be considered improperly filed and may be dismissed for failure to abide by the procedures set forth herein.
                    8. PROMOTION. You agree to be identified as a customer of TopCoder and grant TopCoder permission to refer to you or Your company by name, tradename and/or trademark, if applicable, and to briefly describe Your business in TopCoder’s marketing material, press releases and on its websites for the purpose of promoting Your relationship with TopCoder. The undersigned represents and warrants that s/he has the right to grant such permission, and that s/he is a duly authorized representative of and such company, and s/he is able to enter into and perform this Agreement.
                    9. GENERAL. This Agreement shall be governed in all respects by the laws of the State of Connecticut, USA without giving effect to principles of conflict of laws. The parties agree to submit to the jurisdiction of the Connecticut state and federal courts located in Hartford County, Connecticut for any claim relating to this Agreement which is not brought for arbitration pursuant to Section 7 above. The United Nations Convention for the International Sale of Goods shall not apply to this Agreement. All notices under this Agreement shall be in writing and shall be deemed to be made when delivered by overnight courier service to the Legal Department of such party at the address set forth on the first page of this Agreement, or to such other address as either party may specify by notice. If one party fails to enforce a provision of this Agreement, it shall not be precluded from enforcing the same provision at another time. If any provision of this Agreement is deemed unenforceable or invalid by law or by a court decision, the provision shall be changed and interpreted if possible to accomplish the intent of the provision within the constraints of the law. In the event the provision may not be so changed or interpreted, then only that provision, and not the entire agreement, shall be invalidated. Notwithstanding any provision to the contrary in this Agreement, if either party is prevented from complying, either totally or in part, with any of its obligations under this Agreement because of matters outside such party’s reasonable control (i.e., a force majeure event), then upon written notice to the other party, such obligations will be suspended during the period of such disability. Nothing contained in this Agreement shall be construed as creating any agency, partnership, or other form of joint enterprise between the parties. You may not assign this Agreement in whole or in part without the prior written consent of TopCoder. Subject to the foregoing, this Agreement shall be binding on the parties and their permitted assigns. Each party represents to the other party that it has the full corporate right, power and authority to enter into this Agreement and perform its obligations hereunder; and that when executed and delivered, this Agreement will constitute its legal, valid and binding obligation enforceable against it in accordance with its terms.]]>
                </mx:htmlText>
            </mx:TextArea>
            <mx:CheckBox id="termCheckBox"
                         label="I have read and agree to these terms."/>
        </mx:VBox> 
    </mx:VBox>
</mx:Canvas>
