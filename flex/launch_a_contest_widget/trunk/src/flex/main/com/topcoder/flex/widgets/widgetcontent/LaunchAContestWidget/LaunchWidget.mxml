<?xml version="1.0" encoding="utf-8"?>
<tc:LaunchWidgetCodeBehind xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:pages="com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.com.*" styleName="NewWidgetPanel"
    xmlns:tc="com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.*" 
    width="600" initialize="initWidget()" verticalScrollPolicy="off"     creationComplete="onCreateComplete(1)" >
    <mx:Style source="Style.css" />

    <mx:Script>
        <![CDATA[
        	import mx.events.CloseEvent;
        	import mx.managers.PopUpManager;
            import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.data.TcPurhcaseOrderPaymentData;
        	import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.data.CompetionType;
        	import com.topcoder.flex.model.IWidgetFramework;
        	import mx.rpc.soap.SOAPHeader;
		    import mx.controls.Image;
            import mx.effects.Resize;
            import mx.events.ResizeEvent;
            import mx.events.StateChangeEvent;
            import mx.events.EffectEvent;
            import mx.effects.Fade;
            import mx.containers.HBox;
            import flash.net.URLLoader;
            import flash.net.URLRequest;
            import flash.events.Event;
            import com.topcoder.flex.Helper;
            import flash.utils.Timer;
            import flash.events.TimerEvent;
            import mx.events.SliderEvent;
		    import mx.core.Application;
		    import mx.rpc.events.ResultEvent;
		    import mx.controls.Alert;
		    import mx.rpc.events.FaultEvent;
		    import mx.rpc.xml.SchemaTypeRegistry;

    		// BUGR-1141
    		[Bindable]
    		private var stepNumber:int = 1;
    		
    		[Embed(source="../assets/done.png")] 
    		private var doneImage:Class; 
		
		    private var username:String=Application.application.parameters.username;
		    private var password:String = "";
		    private var blazedsendpoint:String= Application.application.parameters.blazedsendpoint;
	   
		    private var projectServiceFacadeWsdl:String=Application.application.parameters.projectServiceFacadeWsdl;
	        private var contestServiceFacadeWsdl:String=Application.application.parameters.contestServiceFacadeWsdl;   
	     
 
	        [Bindable]
	        private var isAdmin:Boolean;
	        private var _tcDirectProjectId:String;
	        
	        
	        /**
	         * Represents the height of this widget on different states. BUGR-1134
	         */
	        private var INITIAL_WIDGET_HEIGHT:int = 460;
	       	private var CONTEST_SELECTION_HEIGHT:int = 510;
	       	private var OVERVIEW_HEIGHT:int = 770; // BUGR-1204 was 730
	       	private var DETAILS_HEIGHT:int = 657;
	       	private var SPECIFICATIONS_HEIGHT:int = 920; // BUGR-1362
	       	private var ATTACH_FILES_HEIGHT:int = 660;
	       	private var SCHEDULE_HEIGHT:int = 860;
	       	private var REVIEW_HEIGHT:int = 1165;
	       	private var ACTIVATE_HEIGHT:int = 930;

		    private static const WSSE_SECURITY:QName = new QName( "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "Security" );
            
        	public static function getHeader(username:String, password:String):SOAPHeader {
    			var userToken:String = "UsernameToken-"+Math.round(Math.random()*999999).toString();
    			var headerXML : XML =  <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
             			<wsse:UsernameToken wsu:Id={userToken} xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'>
    	            		<wsse:Username>{username}</wsse:Username>
    	            		<wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest">{password}</wsse:Password>
             			</wsse:UsernameToken>
          			</wsse:Security>;
          		var header : SOAPHeader = new SOAPHeader( WSSE_SECURITY, headerXML );
          		return header;
			}
	       	
	        public function set tcDirectProjectId(projectID:String):void
	        {
	        	_tcDirectProjectId=projectID;
	        }

        	public function closeWidget():void{
        		resetWidget();
        		container.startMinimize();
        	}
        
        
        public function get tcDirectProjectId():String
        {
        	return _tcDirectProjectId;
        }
	    private function initWidget():void{
		getDataService();
           }

	    private function getDataService():void
	    {	
		    dataservice.getPassword();
		    //dataservice.isUserInRole.send();
        }

	    private function processPassword(e:ResultEvent): void
	    {
		//Alert.show("--------"+e.result.toString());
		if(e!=null && e.result!=null){
			password = e.result.toString();
			
		}

		//Alert.show("========" + password);
		initComponent();

	    }
	    
	    

	    /*private function processRole(e:ResultEvent): void
	    {
			//Alert.show("--------"+e.result.toString());
			if(e!=null && e.result!=null){
				isAdmin=e.result as Boolean;
				activate.wf1.byPass.enabled=isAdmin;
			}
	    }*/
            
            
            
            private function initComponent():void {
            	// modified lines below for BUGR-1134
                launchWdt.height = 0;
                this.currentState = "ContestSelectionState";
                this.height = 460;
                mainPanel.height = 0;
                mainPanel.visible = false;
                mainPanel.horizontalScrollPolicy = "false";
                
                back.visible = false;
                //read hints.xml data
                getData(null);

				
		details.widgetHeight = 940; // BUGR-1134
                specf.widgetHeight = 800;
                attch.height = 600;
		sched.height = 750; 
		overView.height = 645; // BUGR-1134
		review.height = 1100; // BUGR-1134
				
		initialWdt.mainWidget = this;
		contestSelect.mainWidget = this;
		overView.mainWidget = this;
		details.mainWidget = this;
                specf.mainWidget = this;
                attch.mainWidget = this;
                sched.mainWidget = this;
    		review.mainWidget = this;
  		activate.mainWidget = this;

                // initialize web-services
                initWebServices();

		  initialWdt.init();

				 // BUGR-1141
				 setCurStep(step1box);
				 setNextStep(step2box);
				 setNextStep(step3box);
				 setNextStep(step4box);
				 setNextStep(step5box);
				 setNextStep(step6box);
				 setNextStep(step7box);
				 setNextStep(step8box);
				 stepNumber = 1;
				 onCreateComplete(2)
		
            }
            
            private function initWebServices():void {
                var header:SOAPHeader=getHeader(username,password);
                
                // initialize contest service facade ws.
			    ContestServiceFacadeBean.clearHeaders();
			    ContestServiceFacadeBean.addHeader(header);
			    this._csws = ContestServiceFacadeBean;
			    
			    // initialize project service facade ws.
			    ProjectServiceFacadeBean.clearHeaders();
			    ProjectServiceFacadeBean.addHeader(header);
			    this._pws = ProjectServiceFacadeBean;
            }
            
            private var flag:int=0;
            private function onCreateComplete(f:int):void
            {
            	flag=flag+f;
            	
            	if(flag==3 && competition && competition.competitionId>0)
            	{
            		flag=4;
            		//var type:CompetionType = new CompetionType();
        			var competitionType:String = "STUDIO";
        			competition.type = competitionType;
            		startLaunchProcess();
            		next();
            	}
            }
            
            
            //after loading the xml file, fetch data
            private function getData(event:Event):void {
//                var loader:URLLoader = event.target as URLLoader;
                configurableText = <launch_contest>
  <steps>
    <details>
      <fields>
        <field name="Title">
            <hint>The title you choose is what competitors will see in the active contests list, so be as detailed as possible. Also, listing the entire prize purse in the title helps draw attention to your contest. For example, "$750 Furniture Wholesale Company Logo Design" works better than simply "New Logo".</hint>
        </field>
        <field name="Introduction">
            <hint>This short paragraph will serve as the summary at the top of your contest description page. No need to get into full details here; just give an attention-grabbing brief description of the project so members can quickly determine if they are interested.</hint>
        </field>
        <field name="Primary Goal">
            <hint>Try to separate out important information into clear sections of your description. The following areas should be covered:

<b>What are the Primary Goals for This Contest?</b>
The more information you can provide about your decision to get this design produced, the better.

<b>Who is Your Target Audience?</b>
Designers will take completely different approaches to a concept depending on the target audience. For example, a web banner ad that is meant to draw in financial advisors in their 50s will look vastly different from an ad targeting young college-age women. You should provide a summary of your target audience here.

<b>Does This Project Have Any Branding Guidelines?</b>
You should provide as much information about the branding guidelines as possible. Give extremely clear instructions, such as specific color identification numbers or the exact amount of clear space your logo must have between design elements. 

<b>Are There Designs, Websites, etc. that You Like or Dislike? Why?</b>
You may be inspired by navigational elements, layout, color schemes, etc. on other web sites, which is great to share with the designers. Keep in mind, you should never encourage a designer to copy any design elements. 

<b>What Criteria Must the Designers Meet to Win This Contest?</b>
Specific limitations (such as restricting a color or a specific layout style) and specific requirements (such as the inclusion of your company logo) will help the competitors meet the basic needs of your competition, but you should also list high-level criteria and your overall judging methodology. 
	</hint>
        </field>
        <field name="Target Audience">
            <hint>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam erat purus, ultricies eget, porta ornare, suscipit in, libero. Curabitur id tortor. Etiam tristique ullamcorper lacus. Pellentesque eleifend. Mauris lacus mi, dignissim vel, iaculis id, tempus eget, turpis. Nulla ultrices congue arcu. Donec a neque at tortor vulputate luctus. Duis pulvinar suscipit magna. Nam eget orci.</hint>
        </field>
        <field name="Brand Guidelines">
            <hint>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam erat purus, ultricies eget, porta ornare, suscipit in, libero. Curabitur id tortor. Etiam tristique ullamcorper lacus. Pellentesque eleifend. Mauris lacus mi, dignissim vel, iaculis id, tempus eget, turpis. Nulla ultrices congue arcu. Donec a neque at tortor vulputate luctus. Duis pulvinar suscipit magna. Nam eget orci.</hint>
        </field>
        <field name="Like and Dislikes">
            <hint>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam erat purus, ultricies eget, porta ornare, suscipit in, libero. Curabitur id tortor. Etiam tristique ullamcorper lacus. Pellentesque eleifend. Mauris lacus mi, dignissim vel, iaculis id, tempus eget, turpis. Nulla ultrices congue arcu. Donec a neque at tortor vulputate luctus. Duis pulvinar suscipit magna. Nam eget orci.</hint>
        </field>
        <field name="Criteria">
            <hint>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam erat purus, ultricies eget, porta ornare, suscipit in, libero. Curabitur id tortor. Etiam tristique ullamcorper lacus. Pellentesque eleifend. Mauris lacus mi, dignissim vel, iaculis id, tempus eget, turpis. Nulla ultrices congue arcu. Donec a neque at tortor vulputate luctus. Duis pulvinar suscipit magna. Nam eget orci.</hint>
        </field>
        <field name="Colors">
            <hint>You should list specific color requirements here in values of RGB/Hex codes for web designs and CMYK or Pantone colors for print. If you dont have specific branding colors you need to stick to, feel free to give general directions such as, "Please use blue and orange." Or "Please do not use yellow."</hint>
        </field>
        <field name="Fonts">
            <hint>Designers can only submit fonts they have permission to redistribute, so keep that in mind when requiring specific fonts. Otherwise, feel free to give general instructions such as, "Do not use script fonts or anything that looks too feminine." Or "We need a cartoonish font that is kid-friendly."</hint>
        </field>
        <field name="Size">
            <hint>Provide exact dimensions in pixels or inches in you have them. If you are unsure, describe where your design will be used and ask for standard sizing. Examples: "The web banner must be exactly 300 pixels wide by 90 pixels tall." Or "The logo must be wider than it is tall. Tall logos wont fit in our websites masthead."</hint>
        </field>
        <field name="Additional Requirements or Restrictions">
            <hint>List any other instructions here that dont fit in the boxes above. Example: "All text must be surrounded by at least 200 pixels of white space."</hint>
        </field>
        <field name="File Description">
            <hint>Please provide a short description such as "Our company logo" or "PSD files of our current web site."</hint>
        </field>
      </fields>
      <hints>
        <hint field="Introduction"></hint>
        <hint field="Primary Goals"></hint>
        <hint field="Introduction"></hint>
        <hint field="Introduction"></hint>
        <hint field="Introduction"></hint>
        <hint field="Introduction"></hint>
      </hints>
    </details>
  </steps>
</launch_contest>;
                details.titleHint = configurableText.steps.details.fields.field.(@name == "Title").hint;
                details.introductionHint = configurableText.steps.details.fields.field.(@name == "Introduction").hint;
                details.primaryGoalHint = configurableText.steps.details.fields.field.(@name == "Primary Goal").hint;
                details.targetAudienceHint = configurableText.steps.details.fields.field.(@name == "Target Audience").hint;
                details.brandGuidelinesHint = configurableText.steps.details.fields.field.(@name == "Brand Guidelines").hint;
                details.likeAndDislikesHint = configurableText.steps.details.fields.field.(@name == "Like and Dislikes").hint;
                details.criteriaHint = configurableText.steps.details.fields.field.(@name == "Criteria").hint;
                specf.ColorsHint = configurableText.steps.details.fields.field.(@name == "Colors").hint;
                specf.FontsHint = configurableText.steps.details.fields.field.(@name == "Fonts").hint;
                specf.SizeHint = configurableText.steps.details.fields.field.(@name == "Size").hint;
                specf.AdditionalHint = configurableText.steps.details.fields.field.(@name == "Additional Requirements or Restrictions").hint;
                attch.FileDescHint = configurableText.steps.details.fields.field.(@name == "File Description").hint;
            }
            
            
            private function next(event:EffectEvent = null):void {
                if (this.currentState == "ContestSelectionState"){
                    if (contestSelect.contestType.selectedValue == null) {
                        Helper.showAlertMessage("Please select a contest type!");
                        return;
                    }
                   //Currently only implement Studio constest type
                   if (contestSelect.contestType.selectedValue != "STUDIO"){
                       return;
                   }
                   this.currentState = "OverViewState";
                   save.visible = false;
                   this.height = OVERVIEW_HEIGHT;  // BUGR-1134
                   back.visible = true;
                   
                   review.cstTypeStep1 = contestSelect.contestType.selectedValue.toString();
                   setPreviousStep(step1box); // BUGR-1141
                   setCurStep(step2box);// BUGR-1141
                   
                   result.type = contestSelect.contestType.selectedValue;
                   //bottemline.height=mainPanel.height-710;
                }
                else if(this.currentState == "OverViewState"){
                    //validate input
					if (overView.validateFields() == false){
						return;
					}

                   this.currentState = "DetailsState";
                   save.visible = false;
                   
                   review.cstTypeStep2 = overView.studioType.selection.label;
                   review.firstPrize = overView.firstPlace.text;
                   review.secondPrize = overView.secondPlace.text;
                   review.thirdPrize = overView.thirdPlace.text;
                   review.fourthPrize = overView.fourthPlace.text;
                   review.fifthPrize = overView.fifthPlace.text;
                   review.adminFee = overView.adminf.text;
                   review.contestTotal = overView.cntstTtl.text;
                   
                   this.height = DETAILS_HEIGHT;  // BUGR-1134
                    setPreviousStep(step2box);
                   setCurStep(step3box);
                    //bottemline.height=mainPanel.height-530;
                }
                else if(this.currentState == "DetailsState"){
                   //validate input
                   if (details.validateFields() == false){
                   		return;
                   }
                   specf.requestFileTypes.send();
                   this.currentState = "SpecificationsState";
                   save.visible = false;
                   this.height = SPECIFICATIONS_HEIGHT;  // BUGR-1134
                   
                   review.contentTitleStr = details.ctInput.text;
                   review.IntroductionStr = details.introInput.text;
		   review.glsInputStr = details.glsInput.text;
                  setPreviousStep(step3box);
                   setCurStep(step4box);
                    //bottemline.height=mainPanel.height-1000;
                }
                else if(this.currentState == "SpecificationsState"){
                   //validate input
                   if (specf.validateFields() == false){
                   		return;
                   }
                   
                   this.currentState = "AttachFilesState";
                   save.visible = false;
                   
                   review.colorInputStr = specf.colorInput.text;
                   review.fontInputStr = specf.fontInput.text;
                   review.sizeInputStr = specf.sizeInput.text;
                   review.addReInputStr = specf.addReInput.text;
				 /* since BUGR-1039 
					var fm:String = "";
				   if (specf.psdChb.selected){
                      fm = specf.psdChb.label;
                   }
                   if (specf.aiChb.selected){
                       if (fm == "")
                           fm = specf.aiChb.label;
                       else
                           fm += ", "+specf.aiChb.label;
                   }
                   if (specf.epsChb.selected){
                       if (fm == "")
                           fm = specf.epsChb.label;
                       else
                           fm  += ", "+specf.epsChb.label;
                   }
                   
                   if (specf.fileFormatInput.text != "")
                       review.fileFormatInputStr = fm+", "+specf.fileFormatInput.text;
				  */
                   review.fileFormatInputStr = competition.contestData.finalFileFormat;
                   this.height = ATTACH_FILES_HEIGHT;  // BUGR-1134
                    setPreviousStep(step4box);
                   setCurStep(step5box);
                    //bottemline.height=mainPanel.height-400;
                }
                else if(this.currentState == "AttachFilesState"){
                   //validate input
				  sched.curContestType = Number(overView.studioType.selectedValue);
                   sched.requestSchedule.send();

                   this.currentState = "ScheduleState";
                   save.visible = false;
                   
                   this.height = SCHEDULE_HEIGHT;  // BUGR-1134
                     setPreviousStep(step5box);
                   setCurStep(step6box);
                   //bottemline.height=mainPanel.height-800;
                }
                else if(this.currentState == "ScheduleState"){
					if (sched.validateFields() == false){
						return;
					}	
					
                   this.currentState = "ReviewState";
                   save.visible = true;

                   review.fromDate = sched.dfStart.selectedDate;
                   review.fromTime = sched.CmbHourStart.selectedItem.label+":"+sched.CmbMinuteStart.selectedItem.label+" "+ sched.AMPMStart.selectedValue.toString()+" "+sched.timezoneStart.text;
                   review.toDate = sched.dfEnd.selectedDate;
                   review.toTime = sched.CmbHourEnd.selectedItem.label+":"+sched.CmbMinuteEnd.selectedItem.label+" "+ sched.AMPMEnd.selectedValue.toString()+" "+sched.timezoneEnd.text;

                   review.setAllValues();

                   this.height = REVIEW_HEIGHT;  // BUGR-1134
                      setPreviousStep(step6box);
                   setCurStep(step7box);
                    //bottemline.height=mainPanel.height-1700;
                } else if (this.currentState == "ReviewState") {
                    this.currentState = "ActivateState";
                    save.visible = false;
                    this.height = ACTIVATE_HEIGHT;
                     setPreviousStep(step7box);
                    setCurStep(step8box);
                    setButton(1);
                     //bottemline.height=mainPanel.height-800;

                    activate.contentTitleStr = review.contentTitleStr;
                    activate.contestTotal = review.adminFee;
                    
                    activate.initData();
                } else if (this.currentState == "ActivateState") {
                    save.visible = false;
                    var index:int = activate.goToNext();
                    setButton(index);
                }
                
            }

	     private function handleFault(event:FaultEvent):void
		{
			Helper.showAlertMessage(event.fault.faultDetail);
		}
        
            
            private function setButton(index:int):void {
                switch (index) {
                    case 1:
                        goNext.label = "Confirm Order";
                        goNext.visible = true;
                        back.visible = true;
                        break;
                    case 2:
                        goNext.label = "Submit for Processing";
                        goNext.visible = true;
                        back.visible = true;
                        break;
                    case 3:
                        goNext.label = "Submit Purchase";
                        goNext.visible = true;
                        back.visible = true;
                        break;
                    case 4:
                        //goNext.visible = false;
                        //back.visible = false;
                        break;
                    case 5:
                        //goNext.visible = false;
                        //back.visible = false;

                        //submitPurchase();
                        break;
                    default:
                        goNext.label = "continue >>";
                        goNext.visible = true;
                        back.visible = true;
                }       
            }
            
            private function previous():void {
                if (this.currentState == "ActivateState") {
                    var index:int = activate.gotoPrev();
                    setButton(index);
                    if (index <= 0) {
                        this.currentState = "ReviewState";
                        save.visible = true;
                        this.height = REVIEW_HEIGHT; // BUGR-1134

                       setCurStep(step7box);
                       setNextStep(step8box); // BUGR-1141
                    }
                } else if (this.currentState == "ReviewState"){
                   this.currentState = "ScheduleState";
                   this.height = SCHEDULE_HEIGHT;  // BUGR-1134

                   setCurStep(step6box);
                   setNextStep(step7box); // BUGR-1141
                   //step7Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "ScheduleState"){
                   this.currentState = "AttachFilesState";
                   this.height = ATTACH_FILES_HEIGHT;  // BUGR-1134

                   setCurStep(step5box);
                   setNextStep(step6box); // BUGR-1141
                   //step6Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "AttachFilesState"){
                   this.currentState = "SpecificationsState";
                   this.height = SPECIFICATIONS_HEIGHT;  // BUGR-1134

                   setCurStep(step4box);
                   setNextStep(step5box); // BUGR-1141
                   //step5Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "SpecificationsState"){
                   this.currentState = "DetailsState";
                   this.height = DETAILS_HEIGHT;  // BUGR-1134
	    
                  setCurStep(step3box);
                  setNextStep(step4box); // BUGR-1141
                  // step4Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "DetailsState"){
                   this.currentState = "OverViewState";
                   this.height = OVERVIEW_HEIGHT; // BUGR-1134
                  setCurStep(step2box);
                   setNextStep(step3box); // BUGR-1141
                   //step3Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "OverViewState"){
                   this.currentState = "ContestSelectionState";
                   this.height = CONTEST_SELECTION_HEIGHT; // BUGR-1134
                   back.visible = false;
     
                   setCurStep(step1box);
                   setNextStep(step2box); // BUGR-1141
                   //step2Text.setStyle("color", "#a8a8a8");
                }
            }
            public function goToStep1():void {
                previous();
                previous();
                previous();
                previous();
                previous();
                previous();
            }
            
            public function goToStep2():void {
                previous();
                previous();
                previous();
                previous();
                previous();
            }
            
            public function goToStep3():void {
                previous();
                previous();
                previous();
                previous();
            }
            
            public function goToStep4():void {
                previous();
                previous();
                previous();
            }
            
            public function goToStep5():void {
                previous();
                previous();
            }
            
            public function goToStep6():void {
                previous();
            }

	    private function setCurStep(stepBox:Box):void { // BUGR-1141
                var box:HBox = stepBox.parent as HBox;
                if (box.numChildren == 3) {
                    var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#CC0000");
                }
                box.styleName = "curStepBgr";
                // BUGR-1141
                if(box.numChildren == 4) {
                	box.removeChildAt(box.numChildren - 1);
                }
                stepBox.styleName = "curStep";
                
            }
            
            private function setNextStep(stepBox:Box):void {  // BUGR-1141
            	var box:HBox = stepBox.parent as HBox;
                if (box.numChildren == 3) {
                	var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#666666");
                    var step:Box = box.getChildAt(0) as Box;
                }
                box.styleName = "prevStepBgr";
            	stepBox.styleName = "nextStep";
            	stepNumber--;
            }
            
            private function setPreviousStep(stepBox:Box):void {  // BUGR-1141
            	var box:HBox = stepBox.parent as HBox;
                if (box.numChildren == 3) {
                	var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#666666");
                    var step:Box = box.getChildAt(0) as Box;
                }
				// BUGR-1141
                box.styleName = "prevStepBgr";
                var completed:Image = new Image();
                completed.source = doneImage;
                box.addChild(completed);
                stepBox.styleName = "prevStep";
                stepNumber++;
            }
            
            private function showArrow(stepBox:Box):void {
                var box:HBox = stepBox.parent as HBox;
                if (box.numChildren == 3) {
                    var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#000000");
                }
                stepBox.styleName = "curStep";
            }
            
            private function hideArrow(stepBox:Box):void {
            	var box:HBox = stepBox.parent as HBox;
                if (box.numChildren == 3) {
                	var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#a8a8a8");
                    var step:Box = box.getChildAt(0) as Box;
                    //step.setStyle("background-image", "../assets/step_prev.png");
                }
                stepBox.styleName = "prevStep";
            }
            
            // BUGR-999
            /*private function showArrow(arrow:Image):void {
                arrow.visible = true;
                arrow.includeInLayout = true;
                var box:HBox = arrow.parent as HBox;
                if (box.numChildren == 5) {
                    var done:Image = box.getChildAt(4) as Image;
                    if (done) {
                        done.visible = false;
                        done.includeInLayout = false;   
                    }
                    var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#000000");
                }
                
            }*/
            
            /*private function hideArrow(arrow:Image):void {
                arrow.visible = false;
                arrow.includeInLayout = false;
                var box:HBox = arrow.parent as HBox;
                if (box.numChildren == 5) {
                    var done:Image = box.getChildAt(4) as Image;
                    if (done) {
                        done.visible = true;
                        done.includeInLayout = true;    
                    }
                    var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#a8a8a8");
                }
            }*/
            
            public function startLaunchProcess():void{
                initialWdt.width = 0;
                initialWdt.height = 0;
                initialWdt.visible = false;
                widgetFramework.maximize(parent);
                width=parent.width-10;
                height=parent.height-10;
                launchWdt.percentWidth = 100;
                launchWdt.percentHeight = 100;
                launchWdt.visible = true;
                // BUGR-1134 added
                mainPanel.percentWidth = 100;
                mainPanel.percentHeight = 100;
                mainPanel.visible = true;
                this.height = CONTEST_SELECTION_HEIGHT; // BUGR-1134
                
                contestSelect.initData();
                overView.initData();
                details.initData();
                specf.initData();
                attch.initData();
                
                sched.initData();
		       activate.initData();
		       //bottemline.height=mainPanel.height-contestSelect.height;
		       save.visible=false;

            }
            private function handleError(e:FaultEvent):void
            {
            	Helper.showAlertMessage(e.fault.faultString);
            }
            
            private function cancelBtn():void {
            	var alertDlg:Alert = Alert.show("Are you sure you want to cancel? Please save your work first if you want to keep this contest.",
                             "Confirmation", Alert.YES | Alert.NO, null, doCancel); 
				alertDlg.height = 150;
            	
            }
            private function doCancel(event:CloseEvent):void
            {
            	if (event.detail == Alert.YES) {
            		resetWidget();
            	}
            }
            
            private function showWebserviceError(opName:String, event:FaultEvent):void {
            	
			    if(p)
			    {
				PopUpManager.removePopUp(p);
        		p=null;
			    }
                Helper.showAlertMessage(opName + ":: " + event.fault.content + "," + event.fault.message + "," + event.fault.faultCode + "," + event.fault.faultString);
            }
        ]]>
    </mx:Script>
    
<mx:WebService id="ProjectServiceFacadeBean" 
		wsdl="{projectServiceFacadeWsdl}"> 
	<mx:operation name="createProject" 
		resultFormat="object" 
		fault="showWebserviceError('createProject', event);"> 
	</mx:operation>
	
	<mx:operation name="getAllProjects" 
		resultFormat="object" 
		fault="showWebserviceError('getAllProjects', event);"> 
	</mx:operation>
	
	<mx:operation name="processContestPurchaseOrderPayment" 
		resultFormat="object" 
		fault="showWebserviceError('processContestPurchaseOrderPayment', event);"> 
	</mx:operation>
	
	<mx:operation name="getAllDocumentTypes" 
		resultFormat="object" 
		fault="showWebserviceError('getAllDocumentTypes', event);"> 
	</mx:operation>
	
	<mx:operation name="getClientProjectsByUser" 
		resultFormat="object" 
		fault="showWebserviceError('getClientProjectsByUser', event);"> 
	</mx:operation>
	
</mx:WebService>    

<mx:WebService id="ContestServiceFacadeBean" 
		wsdl="{contestServiceFacadeWsdl}"> 
	<mx:operation name="createContest" 
		resultFormat="object" 
		fault="showWebserviceError('createContest', event);"> 
	</mx:operation>
	
	<mx:operation name="getContest" 
		resultFormat="object" 
		fault="showWebserviceError('getContest', event);"> 
	</mx:operation>
	
	<mx:operation name="processContestCreditCardPayment" 
		resultFormat="object"> 
	</mx:operation>
	
	<mx:operation name="processContestPurchaseOrderPayment" 
		resultFormat="object"> 
	</mx:operation>
	
	<mx:operation name="getAllDocumentTypes" 
		resultFormat="object" 
		fault="showWebserviceError('getAllDocumentTypes', event);"> 
	</mx:operation>
	
	<mx:operation name="getMimeTypeId" 
		resultFormat="object" 
		fault="showWebserviceError('getMimeTypeId', event);"> 
	</mx:operation>
	
	<mx:operation name="updateContest" 
		resultFormat="object" 
		fault="showWebserviceError('updateContest', event);"> 
	</mx:operation>
	
	<mx:operation name="uploadDocumentForContest" 
		resultFormat="object" 
		fault="showWebserviceError('uploadDocumentForContest', event);"> 
	</mx:operation>
</mx:WebService>

<mx:RemoteObject id="dataservice" destination="remoteDataService" endpoint="{blazedsendpoint}"
          
	 fault="Helper.showAlertMessage(event.fault.faultString);">
<mx:method name="getPassword"  result="processPassword(event)" 
	                   fault="handleError(event)"/>
	                   
 <!--<mx:method name="isUserInRole"  result="processRole(event)" 
	                   fault="handleError(event)">
   <mx:arguments>
    <role>Cockpit Administrator</role>
   </mx:arguments>
</mx:method>-->
 </mx:RemoteObject>
     
     <mx:Spacer height="5" />
     <pages:InitialWidget id="initialWdt" />
     <mx:HBox id="launchWdt" horizontalGap="0" visible="false" paddingLeft="20">
         <mx:VBox width="220" height="100%" paddingTop="0" verticalGap="0" 
                horizontalScrollPolicy="off" styleName="stepsBgr">
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="30"
                    verticalAlign="middle" styleName="stepsLabelBgr">
             		<mx:Label width="100%" height="100%" textAlign="center" text="STEP {stepNumber} of 8" styleName="stepsLabel" /> 
             </mx:HBox>   
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="40"
                    verticalAlign="middle">
                 <mx:Box width="30" height="30"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step1box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="1" styleName="whiteBoldText"/>
                </mx:Box>
            	<mx:Label id="step1Text" text="Contest Selection" fontWeight="bold" 
                        fontFamily="Arial" fontSize="14" /> 
                <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="40"
                    verticalAlign="middle">
                 <mx:Box  width="30" height="30"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10"  id="step2box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="2" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step2Text" text="Overview" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" /> 
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="40"
                    verticalAlign="middle">
                 <mx:Box width="30" height="30" 
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step3box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="3" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step3Text" text="Details" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="40"
                    verticalAlign="middle">
                 <mx:Box width="30" height="30"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step4box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="4" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step4Text" text="Specifications" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="40"
                    verticalAlign="middle" styleName="prevStepBgr">
                 <mx:Box width="30" height="30"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step5box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="5" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step5Text" text="Attach Files" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="40"
                    verticalAlign="middle" styleName="nextStepBgr">
                 <mx:Box width="30" height="30"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step6box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="6" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step6Text" text="Schedule" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="40"
                    verticalAlign="middle"  styleName="nextStepBgr">
                 <mx:Box width="30" height="30"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step7box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="7" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step7Text" text="Review" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="40"
                    verticalAlign="middle" styleName="nextStepBgr">
                 <mx:Box width="30" height="30"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step8box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="8" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step8Text" text="Activate" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
         </mx:VBox>
         <!--<mx:VRule height="100%" />-->
         <mx:VBox width="100%" height="100%" verticalGap="0" paddingRight="8" paddingLeft="20" id="mainPanel">
             <mx:Spacer height="5" />
             <pages:ContestSelection id="contestSelect"  />
             <pages:OverView id="overView"/>
             <pages:Details id="details"/>
             <pages:Specifications id="specf" />
             <pages:AttachFiles id="attch" />
             <pages:Schedule id="sched" />
             <pages:Review id="review" />
             <pages:PaymentContest id="activate" width="100%" />
			 <mx:HRule width="100%" />
             <!--<mx:Spacer  id="bottemline" height="100%"/>-->
         </mx:VBox>
     </mx:HBox>
     <mx:HBox paddingLeft="220" paddingTop="0" horizontalAlign="center" width="100%" visible="{!initialWdt.visible}" includeInLayout="{!initialWdt.visible}">
    <!--BUGR-1204 <mx:Button id="back" buttonMode="true" styleName="RedButton" label="&lt;&lt; back" click="previous()"/>-->
         <mx:Button id="back" buttonMode="true" styleName="greenBackButton" click="previous()"/>
         <mx:Button id="save" buttonMode="true" styleName="RedButton"  label="save as draft" click="saveAsDraft()" includeInLayout="{save.visible}"/>
         <!--BUGR-1204 <mx:Button id="goNext" buttonMode="true" styleName="RedButton"  label="continue >>" click="next()"/>-->
         <mx:Button id="cancel" buttonMode="true" styleName="redCancelButton" click="cancelBtn()"/>
         <mx:Button id="goNext" buttonMode="true" styleName="greenNextButton" click="next()"/>
             </mx:HBox>
    <tc:states>
        <mx:State name="ContestSelectionState">
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="OverViewState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="DetailsState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="SpecificationsState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="AttachFilesState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="ScheduleState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="ReviewState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
                
        <mx:State name="ActivateState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
        </mx:State>
    </tc:states>
    
</tc:LaunchWidgetCodeBehind>
