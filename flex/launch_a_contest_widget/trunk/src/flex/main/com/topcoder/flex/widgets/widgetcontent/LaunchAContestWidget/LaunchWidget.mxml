<?xml version="1.0" encoding="utf-8"?>
<tc:LaunchWidgetCodeBehind xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:pages="com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.com.*" styleName="NewWidgetPanel"
    xmlns:tc="com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.*" 
    width="600" initialize="initWidget()" >
    <mx:Style source="Style.css" />

    <mx:Script>
        <![CDATA[
        	import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.generated.ProjectServiceFacadeBeanService;
        	import mx.rpc.soap.SOAPHeader;
            import mx.effects.Resize;
            import mx.events.ResizeEvent;
            import mx.events.StateChangeEvent;
            import mx.events.EffectEvent;
            import mx.effects.Fade;
            import mx.containers.HBox;
            import flash.net.URLLoader;
            import flash.net.URLRequest;
            import flash.events.Event;
            import mx.controls.Alert;
            import flash.utils.Timer;
            import flash.events.TimerEvent;
            import mx.events.SliderEvent;
	    import mx.core.Application;
	    import mx.rpc.events.ResultEvent;
	    import mx.controls.Alert;
	    import mx.rpc.events.FaultEvent;

	    import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.WebServiceUtil;
	    import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.generated.ContestServiceFacadeBeanService;
	    import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.generated.CreateContest;
	    import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.generated.CreateContestResultEvent;
	    import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.generated.StudioCompetition;
	    import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.generated.UpdateContest;
	    import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.webservice.generated.UpdateContestResultEvent;

	    private var username:String=Application.application.parameters.username;
	    private var password:String = "";
	    private var blazedsendpoint:String= Application.application.parameters.blazedsendpoint;
   
	    private var projectServiceFacadeWsdl:String=Application.application.parameters.projectServiceFacadeWsdl;
        private var contestServiceFacadeWsdl:String=Application.application.parameters.contestServiceFacadeWsdl;   
        [Bindable]
        private var isAdmin:Boolean;
        private var _tcDirectProjectId:String;
        
        public function set tcDirectProjectId(projectID:String):void
        {
        	_tcDirectProjectId=projectID;
        }

	           public function resetWidget():void{
//            	this.currentState = "ContestSelectionState";
//            	back.visible = false;
            	goToStep1();
                launchWdt.percentWidth = 0;
                launchWdt.percentHeight = 0;
                launchWdt.visible = false;
                this.height = 750;
                initialWdt.visible = true;
        		initialWdt.init();
        	}
        
        	public function closeWidget():void{
        		resetWidget();
        		this.minimize()
        	}
        
        
        public function get tcDirectProjectId():String
        {
        	return _tcDirectProjectId;
        }
	    private function initWidget():void{
		getDataService();
           }

	    private function getDataService():void
	    {	
		    dataservice.getPassword();
		    dataservice.isUserInRole.send();
            }

	    private function processPassword(e:ResultEvent): void
	    {
		//Alert.show("--------"+e.result.toString());
		if(e!=null && e.result!=null){
			password = e.result.toString();
			
		}

		//Alert.show("========" + password);
		initComponent();

	    }

	    private function processRole(e:ResultEvent): void
	    {
			//Alert.show("--------"+e.result.toString());
			if(e!=null && e.result!=null){
				isAdmin=e.result as Boolean;
				activate.wf1.byPass.enabled=isAdmin;
			}
	    }
            
            
            
            private function initComponent():void {
                launchWdt.percentWidth = 0;
                launchWdt.percentHeight = 0;
                this.currentState = "ContestSelectionState";
                this.height = 850;
                details.widgetHeight = 1400;
                specf.widgetHeight = 1200;
                attch.height = 600;
                
                back.visible = false;
                //read hints.xml data
                getData(null);
                //var url:URLRequest = new URLRequest("data/launch_a_contest/hint.xml");
//                var loader:URLLoader = new URLLoader();
//                loader.addEventListener(Event.COMPLETE, getData);
//                loader.load(url);
				
		details.widgetHeight = 800;
                specf.widgetHeight = 800;
                attch.height = 600;				initialWdt.mainWidget = this;
				contestSelect.mainWidget = this;
				overView.mainWidget = this;
 				details.mainWidget = this;
                specf.mainWidget = this;
                attch.mainWidget = this;
                sched.mainWidget = this;
    		review.mainWidget = this;
  		activate.mainWidget = this;

		 _ws = new ContestServiceFacadeBeanService(null, contestServiceFacadeWsdl);
            
		_ws.getWebService().addHeader(WebServiceUtil.getWSSEHeader(username ,password));
		//_ws.getWebService().addEventListener(FaultEvent.FAULT, handleFault);

		_pws=new ProjectServiceFacadeBeanService(null, projectServiceFacadeWsdl);
		
		_pws.getWebService().addHeader(WebServiceUtil.getWSSEHeader(username ,password));

		  initialWdt.init();

		
            }
            
            
            //after loading the xml file, fetch data
            private function getData(event:Event):void {
//                var loader:URLLoader = event.target as URLLoader;
                configurableText = <launch_contest>
  <steps>
    <details>
      <fields>
        <field name="Title">
            <hint>The title you choose is what competitors will see in the active contests list, so be as detailed as possible. Also, listing the entire prize purse in the title helps draw attention to your contest. For example, "$750 Furniture Wholesale Company Logo Design" works better than simply "New Logo".</hint>
        </field>
        <field name="Introduction">
            <hint>This short paragraph will serve as the summary at the top of your contest description page. No need to get into full details here; just give an attention-grabbing brief description of the project so members can quickly determine if they are interested.</hint>
        </field>
        <field name="Primary Goal">
            <hint>Try to separate out important information into clear sections of your description. The following areas should be covered:

		What are the Primary Goals for This Contest?
		The more information you can provide about your decision to get this design produced, the better.

		Who is Your Target Audience?
		Designers will take completely different approaches to a concept depending on the target audience. For example, a web banner ad that is meant to draw in financial advisors in their 50s will look vastly different from an ad targeting young college-age women. You should provide a summary of your target audience here.

		Does This Project Have Any Branding Guidelines?
		You should provide as much information about the branding guidelines as possible. Give extremely clear instructions, such as specific color identification numbers or the exact amount of clear space your logo must have between design elements. 

		Are There Designs, Websites, etc. that You Like or Dislike? Why?
		You may be inspired by navigational elements, layout, color schemes, etc. on other web sites, which is great to share with the designers. Keep in mind, you should never encourage a designer to copy any design elements. 

		What Criteria Must the Designers Meet to Win This Contest?
		Specific limitations (such as restricting a color or a specific layout style) and specific requirements (such as the inclusion of your company logo) will help the competitors meet the basic needs of your competition, but you should also list high-level criteria and your overall judging methodology. 
	</hint>
        </field>
        <field name="Target Audience">
            <hint>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam erat purus, ultricies eget, porta ornare, suscipit in, libero. Curabitur id tortor. Etiam tristique ullamcorper lacus. Pellentesque eleifend. Mauris lacus mi, dignissim vel, iaculis id, tempus eget, turpis. Nulla ultrices congue arcu. Donec a neque at tortor vulputate luctus. Duis pulvinar suscipit magna. Nam eget orci.</hint>
        </field>
        <field name="Brand Guidelines">
            <hint>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam erat purus, ultricies eget, porta ornare, suscipit in, libero. Curabitur id tortor. Etiam tristique ullamcorper lacus. Pellentesque eleifend. Mauris lacus mi, dignissim vel, iaculis id, tempus eget, turpis. Nulla ultrices congue arcu. Donec a neque at tortor vulputate luctus. Duis pulvinar suscipit magna. Nam eget orci.</hint>
        </field>
        <field name="Like and Dislikes">
            <hint>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam erat purus, ultricies eget, porta ornare, suscipit in, libero. Curabitur id tortor. Etiam tristique ullamcorper lacus. Pellentesque eleifend. Mauris lacus mi, dignissim vel, iaculis id, tempus eget, turpis. Nulla ultrices congue arcu. Donec a neque at tortor vulputate luctus. Duis pulvinar suscipit magna. Nam eget orci.</hint>
        </field>
        <field name="Criteria">
            <hint>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam erat purus, ultricies eget, porta ornare, suscipit in, libero. Curabitur id tortor. Etiam tristique ullamcorper lacus. Pellentesque eleifend. Mauris lacus mi, dignissim vel, iaculis id, tempus eget, turpis. Nulla ultrices congue arcu. Donec a neque at tortor vulputate luctus. Duis pulvinar suscipit magna. Nam eget orci.</hint>
        </field>
        <field name="Colors">
            <hint>You should list specific color requirements here in values of RGB/Hex codes for web designs and CMYK or Pantone colors for print. If you dont have specific branding colors you need to stick to, feel free to give general directions such as, "Please use blue and orange." Or "Please do not use yellow."</hint>
        </field>
        <field name="Fonts">
            <hint>Designers can only submit fonts they have permission to redistribute, so keep that in mind when requiring specific fonts. Otherwise, feel free to give general instructions such as, "Do not use script fonts or anything that looks too feminine." Or "We need a cartoonish font that is kid-friendly."</hint>
        </field>
        <field name="Size">
            <hint>Provide exact dimensions in pixels or inches in you have them. If you are unsure, describe where your design will be used and ask for standard sizing. Examples: "The web banner must be exactly 300 pixels wide by 90 pixels tall." Or "The logo must be wider than it is tall. Tall logos wont fit in our websites masthead."</hint>
        </field>
        <field name="Additional Requirements or Restrictions">
            <hint>List any other instructions here that dont fit in the boxes above. Example: "All text must be surrounded by at least 200 pixels of white space."</hint>
        </field>
        <field name="File Description">
            <hint>Please provide a short description such as "Our company logo" or "PSD files of our current web site."</hint>
        </field>
      </fields>
      <hints>
        <hint field="Introduction"></hint>
        <hint field="Primary Goals"></hint>
        <hint field="Introduction"></hint>
        <hint field="Introduction"></hint>
        <hint field="Introduction"></hint>
        <hint field="Introduction"></hint>
      </hints>
    </details>
  </steps>
</launch_contest>;
                details.titleHint = configurableText.steps.details.fields.field.(@name == "Title").hint;
                details.introductionHint = configurableText.steps.details.fields.field.(@name == "Introduction").hint;
                details.primaryGoalHint = configurableText.steps.details.fields.field.(@name == "Primary Goal").hint;
                details.targetAudienceHint = configurableText.steps.details.fields.field.(@name == "Target Audience").hint;
                details.brandGuidelinesHint = configurableText.steps.details.fields.field.(@name == "Brand Guidelines").hint;
                details.likeAndDislikesHint = configurableText.steps.details.fields.field.(@name == "Like and Dislikes").hint;
                details.criteriaHint = configurableText.steps.details.fields.field.(@name == "Criteria").hint;
                specf.ColorsHint = configurableText.steps.details.fields.field.(@name == "Colors").hint;
                specf.FontsHint = configurableText.steps.details.fields.field.(@name == "Fonts").hint;
                specf.SizeHint = configurableText.steps.details.fields.field.(@name == "Size").hint;
                specf.AdditionalHint = configurableText.steps.details.fields.field.(@name == "Additional Requirements or Restrictions").hint;
                attch.FileDescHint = configurableText.steps.details.fields.field.(@name == "File Description").hint;
            }
            
            
            private function next(event:EffectEvent = null):void {
                if (this.currentState == "ContestSelectionState"){
                    if (contestSelect.contestType.selectedValue == null) {
                        Alert.show("Please select a contest type!");
                        return;
                    }
                   //Currently only implement Studio constest type
                   if (contestSelect.contestType.selectedValue != "STUDIO"){
                       return;
                   }
                   this.currentState = "OverViewState";
                   save.visible = false;
                   this.height = 660;
                   back.visible = true;
                   
                   review.cstTypeStep1 = contestSelect.contestType.selectedValue.toString();
                   hideArrow(step1box);
                   showArrow(step2box);
                   
                   result.type = contestSelect.contestType.selectedValue;
                   bottemline.height=mainPanel.height-710;
                }
                else if(this.currentState == "OverViewState"){
                    //validate input
					if (overView.validateFields() == false){
						return;
					}

                   this.currentState = "DetailsState";
                   save.visible = false;
                   
                   review.cstTypeStep2 = overView.studioType.selection.label;
                   review.firstPrize = overView.firstPlace.text;
                   review.secondPrize = overView.secondPlace.text;
                   review.thirdPrize = overView.thirdPlace.text;
                   review.fourthPrize = overView.fourthPlace.text;
                   review.fifthPrize = overView.fifthPlace.text;
                   review.adminFee = overView.adminf.text;
                   review.contestTotal = overView.cntstTtl.text;
                   
                   this.height = details.widgetHeight;
                   hideArrow(step2box);
                   showArrow(step3box);
                    bottemline.height=mainPanel.height-530;
                }
                else if(this.currentState == "DetailsState"){
                   //validate input
                   if (details.validateFields() == false){
                   		return;
                   }
                   
                   this.currentState = "SpecificationsState";
                   save.visible = false;
                   this.height = specf.widgetHeight;
                   
                   review.contentTitleStr = details.ctInput.text;
                   review.IntroductionStr = details.introInput.text;
                   review.glsInputStr = details.glsInput.text;
                   hideArrow(step3box);
                   showArrow(step4box);
                    bottemline.height=mainPanel.height-1000;
                }
                else if(this.currentState == "SpecificationsState"){
                   //validate input
                   if (specf.validateFields() == false){
                   		return;
                   }
                   
                   this.currentState = "AttachFilesState";
                   save.visible = false;
                   
                   review.colorInputStr = specf.colorInput.text;
                   review.fontInputStr = specf.fontInput.text;
                   review.sizeInputStr = specf.sizeInput.text;
                   review.addReInputStr = specf.addReInput.text;
                   var fm:String = "";
                   if (specf.psdChb.selected){
                      fm = specf.psdChb.label;
                   }
                   if (specf.aiChb.selected){
                       if (fm == "")
                           fm = specf.aiChb.label;
                       else
                           fm += ", "+specf.aiChb.label;
                   }
                   if (specf.epsChb.selected){
                       if (fm == "")
                           fm = specf.epsChb.label;
                       else
                           fm  += ", "+specf.epsChb.label;
                   }
                   
                   if (specf.fileFormatInput.text != "")
                       review.fileFormatInputStr = fm+", "+specf.fileFormatInput.text;
                   this.height = 600;
                   hideArrow(step4box);
                   showArrow(step5box);
                    bottemline.height=mainPanel.height-400;
                }
                else if(this.currentState == "AttachFilesState"){
                   //validate input
                   this.currentState = "ScheduleState";
                   save.visible = false;
                   
                   this.height = 750;
                   hideArrow(step5box);
                   showArrow(step6box);
                   bottemline.height=mainPanel.height-800;
                }
                else if(this.currentState == "ScheduleState"){
					if (sched.validateFields() == false){
						return;
					}	
					
                   this.currentState = "ReviewState";
                   save.visible = true;

                   review.fromDate = sched.dfStart.selectedDate;
                   review.fromTime = sched.CmbHourStart.selectedItem.label+":"+sched.CmbMinuteStart.selectedItem.label+" "+ sched.AMPMStart.selectedValue.toString()+" "+sched.timezoneStart.text;
                   review.toDate = sched.dfEnd.selectedDate;
                   review.toTime = sched.CmbHourEnd.selectedItem.label+":"+sched.CmbMinuteEnd.selectedItem.label+" "+ sched.AMPMEnd.selectedValue.toString()+" "+sched.timezoneEnd.text;

                   review.setAllValues();

                   this.height = 1800;
                   hideArrow(step6box);
                   showArrow(step7box);
                    bottemline.height=mainPanel.height-1700;
                } else if (this.currentState == "ReviewState") {
                    this.currentState = "ActivateState";
                    save.visible = false;
                    this.height = 850;
                    hideArrow(step7box);
                    showArrow(step8box);
                    setButton(1);
                     bottemline.height=mainPanel.height-800;
                } else if (this.currentState == "ActivateState") {
                    save.visible = false;
                    var index:int = activate.goToNext();
                    setButton(index);
                }
                
            }

	     private function handleFault(event:FaultEvent):void
		{
			Alert.show(event.fault.faultDetail, "");
		}
        
            
            private function setButton(index:int):void {
                switch (index) {
                    case 1:
                        goNext.label = "Confirm Order";
                        goNext.visible = true;
                        back.visible = true;
                        break;
                    case 2:
                        goNext.label = "Submit for Processing";
                        goNext.visible = true;
                        back.visible = true;
                        break;
                    case 3:
                        goNext.label = "Submit Purchase";
                        goNext.visible = true;
                        back.visible = true;
                        break;
                    case 4:
                        goNext.visible = false;
                        back.visible = false;
                        break;
                    case 5:
                        goNext.visible = false;
                        back.visible = false;

                        submitPurchase();
                        break;
                    default:
                        goNext.label = "continue >>";
                        goNext.visible = true;
                        back.visible = true;
                }       
            }
            
            private function previous():void {
                if (this.currentState == "ActivateState") {
                    var index:int = activate.gotoPrev();
                    setButton(index);
                    if (index <= 0) {
                        this.currentState = "ReviewState";
                        save.visible = true;
                        this.height = 1530;

                       showArrow(step7box);
                       step8Text.setStyle("color", "#a8a8a8");
                    }
                } else if (this.currentState == "ReviewState"){
                   this.currentState = "ScheduleState";
                   this.height = 750;

                   showArrow(step6box);
                   step7Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "ScheduleState"){
                   this.currentState = "AttachFilesState";
                   this.height = 600;

                   showArrow(step5box);
                   step6Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "AttachFilesState"){
                   this.currentState = "SpecificationsState";
                   this.height = specf.widgetHeight;

                   showArrow(step4box);
                   step5Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "SpecificationsState"){
                   this.currentState = "DetailsState";
                   this.height = details.widgetHeight;
	    
                  showArrow(step3box);
                   step4Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "DetailsState"){
                   this.currentState = "OverViewState";
                   this.height = 660;
                   showArrow(step2box);
                   step3Text.setStyle("color", "#a8a8a8");
                }
                else if(this.currentState == "OverViewState"){
                   this.currentState = "ContestSelectionState";
                   this.height = 750;
                   back.visible = false;
     
                   showArrow(step1box);
                   step2Text.setStyle("color", "#a8a8a8");
                }
            }
            public function goToStep1():void {
                previous();
                previous();
                previous();
                previous();
                previous();
                previous();
            }
            
            public function goToStep2():void {
                previous();
                previous();
                previous();
                previous();
                previous();
            }
            
            public function goToStep3():void {
                previous();
                previous();
                previous();
                previous();
            }
            
            public function goToStep4():void {
                previous();
                previous();
                previous();
            }
            
            public function goToStep5():void {
                previous();
                previous();
            }
            
            public function goToStep6():void {
                previous();
            }
            
            private function showArrow(stepBox:Box):void {
                var box:HBox = stepBox.parent as HBox;
                if (box.numChildren == 3) {
                    var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#000000");
                }
                stepBox.styleName = "curStep";
            }
            
            private function hideArrow(stepBox:Box):void {
            	var box:HBox = stepBox.parent as HBox;
                if (box.numChildren == 3) {
                	var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#a8a8a8");
                    var step:Box = box.getChildAt(0) as Box;
                    //step.setStyle("background-image", "../assets/step_prev.png");
                }
                stepBox.styleName = "prevStep";
            }
            
            // BUGR-999
            /*private function showArrow(arrow:Image):void {
                arrow.visible = true;
                arrow.includeInLayout = true;
                var box:HBox = arrow.parent as HBox;
                if (box.numChildren == 5) {
                    var done:Image = box.getChildAt(4) as Image;
                    if (done) {
                        done.visible = false;
                        done.includeInLayout = false;   
                    }
                    var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#000000");
                }
                
            }*/
            
            /*private function hideArrow(arrow:Image):void {
                arrow.visible = false;
                arrow.includeInLayout = false;
                var box:HBox = arrow.parent as HBox;
                if (box.numChildren == 5) {
                    var done:Image = box.getChildAt(4) as Image;
                    if (done) {
                        done.visible = true;
                        done.includeInLayout = true;    
                    }
                    var label:Label = box.getChildAt(1) as Label;
                    label.setStyle("color", "#a8a8a8");
                }
            }*/
            
            public function startLaunchProcess():void{
                initialWdt.width = 0;
                initialWdt.height = 0;
                initialWdt.visible = false;
                widgetFramework.maximize(parent);
                width=parent.width-10;
                height=parent.height-10;
                launchWdt.percentWidth = 100;
                launchWdt.percentHeight = 100;
                launchWdt.visible = true;
                
                contestSelect.initData();
                overView.initData();
                details.initData();
                specf.initData();
                attch.initData();
                
                sched.initData();
		       activate.initData();
		       bottemline.height=mainPanel.height-contestSelect.height;
		       save.visible=false;

            }
            private function handleError(e:FaultEvent):void
            {
            	Alert.show(e.fault.faultString);
            }
        ]]>
    </mx:Script>


    <mx:RemoteObject id="dataservice" destination="remoteDataService" endpoint="{blazedsendpoint}"
              
		 fault="Alert.show(event.fault.faultString);">
	<mx:method name="getPassword"  result="processPassword(event)" 
		                   fault="handleError(event)"/>
		                   
     <mx:method name="isUserInRole"  result="processRole(event)" 
		                   fault="handleError(event)">
		                   <mx:arguments>
		                   	<role>Cockpit Administrator</role>
		                   </mx:arguments>
		                   </mx:method>
     </mx:RemoteObject>
     <mx:Spacer height="5" />
     <pages:InitialWidget id="initialWdt" />
     <mx:HBox id="launchWdt" horizontalGap="0" visible="false" >
         <mx:VBox width="200" height="100%" paddingTop="15" verticalGap="20" 
                horizontalScrollPolicy="off">
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="30"
                    verticalAlign="middle" backgroundImage="@Embed('../assets/step_empty.png')">
                 <mx:Box  width="26" height="26" styleName="curStep"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step1box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="1" styleName="whiteBoldText"/>
                </mx:Box>
            	<mx:Label id="step1Text" text="Contest Selection" fontWeight="bold" 
                        fontFamily="Arial" color="#000000" fontSize="14" /> 
                 <mx:Spacer width="100%" /> 
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="30"
                    verticalAlign="middle" backgroundImage="@Embed('../assets/step_empty.png')">
                 <mx:Box  width="26" height="26" styleName="curStep"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10"  id="step2box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="2" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step2Text" text="Overview" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="30"
                    verticalAlign="middle" backgroundImage="@Embed('../assets/step_empty.png')">
                 <mx:Box width="26" height="26" styleName="curStep"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step3box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="3" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step3Text" text="Details" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="30"
                    verticalAlign="middle" backgroundImage="@Embed('../assets/step_empty.png')">
                 <mx:Box styleName="curStep" width="26" height="26"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step4box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="4" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step4Text" text="Specifications" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="30"
                    verticalAlign="middle" backgroundImage="@Embed('../assets/step_empty.png')">
                 <mx:Box styleName="curStep" width="26" height="26"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step5box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="5" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step5Text" text="Attach Files" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="30"
                    verticalAlign="middle" backgroundImage="@Embed('../assets/step_empty.png')">
                 <mx:Box styleName="curStep" width="26" height="26"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step6box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="6" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step6Text" text="Schedule" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="30"
                    verticalAlign="middle" backgroundImage="@Embed('../assets/step_empty.png')">
                 <mx:Box styleName="curStep" width="26" height="26"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step7box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="7" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step7Text" text="Review" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
             <mx:HBox paddingLeft="10" paddingRight="5" width="100%" horizontalGap="5" height="30"
                    verticalAlign="middle" backgroundImage="@Embed('../assets/step_empty.png')">
                 <mx:Box styleName="curStep" width="26" height="26"
                        paddingTop="2" paddingLeft="0" paddingRight="0" left="10" id="step8box">
                    <mx:Label width="100%" height="100%" textAlign="center" text="8" styleName="whiteBoldText"/>
                </mx:Box>
                 <mx:Label id="step8Text" text="Activate" fontWeight="bold" color="#a8a8a8"
                        fontFamily="Arial" fontSize="14" />
                 <mx:Spacer width="100%" />
             </mx:HBox>
         </mx:VBox>
         <!--<mx:VRule height="100%" />-->
         <mx:VBox width="100%" height="100%" verticalGap="0" paddingRight="8" paddingLeft="20" id="mainPanel">
             <mx:Spacer height="5" />
             <pages:ContestSelection id="contestSelect"  />
             <pages:OverView id="overView"/>
             <pages:Details id="details"/>
             <pages:Specifications id="specf" />
             <pages:AttachFiles id="attch" />
             <pages:Schedule id="sched" />
             <pages:Review id="review" />
             <pages:PaymentContest id="activate" width="100%" />
   
             <mx:HBox paddingLeft="20" paddingRight="10" width="100%" >
                 <mx:Button id="back" styleName="RedButton" label="&lt;&lt; back" click="previous()"/>
                 <mx:Spacer width="100%"/>
                 <mx:Button id="save" styleName="RedButton"  label="save as draft" click="saveAsDraft()"/>
                 <mx:Button id="goNext" styleName="RedButton"  label="continue >>" click="next()"/>
             </mx:HBox>
             <mx:Spacer  id="bottemline" height="100%"/>
         </mx:VBox>
     </mx:HBox>
     
    <tc:states>
        <mx:State name="ContestSelectionState">
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="OverViewState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="DetailsState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="SpecificationsState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="AttachFilesState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="ScheduleState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{review}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
        
        <mx:State name="ReviewState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{activate}"/>
        </mx:State>
                
        <mx:State name="ActivateState">
            <mx:RemoveChild target="{contestSelect}"/>
            <mx:RemoveChild target="{overView}"/>
            <mx:RemoveChild target="{details}"/>
            <mx:RemoveChild target="{specf}"/>
            <mx:RemoveChild target="{attch}"/>
            <mx:RemoveChild target="{sched}"/>
            <mx:RemoveChild target="{review}"/>
        </mx:State>
    </tc:states>
    
</tc:LaunchWidgetCodeBehind>
