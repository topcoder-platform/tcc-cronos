<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
          horizontalScrollPolicy="off" verticalScrollPolicy="off">
           <mx:HTTPService id="requestFileTypes" url="data/launch_a_contest/fileTypes.xml" resultFormat="e4x" result="loadFileTypes(event)" fault="Alert.show(event.fault.faultString);"></mx:HTTPService>

    <mx:Script>
        <![CDATA[
        	import com.topcoder.flex.widgets.widgetcontent.LaunchAContestWidget.LaunchWidget;
            import flash.events.MouseEvent;
            import mx.containers.Panel;
            import mx.rpc.events.ResultEvent;
            import mx.controls.Alert;
			import mx.controls.CheckBox;

            private static const FILE_FORMAT_PREFIX:String = "chb_";
            
            [Bindable]
            private var fileTypes:XML; 
            
            [Bindable]
            public var mainWidget:LaunchWidget;
            
            public var widgetHeight:Number;
            public var ColorsHint:String;
            public var FontsHint:String;
            public var SizeHint:String;
            public var AdditionalHint:String;
            
            private static const ADDEDHEIGHT:Number = 80;
            
            
            public function initData():void{
            	colorInput.text="";
				fontInput.text="";
				sizeInput.text="";
				addReInput.text="";	
				fileFormatInput.text="";
				
            	var formatStr:String = this.mainWidget.competition.contestData.finalFileFormat;
            	if (formatStr == null){
            		formatStr = "";
            	}
        		/*    		since BUGR-1039
            		this.psdChb.selected = (formatStr.indexOf("psd")>=0);
            		this.aiChb.selected = (formatStr.indexOf("ai")>=0);
            		this.epsChb.selected = (formatStr.indexOf("eps")>=0);
				*/
            	for each(var item:* in fileFormatsBox.getChildren()) {
            		var ext:String = (item as CheckBox).id.substr(FILE_FORMAT_PREFIX.length);
            		(item as CheckBox).selected = (formatStr.indexOf(ext) >= 0);
            	}

            	colorInput.text=this.mainWidget.competition.contestData.requiredOrRestrictedColors;
				fontInput.text=this.mainWidget.competition.contestData.requiredOrRestrictedFonts;
				sizeInput.text=this.mainWidget.competition.contestData.sizeRequirements;
				addReInput.text=this.mainWidget.competition.contestData.otherRequirementsOrRestrictions;	
				fileFormatInput.text=this.mainWidget.competition.contestData.otherFileFormats;
            }
            
            private function updateData():void{
            	mainWidget.competition.contestData.requiredOrRestrictedColors = this.colorInput.text;
            	mainWidget.competition.contestData.requiredOrRestrictedFonts = this.fontInput.text;
            	mainWidget.competition.contestData.sizeRequirements = this.sizeInput.text;
            	mainWidget.competition.contestData.otherRequirementsOrRestrictions = this.addReInput.text;
            	mainWidget.competition.contestData.otherFileFormats = this.fileFormatInput.text;
            	
            	var formats:String = "";
				for each(var item:* in fileFormatsBox.getChildren()) {
            		var cb:CheckBox = item as CheckBox;
            		if(cb.selected) {
            			formats += "," + cb.id.substr(FILE_FORMAT_PREFIX.length);
            		}
            	}
            	if(formats.length > 0) {
            		formats = formats.substr(1);
            	}

            	
            	mainWidget.competition.contestData.finalFileFormat = formats;
            }
            
            public function validateFields():Boolean{
            	//no validation required for this step
            	updateData();
            	return true;
            }
            
            
            private function showColorHint(event:MouseEvent):void {
                if (event.target.label == "[+ show hint]"){
                    event.target.label = "[- show hint]";
                    colorHint.height = ADDEDHEIGHT;
                    colorHint.text = ColorsHint;
                    colorHint.visible = true;
                    mainWidget.height += ADDEDHEIGHT;
                    widgetHeight += ADDEDHEIGHT;
                }else{
                    event.target.label = "[+ show hint]";
                    colorHint.height = 0;
                    colorHint.text = "";
                    colorHint.visible = false;
                    mainWidget.height -= ADDEDHEIGHT;
                    widgetHeight -= ADDEDHEIGHT;
                }
            }

            private function showFontsHint(event:MouseEvent):void {
                if (event.target.label == "[+ show hint]"){
                    event.target.label = "[- show hint]";
                    fontsHint.height = ADDEDHEIGHT;
                    fontsHint.text = FontsHint;
                    fontsHint.visible = true;
                    mainWidget.height += ADDEDHEIGHT;
                    widgetHeight += ADDEDHEIGHT;
                }else{
                    event.target.label = "[+ show hint]";
                    fontsHint.height = 0;
                    fontsHint.text = "";
                    fontsHint.visible = false;
                    mainWidget.height -= ADDEDHEIGHT;
                    widgetHeight -= ADDEDHEIGHT;
                }
            }

            private function showSizeHint(event:MouseEvent):void {
                if (event.target.label == "[+ show hint]"){
                    event.target.label = "[- show hint]";
                    sizeHint.height = ADDEDHEIGHT;
                    sizeHint.text = SizeHint;
                    sizeHint.visible = true;
                    mainWidget.height += ADDEDHEIGHT;
                    widgetHeight += ADDEDHEIGHT;
                }else{
                    event.target.label = "[+ show hint]";
                    sizeHint.height = 0;
                    sizeHint.text = "";
                    sizeHint.visible = false;
                    mainWidget.height -= ADDEDHEIGHT;
                    widgetHeight -= ADDEDHEIGHT;
                }
            }

            private function showAddReqHint(event:MouseEvent):void {
                if (event.target.label == "[+ show hint]"){
                    event.target.label = "[- show hint]";
                    addReqHint.height = 30;
                    addReqHint.text = AdditionalHint;
                    addReqHint.visible = true;
                    mainWidget.height += ADDEDHEIGHT;
                    widgetHeight += ADDEDHEIGHT;
                }else{
                    event.target.label = "[+ show hint]";
                    addReqHint.height = 0;
                    addReqHint.text = "";
                    addReqHint.visible = false;
                    mainWidget.height -= ADDEDHEIGHT;
                    widgetHeight -= ADDEDHEIGHT;
                }
            }
			
			private function loadFileTypes(e:ResultEvent):void {
            	if(e!=null && e.result!=null && e.result is XML)
        		{
 					fileTypes  = e.result as XML;
 					fileFormatsBox.removeAllChildren();
 					var id:Number = Number(mainWidget.overView.studioType.selection.value);
 					mainWidget.overView.studioType.selection.value
 					trace("id=" + id);
 					for each(var fmt:XML in fileTypes.contestType.(@id==id).children()) {
 						var chb:CheckBox = new CheckBox();
 						chb.label = fmt.description;
 						chb.id = FILE_FORMAT_PREFIX + fmt.value;
 						fileFormatsBox.addChild(chb);
 					}
				}
            }

         ]]>
    </mx:Script>
    <mx:VBox paddingLeft="2" width="100%" height="100%">
    	<mx:VBox width="100%" styleName="boxStyle" height="100%">
    		
	    	<mx:VBox width="100%">
	    		<mx:Label text="Contest Specifications" fontWeight="bold" fontSize="12"/>
		        <mx:Text width="100%" id="contestSpecf">
		            <mx:text>
		                Do you have any requirements, preferences or restrictions regarding the following design elements?
		            </mx:text>
		        </mx:Text>
		        <mx:Spacer height="5"/>
		        <mx:VBox width="100%" verticalGap="0">
		            <mx:HBox width="500">
		                <mx:Label text="Colors:" fontWeight="bold"/>
		                <mx:Spacer width="344"/>
		                <mx:LinkButton label="[+ show hint]" click="showColorHint(event)" />
		            </mx:HBox>
		            <mx:Text id="colorHint" color="0x888888" width="500" height="0" visible="false">
		                <mx:text>
		                </mx:text>
		            </mx:Text>
		            <mx:TextArea id="colorInput" width="500" height="50"/>
		        </mx:VBox>
		     </mx:VBox>
	        
	        <mx:Spacer height="5"/>
	        <mx:VBox width="100%" verticalGap="0" >
	            <mx:HBox width="500">
	                <mx:Label text="Fonts:" fontWeight="bold"/>
	                <mx:Spacer width="347"/>
	                <mx:LinkButton label="[+ show hint]" click="showFontsHint(event)" />
	            </mx:HBox>
	            <mx:Text id="fontsHint" color="0x888888" width="500" height="0" visible="false">
	                <mx:text>
	                </mx:text>
	            </mx:Text>
	            <mx:TextArea id="fontInput" width="500" height="50"/>
	        </mx:VBox>
	        <mx:Spacer height="5"/>
	        <mx:VBox width="100%" verticalGap="0">
	            <mx:HBox width="500">
	                <mx:Label text="Size:" fontWeight="bold"/>
	                <mx:Spacer width="356"/>
	                <mx:LinkButton label="[+ show hint]" click="showSizeHint(event)" />
	            </mx:HBox>
	            <mx:Text id="sizeHint" color="0x888888" width="500" height="0" visible="false">
	                <mx:text>
	                </mx:text>
	            </mx:Text>
	            <mx:TextArea id="sizeInput" width="500" height="50"/>
	        </mx:VBox>
	        <mx:Spacer height="5"/>
	        <mx:VBox width="100%" verticalGap="0">
	            <mx:HBox width="500">
	                <mx:Label text="Additional Requirements or Restrictions:" fontWeight="bold"/>
	                <mx:Spacer width="151"/>
	                <mx:LinkButton label="[+ show hint]" click="showAddReqHint(event)" />
	            </mx:HBox>
	            <mx:Text id="addReqHint" color="0x888888" width="500" height="0" visible="false">
	                <mx:text>
	                </mx:text>
	            </mx:Text>
	            <mx:TextArea id="addReInput" width="500" height="50"/>
	        </mx:VBox>
	    </mx:VBox>
	    <mx:VBox width="100%" styleName="boxStyle" height="100%">
		    	
		    <mx:Label text="Final File Formats" fontWeight="bold" fontSize="12"/>
	       		    <mx:HBox horizontalGap="0" verticalGap="0" width="100%">
			    <mx:Label baseline="middle" text="If you are unsure what type of file you will need, please feel free to"/>
		    	<mx:LinkButton baseline="middle" styleName="linkBtn" label="post a question in the forums" click="{navigateToURL(new URLRequest('http://studio.topcoder.com/forums?module=ThreadList&amp;forumID=6'), '_blank');}" />
		    	<mx:Image source="@Embed('../../assets/more_info.png')"/>
		    	<mx:Label text="The members will be happy to help you." /> 
		    </mx:HBox>
		    <mx:Text htmlText="You can also email &lt;b>directassist@topcoder.com.&lt;/b>" />
	        <mx:Text width="100%" text="For your chosen contest type - {mainWidget.overView.studioType.selection.label} - the most common final file formats are:" />
	        <mx:VBox width="100%" paddingLeft="10">
	        	<mx:VBox id="fileFormatsBox">
		        	
	        	</mx:VBox>
		        <mx:Spacer height="5"/>
		        <mx:Label text="Other File Formats:" fontWeight="bold"/>
		        <mx:Text id="otherFileFormats" color="0x888888" width="100%">
	                <mx:text>
	                    Please list any other file formats you may need that is not listed above.
	                </mx:text>
	            </mx:Text>
	            <mx:TextArea id="fileFormatInput" width="480" height="50"/>
	        </mx:VBox>
         </mx:VBox>
    </mx:VBox>
</mx:Canvas>
