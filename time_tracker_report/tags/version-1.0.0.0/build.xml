<?xml version="1.0"?>

<project name="Time Tracker Report" default="dist" basedir=".">

    <property file="../topcoder_global.properties"/>

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="Time_Tracker_Report"/>
    <property name="package" value="com.topcoder.timetracker.report"/>
    <property name="packagedir" value="com/topcoder/timetracker/report"/>
    <property name="distfilename" value="time_tracker_report"/>
    <property name="component_version" value="1.0"/>
    <property name="component_path" value="${distfilename}/${component_version}"/>

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src"/>
    <property name="tcs_libdir" value="lib/tcs"/>
    <property name="ext_libdir" value="lib"/>
    <property name="jar_tcs_libdir" value="lib/tcs"/>
    <property name="jar_ext_libdir" value="lib"/>
    <property name="docsdir" value="docs"/>
    <property name="configdir" value="conf"/>
    <property name="testlogdir" value="log"/>
    <property name="testfiles" value="test_files"/>
    <property name="javadocsdir" value="${docsdir}/javadocs"/>
    <property name="webdir" value="web"/>
    <property name="reports" value="reports"/>

    <property name="javasrc" value="${srcdir}/java"/>
    <property name="javamain" value="${javasrc}/main"/>
    <property name="javatests" value="${javasrc}/tests"/>

    <property name="builddir" value="build"/>
    <property name="build_classdir" value="${builddir}/classes"/>
    <property name="build_testclassdir" value="${builddir}/testClasses"/>
    <property name="build_targetclassdir" value="${builddir}/targetclasses"/>
    <property name="build_distdir" value="${builddir}/dist"/>
    <property name="build_docsdir" value="${builddir}/${docsdir}"/>
    <property name="build_javadocsdir" value="${builddir}/${javadocsdir}"/>
    <property name="build_webdir" value="${builddir}/${webdir}"/>
    <property name="build_lib" value="${builddir}/lib"/>
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}"/>
    <property name="build_examples" value="${builddir}/examples"/>
    <property name="build_configdir" value="${builddir}/${configdir}"/>


    <!-- EXECUTION TAGS -->
    <property name="debug" value="off"/>
    <property name="verbose" value="no"/>

    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_conf" value="${build_tcsdistdir}/${configdir}"/>
    <property name="dist_lib" value="${build_distdir}/lib/tcs"/>
    <property name="dist_src" value="${build_tcsdistdir}/${srcdir}"/>
    <property name="dist_docs" value="${build_tcsdistdir}/${docsdir}"/>
    <property name="dist_javadocs" value="${build_tcsdistdir}/${javadocsdir}"/>
    <property name="dist_testfiles" value="${build_tcsdistdir}/${testfiles}"/>

    <!-- NAME FOR .JAR AND .WAR FILES -->
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="javadoc.jar" value="${builddir}/javadocs.jar"/>
    <property name="component.tests.jar" value="${dist_lib}/${distfilename}_tests.jar"/>
    <property name="component.war" value="${build_distdir}/${distfilename}.war"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>
    <property name="dev_submission.jar" value="${component}_${component_version}_dev_submission.jar"/>
    <property name="design_submission.jar" value="${component}_${component_version}_design_submission.jar"/>
    <property name="dev_dist.jar" value="${component}_${component_version}_dev_dist.jar"/>
    <property name="design_dist.jar" value="${component}_${component_version}_design_dist.jar"/>

    <!-- DOCUMENT PACKAGE -->
    <property name="dist_docpackage" value="${builddir}/doc_package"/>
    <property name="docpackage.jar" value="${distfilename}_docs.jar"/>


    <!-- TCS Dependencies -->
    <property name="configmanager.version" value="2.1.3"/>
    <property name="configmanager.jar.name" value="configuration_manager.jar"/>
    <property name="configmanager.path" value="configuration_manager/${configmanager.version}"/>
    <property name="configmanager.jar" value="${tcs_libdir}/${configmanager.path}/${configmanager.jar.name}"/>

    <property name="db_connection_factory.version" value="1.0"/>
    <property name="db_connection_factory.jar.name" value="db_connection_factory.jar"/>
    <property name="db_connection_factory.path" value="db_connection_factory/${db_connection_factory.version}"/>
    <property name="db_connection_factory.jar"
              value="${tcs_libdir}/${db_connection_factory.path}/${db_connection_factory.jar.name}"/>

    <property name="base_exception.version" value="1.0"/>
    <property name="base_exception.jar.name" value="base_exception.jar"/>
    <property name="base_exception.path" value="base_exception/${base_exception.version}"/>
    <property name="base_exception.jar" value="${tcs_libdir}/${base_exception.path}/${base_exception.jar.name}"/>

    <property name="typesafe_enum.version" value="1.0"/>
    <property name="typesafe_enum.jar.name" value="typesafe_enum.jar"/>
    <property name="typesafe_enum.path" value="typesafe_enum/${typesafe_enum.version}"/>
    <property name="typesafe_enum.jar" value="${tcs_libdir}/${typesafe_enum.path}/${typesafe_enum.jar.name}"/>
    <!--Change this property to a valid Tomcat 5.x home dir to run tests in server environment-->
    <property name="cactus.home.tomcat5x" value="C:\TopCoder\Software\jakarta-tomcat-5.0.28"/>

    <!-- 3rd Party Dependencies  -->
    <property name="junit.jar" value="${ext_libdir}/junit/3.8.1/junit.jar"/>
    <property name="servlet-api.jar" value="${ext_libdir}/servlet-api/2.3/servlet-api.jar"/>
    <property name="jsp-api.jar" value="${ext_libdir}/jsp-api/2.0/jsp-api.jar"/>
    <property name="ifxjdbc.jar" value="${ext_libdir}/informix/ifxjdbc.jar"/>
    <property name="dbunit.jar" value="${ext_libdir}/dbunit/2.1/dbunit.jar"/>
    <property name="xmlunit.jar" value="${ext_libdir}/xmlunit/1.0/xmlunit.jar"/>

    <!--cactus required libraries-->
    <property name="aspectjrt.jar" location="${ext_libdir}/cactus/1.7.1/aspectjrt-1.2.1.jar"/>
    <property name="cactus.jar" location="${ext_libdir}/cactus/1.7.1/cactus-1.7.1.jar"/>
    <property name="cactus.ant.jar" location="${ext_libdir}/cactus/1.7.1/cactus-ant-1.7.1.jar"/>
    <property name="cargo.jar" location="${ext_libdir}/cactus/1.7.1/cargo-0.5.jar"/>
    <property name="commons.httpclient.jar" location="${ext_libdir}/cactus/1.7.1/commons-httpclient-2.0.2.jar"/>
    <property name="commons.logging.jar" location="${ext_libdir}/cactus/1.7.1/commons-logging-1.0.4.jar"/>
    <property name="httpunit.jar" location="${ext_libdir}/cactus/1.7.1/httpunit-1.6.jar"/>
    <property name="nekohtml.jar" location="${ext_libdir}/cactus/1.7.1/nekohtml-0.9.1.jar"/>
    <property name="tidy.jar" location="${ext_libdir}/cactus/1.7.1/Tidy.jar"/>
    <property name="xerces.jar" location="${ext_libdir}/xerces/1.4.4/xerces.jar"/>

    <!--cactus classpath-->
    <path id="cactus.classpath">
        <path refid="test.build.classpath"/>
        <pathelement location="${aspectjrt.jar}"/>
        <pathelement location="${cactus.jar}"/>
        <pathelement location="${cactus.ant.jar}"/>
        <pathelement location="${cargo.jar}"/>
        <pathelement location="${commons.httpclient.jar}"/>
        <pathelement location="${commons.logging.jar}"/>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${dbunit.jar}"/>
    </path>

    <!--cactus taskdefs-->
    <taskdef resource="cactus.tasks" classpathref="cactus.classpath"/>

    <!-- Java Locations -->
    <property name="java_1_3_bootclasspath" value="d:/jdk1.3.1_08/jre/lib/rt.jar"/>

    <path id="buildlibs">
        <pathelement location="${junit.jar}"/>
        <pathelement location="${configmanager.jar}"/>
        <pathelement location="${db_connection_factory.jar}"/>
        <pathelement location="${base_exception.jar}"/>
        <pathelement location="${typesafe_enum.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
        <pathelement location="${jsp-api.jar}"/>
        <pathelement location="${xmlunit.jar}"/>
        <pathelement location="${configdir}"/>
        <pathelement location="${testfiles}"/>
    </path>

    <path id="test.build.classpath">
        <pathelement location="${build_testclassdir}"/>
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <target name="compile">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true"
               verbose="${verbose}">
            <classpath refid="buildlibs"/>
        </javac>
        <mkdir dir="${build_configdir}"/>
        <copy todir="${build_configdir}" filtering="on">
            <fileset dir="${configdir}"/>
        </copy>
    </target>

    <target name="compile_targets">
        <!-- test compile against 1.3 -->
        <mkdir dir="${build_targetclassdir}"/>
        <mkdir dir="${javatests}"/>
        <javac srcdir="${javamain}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
               debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
            >
            <classpath refid="buildlibs"/>
        </javac>

        <!-- compile test cases -->
        <javac srcdir="${javatests}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
               debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
            >
            <classpath>
                <path refid="cactus.classpath"/>
                <pathelement location="${httpunit.jar}"/>
                <pathelement location="${build_examples}"/>
            </classpath>
        </javac>
        <delete dir="${build_targetclassdir}"/>
    </target>


    <target name="compile_tests" depends="compile,demo-webapp"
            description="compiles the test sources into a cactified war file">

        <!--compile the testcases-->
        <mkdir dir="${build_testclassdir}"/>
        <javac destdir="${build_testclassdir}" debug="true">
            <src path="${javatests}"/>
            <classpath>
                <path refid="cactus.classpath"/>
                <pathelement location="${httpunit.jar}"/>
                <pathelement location="${build_examples}"/>
            </classpath>
        </javac>

        <!-- Cactify the web-app archive -->
        <property name="test.resources" value="${basedir}/test_files/resources"/>
        <cactifywar srcfile="${component.war}"
                    destfile="${build_distdir}/${distfilename}-cactified.war">
            <classes dir="${build_testclassdir}"/>
            <classes dir="${test.resources}"/>
            <classes dir="${testfiles}"/>
            <lib file="${httpunit.jar}"/>
            <lib file="${dbunit.jar}"/>
            <lib file="${xmlunit.jar}"/>
            <servletredirector/>
            <fileset dir="${basedir}/test_files/cactus-testfiles/web"/>
        </cactifywar>
    </target>

    <target name="test" depends="compile_tests" description="runs the test inside the configured Tomcat instance">
        <mkdir dir="${testlogdir}"/>
        <!--VM args used when starting the server-->
        <!--These are the VM args for connecting a debugger to tested server-->
        <property name="cactus.jvmargs"
                  value="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"/>
        <!--<property name="cactus.jvmargs" value=""/>-->


        <property name="cactus.tmpdir" value="build/cactusRunDir"/>
        <!-- Run the tests -->
        <cactus warfile="${build_distdir}/${distfilename}-cactified.war"
                fork="yes" failureproperty="tests.failed" haltonerror="false"> <!--todo haltonerro-->
            <!--this is the client-side run classpath, the server run classpath is the cactified war-->
            <classpath>
                <path refid="test.build.classpath"/>
                <path refid="cactus.classpath"/>

                <pathelement location="${tidy.jar}"/>
                <pathelement location="${httpunit.jar}"/>
                <pathelement location="${xerces.jar}"/>
                <pathelement location="${ifxjdbc.jar}"/>
                <pathelement location="${build_testclassdir}"/>
                <!--for client-side setup to also find standard configuration -->
                <pathelement location="test_files/demoWebapp/res"/>
                <!--for client side setup to find database content file-->
                <pathelement location="test_files/resources"/>
            </classpath>

            <containerset>
                <tomcat5x if="cactus.home.tomcat5x"
                          dir="${cactus.home.tomcat5x}" port="12388"
                          output="${testlogdir}/tomcat5x.out"
                          tmpdir="${cactus.tmpdir}"
                          jvmargs="${cactus.jvmargs}"
                          todir="${testlogdir}"/>
            </containerset>
            <formatter type="plain" usefile="true"/>
            <formatter type="xml" usefile="true"/>
            <formatter type="brief" usefile="false"/>

            <test name="${package}.AllTests"/>
        </cactus>
    </target>

    <target name="reports" depends="test">
        <mkdir dir="${reports}"/>

        <junitreport todir="${reports}">
            <fileset dir="${testlogdir}">
                <include name="*.xml"/>
            </fileset>
            <report format="frames" todir="${reports}"/>
        </junitreport>

        <echo>The execution of reports is complete. Reports are available in /${reports}</echo>
    </target>

    <target name="dist" depends="compile">
        <mkdir dir="${dist_lib}/${component_path}"/>
        <jar jarfile="${component.jar}" basedir="${build_classdir}"/>
    </target>

    <target name="dist_tests" depends="compile_tests">
        <mkdir dir="${dist_lib}"/>
        <jar jarfile="${component.tests.jar}" basedir="${build_testclassdir}"/>
    </target>

    <target name="javadoc" depends="compile">
        <mkdir dir="${dist_javadocs}"/>
        <javadoc packagenames="${package}.*"
                 sourcepath="${javamain}"
                 classpath="${build_classdir}"
                 classpathref="buildlibs"
                 destdir="${dist_javadocs}"
                 windowtitle="Topcoder Software"
                 header="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
                 footer="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
                 bottom="&lt;font class=tcoder5&gt;Contact TopCoder Software at &lt;a href='http://www.topcodersoftware.com'&gt;www.topcodersoftware.com&lt;/a&gt;&lt;/font&gt;"
                 stylesheetfile="${javadocsdir}/stylesheet.css"
                 verbose="${verbose}">
            <tag name="copyright" description="Copyright:" scope="types"/>
        </javadoc>
    </target>

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>

    <target name="deploy" depends="dist">
    </target>

    <target name="main" depends="deploy,test">
    </target>

    <target name="taglib-jar"
            depends="compile"
            description="Create runtime jar">
        <mkdir dir="${builddir}/lib"/>

        <copy file="${build_configdir}/time_tracker_report.tld" tofile="${builddir}/classes/META-INF/taglib.tld"/>

        <jar jarfile="${builddir}/lib/${component}.jar"
             basedir="${builddir}/classes">
        </jar>
    </target>

    <target name="demo-webapp" description="Builds a web application that demonstrates the component"
            depends="taglib-jar">
        <mkdir dir="${build_examples}"/>
        <mkdir dir="${build_distdir}"/>
        <javac srcdir="${basedir}/test_files/demoWebapp/src"
               destdir="${build_examples}"
               debug="true"
               verbose="${verbose}">
            <classpath>
                <path refid="runtime.classpath"/>
                <fileset dir="${builddir}/lib" includes="${component}.jar"/>
            </classpath>
        </javac>
        <war warfile="${component.war}" webxml="${basedir}/test_files/demoWebApp/web.xml">
            <classes dir="${build_examples}"/>
            <classes dir="${basedir}/test_files/demoWebapp/res"/>
            <lib file="${builddir}/lib/${component}.jar"/>
            <lib file="${ifxjdbc.jar}"/>
            <lib file="${base_exception.jar}"/>
            <lib file="${typesafe_enum.jar}"/>
            <lib file="${db_connection_factory.jar}"/>
            <lib file="${configmanager.jar}"/>
            <fileset dir="${basedir}/test_files/demoWebapp/web"/>
        </war>

    </target>


    <target name="compileConvenience">
        <path id="convenienceLibs">
                  <path refid="buildlibs"/>
                              <pathelement location="${dbunit.jar}"/>
                              <pathelement location="${xerces.jar}"/>
                              <pathelement location="${ifxjdbc.jar}"/>
                              <pathelement location="test_files/"/>
                              <pathelement location="build/convenience"/>
                              <pathelement location="test_files/demoWebapp/res"/>

              </path>
              <mkdir dir="build/convenience"/>
                      <javac srcdir="${basedir}/test_files/convenienceClasses"
                             destdir="build/convenience"
                             debug="true"
                             verbose="${verbose}">
                          <classpath refid="convenienceLibs"/>
                      </javac>


    </target>
    <target name="fillTestData" depends="compileConvenience" description="fills demo data into database">

        <java classname="demo.InsertTestDataDemoConvenienceHelper">
            <classpath refid="convenienceLibs"/>
        </java>
    </target>
    <target name="clearDatabase" depends="compileConvenience" description="clears demo data from the database">

        <java classname="demo.ClearDataDemoConvenienceHelper" >
            <classpath refid="convenienceLibs"/>
        </java>
    </target>
    <!-- ************************************************************************** -->
    <!-- ************ REMOVE EVERYTHING BELOW HERE FOR THE DISTRIBUTION ************* -->
    <!-- ************************************************************************** -->


    <taskdef resource="checkstyletask.properties"/>

    <target name="checkstyle" depends="compile">
        <mkdir dir="${testlogdir}"/>
        <checkstyle failonviolation="false" config="../tc_checks.xml">
            <classpath>
                <path refid="buildlibs"/>
                <pathelement location="${build_classdir}"/>
            </classpath>
            <fileset dir="${javamain}" includes="**/*.java"/>
            <formatter type="plain" toFile="${testlogdir}/checkstyle.txt"/>
        </checkstyle>
    </target>

    <target name="checkstyle_tests" depends="compile_tests">
        <mkdir dir="${testlogdir}"/>
        <checkstyle failonviolation="false" config="../tc_test_checks.xml" classpath="${javatests}">
            <fileset dir="${javatests}/${packagedir}/" includes="**/*.java"
                     excludes="UnitTests.java, AllTests.java, stresstests/*, failuretests/*, accuracytests/*"/>
            <formatter type="plain" toFile="${testlogdir}/checkstyletest.txt"/>
        </checkstyle>
    </target>


    <target name="dist_tcs" depends="clean,dist,javadoc">
        <!-- define tcs distribution format -->
        <!-- uncomment if configuration files exist.
                <mkdir dir="${dist_conf}"/>
                <copy todir="${dist_conf}">
                    <fileset dir="${configdir}" />
                </copy>
        -->

        <mkdir dir="${dist_src}"/>
        <copy todir="${dist_src}">
            <fileset dir="${srcdir}"/>
        </copy>

        <copy todir="${dist_docs}">
            <fileset dir="${docsdir}">
                <include name="${component}_Class_Diagram*"/>
                <include name="${component}_Use_Case_Diagram*"/>
                <include name="${component}_Sequence_Diagram*"/>
                <include name="${component}_Requirements_Specification*"/>
                <include name="${component}_Component_Specification*"/>
                <include name="${component}.zargo"/>
                <include name="${component}.zuml"/>
            </fileset>
        </copy>

        <mkdir dir="${dist_javadocs}"/>
        <copy todir="${dist_javadocs}">
            <fileset dir="${javadocsdir}"/>
        </copy>

        <antcall target="package_docs"/>

        <!-- uncomment if test files exist.
                <mkdir dir="${dist_testfiles}"/>
                <copy todir="${dist_testfiles}">
                    <fileset dir="${testfiles}" />
                </copy>
        -->
        <copy file="build_dist.xml" tofile="${build_tcsdistdir}/build.xml"/>
        <copy file="README" tofile="${build_tcsdistdir}/README"/>
        <jar jarfile="${component.dist.jar}" basedir="${build_distdir}" excludes="*.jar"/>

        <antcall target="move_to_tcs"/>
    </target>

    <target name="package_docs" depends="javadoc">
        <mkdir dir="${dist_docpackage}"/>

        <jar jarfile="${dist_docpackage}/${javadoc.jar}" basedir="${javadocsdir}"/>

        <copy todir="${dist_docpackage}">
            <fileset dir="${docsdir}">
                <include name="${component}_Class_Diagram*"/>
                <include name="${component}_Use_Case_Diagram*"/>
                <include name="${component}_Sequence_Diagram*"/>
                <include name="${component}_Requirements_Specification.pdf"/>
                <include name="${component}_Component_Specification.pdf"/>
            </fileset>
        </copy>

        <jar jarfile="${builddir}/${docpackage.jar}" basedir="${dist_docpackage}"/>
    </target>

    <target name="move_to_tcs">
        <mkdir dir="${tcs_libdir}/${component_path}"/>
        <mkdir dir="${tcs_libdir}/${component_path}/dist"/>

        <copy file="${component.jar}" todir="${tcs_libdir}/${component_path}"/>
        <copy file="${component.dist.jar}" todir="${tcs_libdir}/${component_path}/dist"/>
    </target>

    <target name="dev_submission" depends="test">
        <jar jarfile="${dev_submission.jar}"
             basedir="."
         includes="${ext_libdir}/**,${configdir}/**,${javamain}/**/*.java,${javatests}/**,${testlogdir}/**,${testfiles}/**,${docsdir}/**,build.xml,*.txt"
            />
    </target>

    <target name="design_submission">
        <jar jarfile="${design_submission.jar}"
             basedir="."
             includes="${configdir}/**,${javamain}/**,${docsdir}/**,${testfiles}/**"
            />
    </target>

    <target name="dev_dist">
        <!-- copy TCS Dependencies -->
        <mkdir dir="${jar_tcs_libdir}/${configmanager.path}"/>
        <copy file="${configmanager.jar}" todir="${jar_tcs_libdir}/${configmanager.path}"/>
        <mkdir dir="${jar_tcs_libdir}/${db_connection_factory.path}"/>
        <copy file="${db_connection_factory.jar}" todir="${jar_tcs_libdir}/${db_connection_factory.path}"/>
        <mkdir dir="${jar_tcs_libdir}/${base_exception.path}"/>
        <copy file="${base_exception.jar}" todir="${jar_tcs_libdir}/${base_exception.path}"/>
        <mkdir dir="${jar_tcs_libdir}/${typesafe_enum.path}"/>
        <copy file="${typesafe_enum.jar}" todir="${jar_tcs_libdir}/${typesafe_enum.path}"/>

        <jar jarfile="${dev_dist.jar}"
             basedir="."
             includes="build.xml,
                       ${configdir}/**,
                       ${srcdir}/**,
                       ${docsdir}/**,
                       ${jar_tcs_libdir}/**,
                       ${testfiles}/**"
            />

        <delete dir="${jar_tcs_libdir}"/>
    </target>

    <target name="design_dist">
        <jar jarfile="${design_dist.jar}"
             basedir="."
             includes="build.xml,
                       ${configdir}/**,
                       ${srcdir}/**,
                       ${docsdir}/**,
                       ${jar_tcs_libdir}/**,
                       ${testfiles}/**"
            />
    </target>

    <!-- ************************************************************************** -->
    <!-- ************************ END REMOVE EVERYTHING ***************************** -->
    <!-- ************************************************************************** -->

</project>
