/*
 * Copyright (C) 2011 TopCoder Inc., All Rights Reserved.
 */
package com.topcoder.payments.amazonfps.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Map;

import com.topcoder.payments.amazonfps.Helper;

/**
 * <p>
 * This class is a container for information about a single payment stored in persistence.
 * </p>
 *
 * <p>
 * It is a simple JavaBean (POJO) that provides getters and setters for all private attributes and performs no
 * argument validation in the setters.
 * </p>
 *
 * <strong>Thread Safety:</strong> This class is mutable and not thread safe.
 *
 * @author saarixx, KennyAlive
 * @version 1.0
 */
public class Payment implements Serializable {
    /**
     * The class's serialVersionUID for the serialization runtime.
     */
    private static final long serialVersionUID = -1515610654164254641L;

    /**
     * The ID of the payment.
     * Can be any value. Has getter and setter.
     */
    private long id;

    /**
     * The ID of the authorization for this payment.
     * Can be any value. Has getter and setter.
     */
    private long authorizationId;

    /**
     * The payment amount in USD.
     * Can be any value. Has getter and setter.
     */
    private BigDecimal amount;

    /**
     * The map of parameters associated with this payment.
     * Can be any value. Can contain any values. Has getter and setter.
     */
    private Map<String, String> parameters;

    /**
     * The ID of the transaction generated by <i>Amazon FPS</i>.
     * Can be any value. Has getter and setter.
     */
    private String transactionId;

    /**
     * The status of the payment.
     * Can be any value. Has getter and setter.
     */
    private PaymentStatus status;

    /**
     * Constructs new {@code Payment} instance.
     */
    public Payment() {
        // Empty
    }

    /**
     * Retrieves the ID of the payment.
     *
     * @return the ID of the payment
     */
    public long getId() {
        return id;
    }

    /**
     * Sets the ID of the payment.
     *
     * @param id
     *        the ID of the payment
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * Retrieves the ID of the authorization for this payment.
     *
     * @return the ID of the authorization for this payment
     */
    public long getAuthorizationId() {
        return authorizationId;
    }

    /**
     * Sets the ID of the authorization for this payment.
     *
     * @param authorizationId
     *              the ID of the authorization for this payment
     */
    public void setAuthorizationId(long authorizationId) {
        this.authorizationId = authorizationId;
    }

    /**
     * Retrieves the payment amount in USD.
     *
     * @return the payment amount in USD
     */
    public BigDecimal getAmount() {
        return amount;
    }

    /**
     * Sets the payment amount in USD.
     *
     * @param amount
     *              the payment amount in USD
     */
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    /**
     * Retrieves the map of parameters associated with this payment.
     *
     * @return the map of parameters associated with this payment
     */
    public Map<String, String> getParameters() {
        return parameters;
    }

    /**
     * Sets the map of parameters associated with this payment.
     *
     * @param parameters
     *              the map of parameters associated with this payment
     */
    public void setParameters(Map<String, String> parameters) {
        this.parameters = parameters;
    }

    /**
     * Retrieves the ID of the transaction generated by Amazon FPS.
     *
     * @return the ID of the transaction generated by Amazon FPS
     */
    public String getTransactionId() {
        return transactionId;
    }

    /**
     * Sets the ID of the transaction generated by Amazon FPS.
     *
     * @param transactionId
     *              the ID of the transaction generated by Amazon FPS
     */
    public void setTransactionId(String transactionId) {
        this.transactionId = transactionId;
    }

    /**
     * Retrieves the status of the payment.
     *
     * @return the status of the payment
     */
    public PaymentStatus getStatus() {
        return status;
    }

    /**
     * Sets the status of the payment.
     *
     * @param status
     *              the status of the payment
     */
    public void setStatus(PaymentStatus status) {
        this.status = status;
    }

    /**
     * Converts this object to string presentation.
     *
     * @return string presentation of this object
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("{id: ").append(id)
          .append(", authorizationId: ").append(authorizationId)
          .append(", amount: ").append(Helper.toString(amount))
          .append(", parameters: ").append(Helper.toString(parameters))
          .append(", transactionId: ").append(Helper.toString(transactionId))
          .append(", status: ").append(Helper.toString(status))
          .append("}");
        return sb.toString();
    }
}
