
/// CSharpInterface File "IExtensionEventHandler.cs" generated by Poseidon for UML.
/// Poseidon for UML is developed by <A HREF="http://www.gentleware.com">Gentleware</A>.
/// Generated with <A HREF="http://jakarta.apache.org/velocity/">velocity</A> template engine.

 namespace Orpheus_Client_Logic_for_MSIE {
   namespace Orpheus {
     namespace Plugin {
       namespace InternetExplorer {
         namespace EventsManagers {

           ///  <summary>
           ///  <p style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto; tab-stops:347.45pt" class="MsoNormal"><!--StartFragment-->This interface defines the contract that is required for any event handler to implement. An event handler will be given a context object which holds all the details of the current extension.</p>
           ///  <p style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto; tab-stops:347.45pt" class="MsoNormal">For added flexibility to the design, a factory is used to create implementations of this interface based on a event name.</p>
           ///  <p style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto; tab-stops:347.45pt" class="MsoNormal"><span style='font-size:12.0pt;font-family:"Times New Roman";mso-fareast-font-family: "Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US; mso-bidi-language:AR-SA'>This component provides four implementations of this interface. Each one responsible for handling a different type of event, all sharing the same mechanism to be created and invoked.</span><!--EndFragment--></p>
           ///  <p><strong>Thread safety: </strong>Implementations of this interface are expected to be thread safe.</p>
           ///  <p style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto; tab-stops:347.45pt" class="MsoNormal"><!--EndFragment--></p>
           ///  <!--EndFragment-->           ///  </summary>
           public interface IExtensionEventHandler {



             /// Operations

             /// Operation HandleEvent
             /// <summary>
             /// <p>Implementors of this method are free to handle the specific event as needed. They can make use of the context object provided.</p>
             /// <p><!--EndFragment--></p>             /// </summary>
             /// <exception>ArgumentNullException if any parameter is null.</exception>
             /// <exception>HandleEventException to signal problems in handling the event.</exception>
             /// <param name='sender'>Sender object.</param>
             /// <param name='args'>Extension event arguments.</param>
             void HandleEvent(object sender, Orpheus.Plugin.InternetExplorer.ExtensionEventArgs args) {
             }
           }

         }
       }
     }
   }
 }
