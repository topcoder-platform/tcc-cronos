{\rtf1\ansi\ansicpg1252\uc2 \deff15\deflang1033\deflangfe1028{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fnil\fcharset136\fprq0{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\froman\fcharset136\fprq2{\*\panose 02020300000000000000}\'b7\'73\'b2\'d3\'a9\'fa\'c5\'e9;}{\f16\fmodern\fcharset136\fprq1{\*\panose 02020309000000000000}\'b2\'d3\'a9\'fa\'c5\'e9;}
{\f17\froman\fcharset136\fprq1{\*\panose 00000000000000000000}\'82\'6c\'82\'72 \'96\'be\'92\'a9;}{\f18\fmodern\fcharset136\fprq1{\*\panose 00000000000000000000}\'82\'6c\'82\'72 \'83\'53\'83\'56\'83\'62\'83\'4e;}
{\f19\froman\fcharset0\fprq2{\*\panose 02040604050505020304}Century;}{\f20\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}ArialMT{\*\falt Arial};}{\f21\froman\fcharset136\fprq2{\*\panose 02020300000000000000}@\'b7\'73\'b2\'d3\'a9\'fa\'c5\'e9;}
{\f22\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}{\f23\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}{\f24\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}
{\f25\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f26\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f27\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}
{\f28\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}{\f29\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia;}{\f30\froman\fcharset0\fprq2{\*\panose 02040502050505030304}Palatino Linotype;}
{\f31\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f32\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f33\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}
{\f34\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Microsoft Sans Serif;}{\f35\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimSun;}{\f36\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimSun;}
{\f37\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}NSimSun;}{\f38\fmodern\fcharset134\fprq1{\*\panose 02010609030101010101}@NSimSun;}{\f39\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimHei;}
{\f40\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimHei;}{\f41\fmodern\fcharset136\fprq1{\*\panose 02020309000000000000}@\'b2\'d3\'a9\'fa\'c5\'e9;}{\f42\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}
{\f43\froman\fcharset0\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f44\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f45\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}
{\f46\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f47\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f48\fnil\fcharset2\fprq2{\*\panose 05010100010000000000}MS Outlook;}
{\f49\froman\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f50\froman\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f51\fscript\fcharset0\fprq2{\*\panose 03080602000000000000}Walt Disney Script;}
{\f52\fmodern\fcharset0\fprq1{\*\panose 020b0609030804020204}Bitstream Vera Sans Mono;}{\f53\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho;}{\f54\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}
{\f55\froman\fcharset128\fprq2{\*\panose 02020600040205080304}MS PMincho;}{\f56\froman\fcharset128\fprq2{\*\panose 02020600040205080304}@MS PMincho;}{\f57\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}MS Gothic;}
{\f58\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}@MS Gothic;}{\f59\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}MS PGothic;}{\f60\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}@MS PGothic;}
{\f61\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}MS UI Gothic;}{\f62\fswiss\fcharset128\fprq2{\*\panose 020b0600070205080204}@MS UI Gothic;}{\f63\froman\fcharset0\fprq2{\*\panose 00000000000000000000}!Ps2OcuAe;}
{\f64\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}2OcuAe;}{\f65\froman\fcharset0\fprq2{\*\panose 00000000000000000000}@!Ps2OcuAe;}{\f66\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@2OcuAe;}
{\f67\froman\fcharset0\fprq2{\*\panose 00000000000000000000}\'a1\'50s2OcuAe;}{\f68\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}2OcuAe;}{\f69\froman\fcharset0\fprq2{\*\panose 00000000000000000000}@\'a1\'50s2OcuAe;}
{\f70\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}@2OcuAe;}{\f71\froman\fcharset238\fprq2 Times New Roman CE;}{\f72\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f74\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f75\froman\fcharset162\fprq2 Times New Roman Tur;}{\f76\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f77\fswiss\fcharset238\fprq2 Arial CE;}{\f78\fswiss\fcharset204\fprq2 Arial Cyr;}{\f80\fswiss\fcharset161\fprq2 Arial Greek;}
{\f81\fswiss\fcharset162\fprq2 Arial Tur;}{\f82\fswiss\fcharset186\fprq2 Arial Baltic;}{\f83\fmodern\fcharset238\fprq1 Courier New CE;}{\f84\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f86\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f87\fmodern\fcharset162\fprq1 Courier New Tur;}{\f88\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f95\froman\fcharset238\fprq2 Times CE;}{\f96\froman\fcharset204\fprq2 Times Cyr;}{\f98\froman\fcharset161\fprq2 Times Greek;}
{\f99\froman\fcharset162\fprq2 Times Tur;}{\f100\froman\fcharset186\fprq2 Times Baltic;}{\f101\fswiss\fcharset238\fprq2 Helvetica CE;}{\f102\fswiss\fcharset204\fprq2 Helvetica Cyr;}{\f104\fswiss\fcharset161\fprq2 Helvetica Greek;}
{\f105\fswiss\fcharset162\fprq2 Helvetica Tur;}{\f106\fswiss\fcharset186\fprq2 Helvetica Baltic;}{\f163\froman\fcharset0\fprq2 \'b7\'73\'b2\'d3\'a9\'fa\'c5\'e9;}{\f169\fmodern\fcharset0\fprq1 \'b2\'d3\'a9\'fa\'c5\'e9;}
{\f185\froman\fcharset238\fprq2 Century CE;}{\f186\froman\fcharset204\fprq2 Century Cyr;}{\f188\froman\fcharset161\fprq2 Century Greek;}{\f189\froman\fcharset162\fprq2 Century Tur;}{\f190\froman\fcharset186\fprq2 Century Baltic;}
{\f199\froman\fcharset0\fprq2 @\'b7\'73\'b2\'d3\'a9\'fa\'c5\'e9;}{\f209\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f210\fmodern\fcharset204\fprq1 Lucida Console Cyr;}{\f212\fmodern\fcharset161\fprq1 Lucida Console Greek;}
{\f213\fmodern\fcharset162\fprq1 Lucida Console Tur;}{\f215\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}{\f216\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}{\f218\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}
{\f219\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f221\fswiss\fcharset238\fprq2 Verdana CE;}{\f222\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f224\fswiss\fcharset161\fprq2 Verdana Greek;}{\f225\fswiss\fcharset162\fprq2 Verdana Tur;}
{\f226\fswiss\fcharset186\fprq2 Verdana Baltic;}{\f227\fswiss\fcharset238\fprq2 Arial Black CE;}{\f228\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f230\fswiss\fcharset161\fprq2 Arial Black Greek;}{\f231\fswiss\fcharset162\fprq2 Arial Black Tur;}
{\f232\fswiss\fcharset186\fprq2 Arial Black Baltic;}{\f233\fscript\fcharset238\fprq2 Comic Sans MS CE;}{\f234\fscript\fcharset204\fprq2 Comic Sans MS Cyr;}{\f236\fscript\fcharset161\fprq2 Comic Sans MS Greek;}
{\f237\fscript\fcharset162\fprq2 Comic Sans MS Tur;}{\f238\fscript\fcharset186\fprq2 Comic Sans MS Baltic;}{\f239\fswiss\fcharset238\fprq2 Impact CE;}{\f240\fswiss\fcharset204\fprq2 Impact Cyr;}{\f242\fswiss\fcharset161\fprq2 Impact Greek;}
{\f243\fswiss\fcharset162\fprq2 Impact Tur;}{\f244\fswiss\fcharset186\fprq2 Impact Baltic;}{\f245\froman\fcharset238\fprq2 Georgia CE;}{\f246\froman\fcharset204\fprq2 Georgia Cyr;}{\f248\froman\fcharset161\fprq2 Georgia Greek;}
{\f249\froman\fcharset162\fprq2 Georgia Tur;}{\f250\froman\fcharset186\fprq2 Georgia Baltic;}{\f251\froman\fcharset238\fprq2 Palatino Linotype CE;}{\f252\froman\fcharset204\fprq2 Palatino Linotype Cyr;}
{\f254\froman\fcharset161\fprq2 Palatino Linotype Greek;}{\f255\froman\fcharset162\fprq2 Palatino Linotype Tur;}{\f256\froman\fcharset186\fprq2 Palatino Linotype Baltic;}{\f257\fswiss\fcharset238\fprq2 Tahoma CE;}
{\f258\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f260\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f261\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f262\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f263\fswiss\fcharset238\fprq2 Trebuchet MS CE;}
{\f267\fswiss\fcharset162\fprq2 Trebuchet MS Tur;}{\f275\fswiss\fcharset238\fprq2 Microsoft Sans Serif CE;}{\f276\fswiss\fcharset204\fprq2 Microsoft Sans Serif Cyr;}{\f278\fswiss\fcharset161\fprq2 Microsoft Sans Serif Greek;}
{\f279\fswiss\fcharset162\fprq2 Microsoft Sans Serif Tur;}{\f280\fswiss\fcharset186\fprq2 Microsoft Sans Serif Baltic;}{\f283\fnil\fcharset0\fprq2 SimSun;}{\f289\fnil\fcharset0\fprq2 @SimSun;}{\f295\fmodern\fcharset0\fprq1 NSimSun;}
{\f301\fmodern\fcharset0\fprq1 @NSimSun;}{\f319\fmodern\fcharset0\fprq1 @\'b2\'d3\'a9\'fa\'c5\'e9;}{\f323\fswiss\fcharset238\fprq2 Arial Narrow CE;}{\f324\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f326\fswiss\fcharset161\fprq2 Arial Narrow Greek;}
{\f327\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f328\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}{\f329\froman\fcharset238\fprq2 Bookman Old Style CE;}{\f330\froman\fcharset204\fprq2 Bookman Old Style Cyr;}
{\f332\froman\fcharset161\fprq2 Bookman Old Style Greek;}{\f333\froman\fcharset162\fprq2 Bookman Old Style Tur;}{\f334\froman\fcharset186\fprq2 Bookman Old Style Baltic;}{\f341\froman\fcharset238\fprq2 Garamond CE;}
{\f342\froman\fcharset204\fprq2 Garamond Cyr;}{\f344\froman\fcharset161\fprq2 Garamond Greek;}{\f345\froman\fcharset162\fprq2 Garamond Tur;}{\f346\froman\fcharset186\fprq2 Garamond Baltic;}{\f347\froman\fcharset238\fprq2 Book Antiqua CE;}
{\f348\froman\fcharset204\fprq2 Book Antiqua Cyr;}{\f350\froman\fcharset161\fprq2 Book Antiqua Greek;}{\f351\froman\fcharset162\fprq2 Book Antiqua Tur;}{\f352\froman\fcharset186\fprq2 Book Antiqua Baltic;}
{\f353\fswiss\fcharset238\fprq2 Century Gothic CE;}{\f354\fswiss\fcharset204\fprq2 Century Gothic Cyr;}{\f356\fswiss\fcharset161\fprq2 Century Gothic Greek;}{\f357\fswiss\fcharset162\fprq2 Century Gothic Tur;}
{\f358\fswiss\fcharset186\fprq2 Century Gothic Baltic;}{\f391\fmodern\fcharset0\fprq1 MS Mincho;}{\f389\fmodern\fcharset238\fprq1 MS Mincho CE;}{\f390\fmodern\fcharset204\fprq1 MS Mincho Cyr;}{\f392\fmodern\fcharset161\fprq1 MS Mincho Greek;}
{\f393\fmodern\fcharset162\fprq1 MS Mincho Tur;}{\f394\fmodern\fcharset186\fprq1 MS Mincho Baltic;}{\f397\fmodern\fcharset0\fprq1 @MS Mincho;}{\f395\fmodern\fcharset238\fprq1 @MS Mincho CE;}{\f396\fmodern\fcharset204\fprq1 @MS Mincho Cyr;}
{\f398\fmodern\fcharset161\fprq1 @MS Mincho Greek;}{\f399\fmodern\fcharset162\fprq1 @MS Mincho Tur;}{\f400\fmodern\fcharset186\fprq1 @MS Mincho Baltic;}{\f403\froman\fcharset0\fprq2 MS PMincho;}{\f401\froman\fcharset238\fprq2 MS PMincho CE;}
{\f402\froman\fcharset204\fprq2 MS PMincho Cyr;}{\f404\froman\fcharset161\fprq2 MS PMincho Greek;}{\f405\froman\fcharset162\fprq2 MS PMincho Tur;}{\f406\froman\fcharset186\fprq2 MS PMincho Baltic;}{\f409\froman\fcharset0\fprq2 @MS PMincho;}
{\f407\froman\fcharset238\fprq2 @MS PMincho CE;}{\f408\froman\fcharset204\fprq2 @MS PMincho Cyr;}{\f410\froman\fcharset161\fprq2 @MS PMincho Greek;}{\f411\froman\fcharset162\fprq2 @MS PMincho Tur;}{\f412\froman\fcharset186\fprq2 @MS PMincho Baltic;}
{\f415\fmodern\fcharset0\fprq1 MS Gothic;}{\f413\fmodern\fcharset238\fprq1 MS Gothic CE;}{\f414\fmodern\fcharset204\fprq1 MS Gothic Cyr;}{\f416\fmodern\fcharset161\fprq1 MS Gothic Greek;}{\f417\fmodern\fcharset162\fprq1 MS Gothic Tur;}
{\f418\fmodern\fcharset186\fprq1 MS Gothic Baltic;}{\f421\fmodern\fcharset0\fprq1 @MS Gothic;}{\f419\fmodern\fcharset238\fprq1 @MS Gothic CE;}{\f420\fmodern\fcharset204\fprq1 @MS Gothic Cyr;}{\f422\fmodern\fcharset161\fprq1 @MS Gothic Greek;}
{\f423\fmodern\fcharset162\fprq1 @MS Gothic Tur;}{\f424\fmodern\fcharset186\fprq1 @MS Gothic Baltic;}{\f427\fswiss\fcharset0\fprq2 MS PGothic;}{\f425\fswiss\fcharset238\fprq2 MS PGothic CE;}{\f426\fswiss\fcharset204\fprq2 MS PGothic Cyr;}
{\f428\fswiss\fcharset161\fprq2 MS PGothic Greek;}{\f429\fswiss\fcharset162\fprq2 MS PGothic Tur;}{\f430\fswiss\fcharset186\fprq2 MS PGothic Baltic;}{\f433\fswiss\fcharset0\fprq2 @MS PGothic;}{\f431\fswiss\fcharset238\fprq2 @MS PGothic CE;}
{\f432\fswiss\fcharset204\fprq2 @MS PGothic Cyr;}{\f434\fswiss\fcharset161\fprq2 @MS PGothic Greek;}{\f435\fswiss\fcharset162\fprq2 @MS PGothic Tur;}{\f436\fswiss\fcharset186\fprq2 @MS PGothic Baltic;}{\f439\fswiss\fcharset0\fprq2 MS UI Gothic;}
{\f437\fswiss\fcharset238\fprq2 MS UI Gothic CE;}{\f438\fswiss\fcharset204\fprq2 MS UI Gothic Cyr;}{\f440\fswiss\fcharset161\fprq2 MS UI Gothic Greek;}{\f441\fswiss\fcharset162\fprq2 MS UI Gothic Tur;}{\f442\fswiss\fcharset186\fprq2 MS UI Gothic Baltic;}
{\f445\fswiss\fcharset0\fprq2 @MS UI Gothic;}{\f443\fswiss\fcharset238\fprq2 @MS UI Gothic CE;}{\f444\fswiss\fcharset204\fprq2 @MS UI Gothic Cyr;}{\f446\fswiss\fcharset161\fprq2 @MS UI Gothic Greek;}{\f447\fswiss\fcharset162\fprq2 @MS UI Gothic Tur;}
{\f448\fswiss\fcharset186\fprq2 @MS UI Gothic Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\upr{\stylesheet{\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid 
\snext0 Normal;}{\s1\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid \sbasedon0 \snext0 heading 1;}{\s2\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid \sbasedon0 \snext15 heading 2;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\li480\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid \sbasedon0 \snext15 Normal Indent;}}{\*\ud\uc0{\stylesheet{\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid \snext0 Normal;}{\s1\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid 
\sbasedon0 \snext0 heading 1;}{\s2\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid \sbasedon0 \snext15 heading 2;}{\*\cs10 \additive Default Paragraph Font;}{\s15\li480\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid \sbasedon0 \snext15 
Normal Indent;}}}}{\info{\author HKCSL}{\operator HKCSL}{\creatim\yr2006\mo3\dy16\hr17\min11}{\revtim\yr2006\mo3\dy16\hr19\min4}{\version4}{\edmins4}{\nofpages17}{\nofwords5593}{\nofchars-32766}{\vern77}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \ftnbj\aenddoc\hyphcaps0\horzdoc\dgmargin\dghspace120\dgvspace120\dghorigin1800\dgvorigin1440\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100 \fet0\sectd \linex0\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta \hich .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta \hich .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta \hich .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxta \hich )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb \hich (}
{\pntxta \hich )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb \hich (}{\pntxta \hich )}}\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\tx720\faauto\outlinelevel0 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs28\ul \hich\af1\dbch\af15\loch\f1 Time_Tracker_Project 1.1 Component Specification
\par }\pard\plain \li720\sa120\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20\lang1049 
\par }\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0 \loch\af1\hich\af1\dbch\f15\cgrid {\b \hich\af1\dbch\af15\loch\f1 1.\tab Design
\par }\pard\plain \qj\li720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 
The Time Tracker Project custom component is part of the Time Tracker application.  It provides an abstraction of projects and the clients that the projects are assigned to.  This component handles the persistence and other business logic required by the 
\hich\af1\dbch\af15\loch\f1 a\hich\af1\dbch\af15\loch\f1 pplication.
\par \hich\af1\dbch\af15\loch\f1 
The manager classes handle the business logic. They provide a sort of facade for the user to the functionality offered by this component: client management and project management. The following classes implement the model part of this applicati
\hich\af1\dbch\af15\loch\f1 on: Client, ProjectWorker, Project, ProjectManager.
\par \hich\af1\dbch\af15\loch\f1 The persistence layer is abstracted using an interface. This allows easy swapping of the persistence storage without changes to the rest of the component. The default implementation uses an Informix datab
\hich\af1\dbch\af15\loch\f1 ase for storage. 
\par }\pard \li720\nowidctlpar\faauto {\fs20 \hich\af20\dbch\af15\loch\f20 An observation: in this release a project can have only one client and only one manager(this was decided on the forum).
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af20\dbch\af15\loch\f20 The 1.1 version of component provides several enhancements, but maintains the same API. The places, where something w\hich\af20\dbch\af15\loch\f20 as changed will be marked by }{\fs20\cf2 
\hich\af20\dbch\af15\loch\f20 blue}{\fs20 \hich\af20\dbch\af15\loch\f20  color, and the places, where something new was added will be marked with a }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 red}{\fs20 \hich\af20\dbch\af15\loch\f20  color.
\par }{\fs20\lang1049 
\par }{\i\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Batch Operations
\par }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 The batch versions of the CRUD (Create/Read/Update/Delete) operations of the persistence layer are provided.  This mea\hich\af20\dbch\af15\loch\f20 ns they accept an array rather than single instances.  By caller}
{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \rquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 s choice, the batch operations can be made atomic (all-or-nothing).
\par }{\fs20\cf6\lang1049 
\par }{\i\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project Search
\par }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 This functionality adds the ability to search for all projects based on some criteria.  The search criteria\hich\af20\dbch\af15\loch\f20  can be a combination (with use of logical }{\fs20\cf6 
\loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 AND}{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 , }{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf6 
\hich\af20\dbch\af15\loch\f20 OR}{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20  and }{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 NOT}{\fs20\cf6 
\loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 
 operations) of different search filters. The search functionality is very configurable and flexible. The sample configuration file provides an ability of search within the following project p\hich\af20\dbch\af15\loch\f20 arameters:
\par }\pard \fi-360\li1440\nowidctlpar\tx1440\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project name
\par }\pard \fi-360\li1440\nowidctlpar\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project description
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project manager
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project worker
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project client
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 User, who has created the project
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 User, who has modified the project 
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project start date
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project end date
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project creation date
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Project modification date
\par }\pard \li720\nowidctlpar\faauto {\fs20\cf6\lang1049 
\par }{\i\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Client Search
\par }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 This functionality adds the ability to search for all clients based on some criteria.  The search criteria can be a combination (with use of logical }{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf6 
\hich\af20\dbch\af15\loch\f20 AND}{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 , }{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 OR}{\fs20\cf6 
\loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20  and }{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 NOT}{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf6 
\hich\af20\dbch\af15\loch\f20  operations) of different search filters. The\hich\af20\dbch\af15\loch\f20 
 search functionality is very configurable and flexible. The sample configuration file provides an ability of search within the following client parameters:
\par }\pard \fi-360\li1440\nowidctlpar\tx1440\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Client name
\par }\pard \fi-360\li1440\nowidctlpar\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 User, who has created the client
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 User, who has modified the client 
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Client crea\hich\af20\dbch\af15\loch\f20 tion date
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af20\dbch\af15\loch\f20 Client modification date
\par }\pard \li720\nowidctlpar\faauto {\fs20\cf6\lang1049 
\par }{\fs20\lang1049 
\par 
\par 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 1.1\tab Design Patterns 
\par }\pard\plain \qj\li720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 The }{\b\fs20 \hich\af1\dbch\af15\loch\f1 strategy}{\fs20 \hich\af1\dbch\af15\loch\f1 
 pattern is used for abstracting the persistence implementation in the TimeTrackerProjectPersistence interface.
\par \hich\af1\dbch\af15\loch\f1 The }{\b\fs20 \hich\af1\dbch\af15\loch\f1 data value object}{\fs20 \hich\af1\dbch\af15\loch\f1  pattern is used in the Client, Project, ProjectW\hich\af1\dbch\af15\loch\f1 
orker and ProjectManager classes. These classes facilitate the data exchange between the business logic and the persistence layer.
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 The }{\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 composite}{\fs20\cf6 \hich\af1\dbch\af15\loch\f1  pattern is used by the classes representing search filters (particularly by BinaryOperationFilter and NotFilter
\hich\af1\dbch\af15\loch\f1  classes)
\par }{\fs20\cf6\lang1049\loch\af15 
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\lang1049\loch\af15 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 1.2\tab Industry Standards 
\par }\pard\plain \li720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 SQL, JDBC
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 1.3\tab Required Algorithm}{\b\fs20\loch\af15 
\par }\pard\plain \qj\li720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 The SQL statements are very simple select, insert, update and delete queries, so it is not necessary to provide them as algorithms.
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 The 1.1 version just reuses th\hich\af1\dbch\af15\loch\f1 
e SQL statements for CRUD operations from version 1.0, so they are not included. But the SQL statements for search functionality are included in the sample configuration files.
\par }{\fs20\lang1049\loch\af15 
\par }{\i\fs20 \hich\af1\dbch\af15\loch\f1 1) An algorithm for the constructor of ProjectPersistenceManager. 
\par }{\fs20\lang1049\loch\af15 
\par }{\fs20\cf2 \hich\af1\dbch\af15\loch\f1 //read the\hich\af1\dbch\af15\loch\f1  configuration file
\par \hich\af1\dbch\af15\loch\f1 ConfigManager config = ConfigManager.getInstance();
\par \hich\af1\dbch\af15\loch\f1 String persistenceClassName = config.getString(namespace, "persistence_class");
\par \hich\af1\dbch\af15\loch\f1 String dbNamespace = config.getString(namespace, "connection_factory_namespace");
\par \hich\af1\dbch\af15\loch\f1 String connectionProdu\hich\af1\dbch\af15\loch\f1 cerName = config.getString(namespace, "connection_producer_name");
\par \hich\af1\dbch\af15\loch\f1 String projectSearchUtilityNamespace = config.getString(namespace, "project_search_utility_namespace");
\par \hich\af1\dbch\af15\loch\f1 String clientSearchUtilityNamespace = config.getString(namespace, "client_search_util\hich\af1\dbch\af15\loch\f1 ity_namespace");
\par 
\par \hich\af1\dbch\af15\loch\f1 //create the persistence instance through reflection
\par \hich\af1\dbch\af15\loch\f1 Class[] parameterTypes = null;
\par \hich\af1\dbch\af15\loch\f1 Object[] parameters = null;
\par 
\par \hich\af1\dbch\af15\loch\f1 if (connectionProducerName == null && projectSearchUtilityNamespace == null && clientSearchUtilityNamespace == null) \{
\par \hich\af1\dbch\af15\loch\f1     pa\hich\af1\dbch\af15\loch\f1 rameterTypes = new Class[] \{String.class\};
\par \hich\af1\dbch\af15\loch\f1     parameters = new String[] \{dbNamespace\};
\par \}\hich\af1\dbch\af15\loch\f1  else if (connectionProducerName != null && projectSearchUtilityNamespace == null && clientSearchUtilityNamespace == null) \{
\par \hich\af1\dbch\af15\loch\f1     parameterTypes = new Class[] \{String.c\hich\af1\dbch\af15\loch\f1 lass, String.class\};
\par \hich\af1\dbch\af15\loch\f1     parameters = new String[] \{dbNamespace, connectionProducerName\};
\par \}\hich\af1\dbch\af15\loch\f1  else if (connectionProducerName != null && projectSearchUtilityNamespace != null && clientSearchUtilityNamespace != null) \{
\par \hich\af1\dbch\af15\loch\f1     parameterTypes = new Class[] \{String\hich\af1\dbch\af15\loch\f1 .class, String.class, String.class, String.class\};
\par \hich\af1\dbch\af15\loch\f1     parameters = new String[] \{dbNamespace, connectionProducerName, projectSearchUtilityNamespace, clientSearchUtilityNamespace\};
\par \}\hich\af1\dbch\af15\loch\f1  else \{
\par \hich\af1\dbch\af15\loch\f1     // throw a ConfigurationException here
\par \}
\par 
\par \hich\af1\dbch\af15\loch\f1 persistence = (TimeTrackerProjectPersistence) persistenceClass.getConstructor(parameterTypes).newInstance(parameters);}{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\lang1049\loch\af15 
\par 
\par }{\i\fs20 \hich\af1\dbch\af15\loch\f1 2) Id generation:
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 -obtain a Generator (Int32Generator instance):
\par \hich\af1\dbch\af15\loch\f1   UUIDUtility.getGenerator(UUIDType.TYPEINT32) 
\par \hich\af1\dbch\af15\loch\f1 -obtain an UUID (UUID3\hich\af1\dbch\af15\loch\f1 2Implementation instance)
\par \hich\af1\dbch\af15\loch\f1  UUID uuid = generator.getNextUUID().
\par \hich\af1\dbch\af15\loch\f1  In this case an UUID32Implementation instance is obtained. UUID32Implementation   
\par \hich\af1\dbch\af15\loch\f1  represents the 32-bit UUID implementation of the UUID interface. Since 32 bits are used there is no problem\hich\af1\dbch\af15\loch\f1  in obtaining an int from the uuid.
\par \hich\af1\dbch\af15\loch\f1 -obtain a String from the UUID
\par \hich\af1\dbch\af15\loch\f1  String stringId = uuid.toString()
\par \hich\af1\dbch\af15\loch\f1 -obtain an id:
\par \hich\af1\dbch\af15\loch\f1  int id = Long.valueOf(stringId.toString(), 16).intValue();
\par }{\fs20\cf6\lang1049 
\par }{\i\fs20\cf6 \hich\af1\dbch\af15\loch\f1 3) Common algorithm for atomic batch operations (except read operation)}{\fs20\cf6 
\par 
\par \hich\af1\dbch\af15\loch\f1 // St\hich\af1\dbch\af15\loch\f1 art transaction
\par \hich\af1\dbch\af15\loch\f1 connection.setAutoCommit(false);
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Prepare a statement (SQL statements should be reused from version 1.0)
\par \hich\af1\dbch\af15\loch\f1 // Cache this statement in a map to avoid re-compilation every time it is used
\par \hich\af1\dbch\af15\loch\f1 PreparedStatement statement = connection.prepareState\hich\af1\dbch\af15\loch\f1 ment(sqlStatementString);
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Loop through all the entities to process
\par \{
\par \tab \hich\af1\dbch\af15\loch\f1 // In the loop perform such operations:
\par \tab 
\par \hich\af1\dbch\af15\loch\f1  \tab // Set SQL statement parameters for a particular entity,
\par \hich\af1\dbch\af15\loch\f1  \tab // via statement.setXXX() methods
\par \tab 
\par \tab \hich\af1\dbch\af15\loch\f1 // After setting the parameters, execute the statement
\par \tab \hich\af1\dbch\af15\loch\f1 statement.executeUpdate();
\par \}
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Commit transaction (if all operations were successful)
\par \hich\af1\dbch\af15\loch\f1 connection.commit();
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // If any error happens, the transaction should be rolled-back
\par \hich\af1\dbch\af15\loch\f1 connection.rollback();
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // \hich\af1\dbch\af15\loch\f1 Turn-off transactions
\par \hich\af1\dbch\af15\loch\f1 connection.setAutoCommit(true);
\par }{\fs20\cf6\lang1049\loch\af15 
\par 
\par }{\i\fs20\cf6 \hich\af1\dbch\af15\loch\f1 4) Common algorithm for non-atomic batch operations (except read operation)
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Turn-off transactions
\par \hich\af1\dbch\af15\loch\f1 connection.setAutoCommit(true);
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Prepare a statement (SQL statements should be reused from vers\hich\af1\dbch\af15\loch\f1 ion 1.0)
\par \hich\af1\dbch\af15\loch\f1 // Cache this statement in a map to avoid re-compilation every time it is used
\par \hich\af1\dbch\af15\loch\f1 PreparedStatement statement = connection.prepareStatement(sqlStatementString);
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Loop through all the entities to process
\par \{
\par \tab \hich\af1\dbch\af15\loch\f1 // In the loop perform such operations:
\par \tab 
\par \hich\af1\dbch\af15\loch\f1  \tab // Set SQL statement parameters for a particular entity,
\par \hich\af1\dbch\af15\loch\f1  \tab // via statement.setXXX() methods
\par \tab 
\par \tab \hich\af1\dbch\af15\loch\f1 // After setting the parameters, execute the statement
\par \tab \hich\af1\dbch\af15\loch\f1 statement.executeUpdate();
\par \}
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Note, that the exceptions caught during the processing
\par \hich\af1\dbch\af15\loch\f1 // should not\hich\af1\dbch\af15\loch\f1  break the loop.
\par \hich\af1\dbch\af15\loch\f1 // Instead of this, they should be stored in the Throwable[] array.
\par \hich\af1\dbch\af15\loch\f1 // The number of elements in array should correspond to the number of the entities.}{\fs20\cf6\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // When a particular entity is successfully processed, 
\par \hich\af1\dbch\af15\loch\f1 // the array will contain null \hich\af1\dbch\af15\loch\f1 in the corresponding place.
\par \hich\af1\dbch\af15\loch\f1 // When any error happens, the array will contain 
\par \hich\af1\dbch\af15\loch\f1 // cause exception in the corresponding place.
\par }{\fs20\cf6\lang1049\loch\af15 
\par 
\par }{\fs20\lang1049\loch\af15 
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\i\fs20\cf6 \hich\af1\dbch\af15\loch\f1 5) Common algorithm for the batch read operations
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 //  Prepare a statement (SQL statements should be reused from version 1.0)
\par \hich\af1\dbch\af15\loch\f1 // Cache this statement in a map to avoid re-compilation every time it is used
\par \hich\af1\dbch\af15\loch\f1 PreparedStatement statement = connection.prepareStatement(sqlStatementString);
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Loop through all the entities ids to process
\par \{
\par \tab \hich\af1\dbch\af15\loch\f1 // In the loop perform such operations:
\par \tab 
\par \hich\af1\dbch\af15\loch\f1  \tab \hich\af1\dbch\af15\loch\f1 // Set SQL statement parameters for a particular entity to be retrieved,
\par \hich\af1\dbch\af15\loch\f1  \tab // via statement.setXXX() methods
\par \tab 
\par \tab \hich\af1\dbch\af15\loch\f1 // After setting the parameters, execute the query
\par }{\fs20\cf6\loch\af15 \tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 ResultSet resultSet = statement.executeQuery();
\par }{\fs20\cf6\loch\af15 \tab 
\par \tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // The resulting ResultSet should be proc\hich\af1\dbch\af15\loch\f1 essed in the same way, 
\par \tab \hich\af1\dbch\af15\loch\f1 // as in the version 1.0.
\par \tab \hich\af1\dbch\af15\loch\f1 // It will result in creating instance of a particular entity,
\par \tab \hich\af1\dbch\af15\loch\f1 // which will be put into the result array.\tab 
\par \}
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Note, that if in non-atomic mode, the exceptions should not break the loop.
\par \hich\af1\dbch\af15\loch\f1 // The failur\hich\af1\dbch\af15\loch\f1 e of retrieving individual entities will be indicated through null 
\par \hich\af1\dbch\af15\loch\f1 // set in the result array, instead of a particular entity instance
\par \hich\af1\dbch\af15\loch\f1 // If none of the entities is successfully retrieved, then throw an exception.
\par }{\lang1049\loch\af15 
\par 
\par }{\i\fs20\cf6 \hich\af1\dbch\af15\loch\f1 6) Build search condition string from t\hich\af1\dbch\af15\loch\f1 he search Filter instance.
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 This algorithm describes DatabaseSearchUtility.buildCondition() method.
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 if (searchFilter instanceof ValueFilter) \{
\par \hich\af1\dbch\af15\loch\f1     ValueFilter filter = (ValueFilter) searchFilter;
\par 
\par \hich\af1\dbch\af15\loch\f1     // get the column name of the DB table from the alias
\par \hich\af1\dbch\af15\loch\f1     String columnName = getColumnName(filter.getFieldName());
\par 
\par \hich\af1\dbch\af15\loch\f1     // build the SQL query with compare operation
\par \hich\af1\dbch\af15\loch\f1     buffer.append("(");
\par \hich\af1\dbch\af15\loch\f1     buffer.append(columnName);
\par \hich\af1\dbch\af15\loch\f1     buffer.append(" ");
\par \hich\af1\dbch\af15\loch\f1     buffer.append(filter.getOperation().toString());
\par \hich\af1\dbch\af15\loch\f1     buffer.append(" ?)");
\par 
\par \hich\af1\dbch\af15\loch\f1     // add the parameter value to the list
\par \hich\af1\dbch\af15\loch\f1     parameterValues.add(filter.getValue());
\par \}\hich\af1\dbch\af15\loch\f1  else if (searchFilter instanceof MultiValueFilter) \{
\par \hich\af1\dbch\af15\loch\f1     MultiValueFilter filter = (MultiValueFilter) searchFilter;
\par 
\par \hich\af1\dbch\af15\loch\f1     // get the column n\hich\af1\dbch\af15\loch\f1 ame of the DB table from the alias
\par \hich\af1\dbch\af15\loch\f1     String columnName = getColumnName(filter.getFieldName());
\par 
\par \hich\af1\dbch\af15\loch\f1     // build the SQL query with "IN" predicate
\par \hich\af1\dbch\af15\loch\f1     buffer.append("(");
\par \hich\af1\dbch\af15\loch\f1     buffer.append(columnName);
\par \hich\af1\dbch\af15\loch\f1     buffer.append(" IN (");
\par 
\par \hich\af1\dbch\af15\loch\f1     // add the parameter va\hich\af1\dbch\af15\loch\f1 lues to the list at the same time
\par \hich\af1\dbch\af15\loch\f1     Object[] values = filter.getValues();
\par 
\par \hich\af1\dbch\af15\loch\f1     for (int i = 0; i < values.length; i++) \{
\par \hich\af1\dbch\af15\loch\f1         buffer.append("?,");
\par \hich\af1\dbch\af15\loch\f1         parameterValues.add(values[i]);
\par \hich\af1\dbch\af15\loch\f1     \}
\par 
\par \hich\af1\dbch\af15\loch\f1     // remove the last comma
\par \hich\af1\dbch\af15\loch\f1     buffer.setLength\hich\af1\dbch\af15\loch\f1 (buffer.length() - 1);
\par \hich\af1\dbch\af15\loch\f1     buffer.append("))");
\par \}\hich\af1\dbch\af15\loch\f1  else if (searchFilter instanceof BinaryOperationFilter) \{
\par \hich\af1\dbch\af15\loch\f1     BinaryOperationFilter filter = (BinaryOperationFilter) searchFilter;
\par 
\par \hich\af1\dbch\af15\loch\f1     // build the SQL query with binary operation, the left and right opera\hich\af1\dbch\af15\loch\f1 nds
\par \hich\af1\dbch\af15\loch\f1     // generate the SQL query and add parameter values recursively
\par \hich\af1\dbch\af15\loch\f1     buffer.append("(");
\par \hich\af1\dbch\af15\loch\f1     buildCondition(filter.getLeftOperand(), buffer, parameterValues);
\par \hich\af1\dbch\af15\loch\f1     buffer.append(filter.getOperation().toString());
\par \hich\af1\dbch\af15\loch\f1     buildCondition(filter.getRightOper\hich\af1\dbch\af15\loch\f1 and(), buffer, parameterValues);
\par \hich\af1\dbch\af15\loch\f1     buffer.append(")");
\par \}\hich\af1\dbch\af15\loch\f1  else if (searchFilter instanceof NotFilter) \{
\par \hich\af1\dbch\af15\loch\f1     NotFilter filter = (NotFilter) searchFilter;
\par 
\par \hich\af1\dbch\af15\loch\f1     // build the SQL query with "NOT" operation, the operand
\par \hich\af1\dbch\af15\loch\f1     // generates the SQL query and adds \hich\af1\dbch\af15\loch\f1 parameter value recursively
\par \hich\af1\dbch\af15\loch\f1     buffer.append("(NOT");
\par \hich\af1\dbch\af15\loch\f1     buildCondition(filter.getOperand(), buffer, parameterValues);
\par \hich\af1\dbch\af15\loch\f1     buffer.append(")");
\par \}\hich\af1\dbch\af15\loch\f1  else \{
\par \hich\af1\dbch\af15\loch\f1     throw new IllegalArgumentException("searchFilter is not supported");
\par }{\fs20\cf6\loch\af15 \}
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\lang1049\loch\af15 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 1.4\tab Component Class Overv\hich\af1\dbch\af15\loch\f1 iew
\par }\pard\plain \nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\loch\af15 \tab 
\par }\pard \fi720\nowidctlpar\faauto {\b\fs20 \hich\af1\dbch\af15\loch\f1 Project
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 This class holds the information about project. When creating an instance of this class the user has two options:
\par \hich\af1\dbch\af15\loch\f1 1) Use the default constructor and allow the GUID Generator component to generate a unique id
\par \hich\af1\dbch\af15\loch\f1 
2) Use one of the parameterized constructors and provide an id for the Project instance; if the id already is contained by another project from the Projects table, then the newly created project will not be added to the Projects table
\par \hich\af1\dbch\af15\loch\f1 Also the user should \hich\af1\dbch\af15\loch\f1 
not populate the creationDate and modificationDate fields, because if he does, the entry will not be added to the database. This fields will be handled automatically by the component(the current date will be used). When loading from the persistence, all t
\hich\af1\dbch\af15\loch\f1 h\hich\af1\dbch\af15\loch\f1 e fields will be properly populated.
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 Client
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 This class holds the information about a client. When creating an instance of this class the user has two options:
\par \hich\af1\dbch\af15\loch\f1 1) Use the default constructor and allow the GUID Generator component to generate a unique id
\par \hich\af1\dbch\af15\loch\f1 2)\hich\af1\dbch\af15\loch\f1 
 Use one of the parameterized constructors and provide an id for the Client instance; if the id already is contained by another client from the Clients table, then the newly created client will not be added to the Clients table.
\par \hich\af1\dbch\af15\loch\f1 Also the user should not po\hich\af1\dbch\af15\loch\f1 
pulate the creationDate and modificationDate fields, because if he does, the client will not be added to the database. This fields will be handled automatically by the component (the current date will be used). When loading from the persistence, all the f
\hich\af1\dbch\af15\loch\f1 i\hich\af1\dbch\af15\loch\f1 elds will be properly populated.
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 ProjectManager
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 
This class holds the information about an project manager. It has the following fields: project, managerId,  creationDate, creationUser, modificationDate, modificationUser. When creating an instance of this \hich\af1\dbch\af15\loch\f1 
class the user has two options:
\par \hich\af1\dbch\af15\loch\f1 1) Use the default constructor which does nothing
\par \hich\af1\dbch\af15\loch\f1 2) Use the parameterized constructor and provide an id and a project argument. The user should not populate the creationDate and modificationDate fields, because if he does, \hich\af1\dbch\af15\loch\f1 
the project manager will not be added to the database. This fields will be handled automatically by the component (the current date will be used). When loading from the persistence, all the fields will be properly populated.
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 ProjectWorker
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 This class holds\hich\af1\dbch\af15\loch\f1 
 the information about an project worker. It has the following fields: project, workerId, startDate, endDate, payRate, creationDate, creationUser, modificationDate, modificationUser. When creating an instance of this class the user has two options:
\par \hich\af1\dbch\af15\loch\f1 1) Use \hich\af1\dbch\af15\loch\f1 the default constructor which does nothing
\par \hich\af1\dbch\af15\loch\f1 2) Use the parameterized constructor and provide an id and a project argument. The user should not populate the creationDate and modificationDate fields, because if he does, the project worker will not be added to
\hich\af1\dbch\af15\loch\f1  the database. This fields will be handled automatically by the component (the current date will be used). When loading from the persistence, all the fields will be properly populated.
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 ProjectPersistenceManager
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 This manager is responsible for reading the \hich\af1\dbch\af15\loch\f1 
configuration file. To accomplish this it will use the Configuration Manager component. From the configuration file two properties can be read:
\par \hich\af1\dbch\af15\loch\f1 -a class name identifying an implementation of TimeTrackerProjectPersistence(this property is required)
\par \hich\af1\dbch\af15\loch\f1 -a conne\hich\af1\dbch\af15\loch\f1 ction producer name identifying a ConnectionProducer instance(this property is optional). This instance of ConnectionProducer will provide the connection to the database.
\par \hich\af1\dbch\af15\loch\f1 Using these two properties this manager will create thorough reflection an TimeTracke\hich\af1\dbch\af15\loch\f1 
rProjectPersistence implementation instance which will be used by the other two managers. These managers will use the getPersistence method to access the TimeTrackerProjectPersistence. 
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 ClientUtility
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 The ClientUtility is useful to manage the clients.  
\par \hich\af1\dbch\af15\loch\f1 . It can do the following things:
\par \hich\af1\dbch\af15\loch\f1 -add a client(Client instance) to the Clients table; if the Client instance has the id=-1 this manager will use the GUID Generator to generate an id for the Client instance
\par \hich\af1\dbch\af15\loch\f1 -delete a client from the Clients table
\par \hich\af1\dbch\af15\loch\f1 -delete a\hich\af1\dbch\af15\loch\f1 ll the clients from the Clients table
\par \hich\af1\dbch\af15\loch\f1 -retrieve a client(given its id) from the Clients table
\par \hich\af1\dbch\af15\loch\f1 -retrieve all the clients from the Clients table
\par \hich\af1\dbch\af15\loch\f1 -update a client in the Clients table
\par \hich\af1\dbch\af15\loch\f1 -add a project to a client
\par \hich\af1\dbch\af15\loch\f1 -retrieve a certain project(specified by its id)\hich\af1\dbch\af15\loch\f1  of a client
\par \hich\af1\dbch\af15\loch\f1 
This manager will receive in the constructor an ProjectPersistenceManager instance. It will use this instance to gain access to the database. It will use the getPersistence method from the ProjectPersistenceManager instance to obtain the persi
\hich\af1\dbch\af15\loch\f1 stence
\par }\pard \li720\nowidctlpar\faauto {\fs20\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 Since version 1.1 this class also supports the batch versions of the CRUD operations
\par \hich\af1\dbch\af15\loch\f1 and the search functionality.}{\fs20\cf6\loch\af15 
\par }{\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 ProjectUtility
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 The ProjectUtility is useful to manage the projects.  
\par \hich\af1\dbch\af15\loch\f1 . It can do the following things:
\par \hich\af1\dbch\af15\loch\f1 -add a Project(Project insta\hich\af1\dbch\af15\loch\f1 nce) to the Projects table; if the Project instance has the id=-1 this manager will use the GUID Generator to generate an id for the Project instance
\par \hich\af1\dbch\af15\loch\f1 -delete a project from the Projects table
\par \hich\af1\dbch\af15\loch\f1 -delete all the clients from the Projects table
\par \hich\af1\dbch\af15\loch\f1 -retrieve a proj\hich\af1\dbch\af15\loch\f1 ect(given its id) from the Projects table
\par \hich\af1\dbch\af15\loch\f1 -retrieve all the projects from the Projects table
\par \hich\af1\dbch\af15\loch\f1 -update a project in the Projects table
\par \hich\af1\dbch\af15\loch\f1 -assign a client to a project
\par \hich\af1\dbch\af15\loch\f1 -retrieve the client of a specified project
\par \hich\af1\dbch\af15\loch\f1 -add/remove/update/retrieve workers
\par \hich\af1\dbch\af15\loch\f1 -assign/remove/retrieve project manager
\par \hich\af1\dbch\af15\loch\f1 -add/remove/retrieve time entries
\par \hich\af1\dbch\af15\loch\f1 -add/remove/retrieve expense entries
\par \hich\af1\dbch\af15\loch\f1 This manager will receive in the constructor an ProjectPersistenceManager instance. It will use this instance to gain access to the database. It \hich\af1\dbch\af15\loch\f1 
will use the getPersistence method from the ProjectPersistenceManager instance to obtain the persistence
\par }\pard \li720\nowidctlpar\faauto {\fs20\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 Since version 1.1 this class also supports the batch versions of the CRUD operations
\par \hich\af1\dbch\af15\loch\f1 and the search functionality.}{\fs20\cf6\loch\af15 
\par }{\fs20\loch\af15 
\par }{\b\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 TimeTrackerProjectPersistence
\par }\pard \qj\li720\sa120\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1  Ti\hich\af1\dbch\af15\loch\f1 
meTrackerProjectPersistence represents the interface for data access. Client can choose between alternative implementations to suit persistence migration. Interface defines all necessary methods to interact with the database. This release comes with an In
\hich\af1\dbch\af15\loch\f1 f\hich\af1\dbch\af15\loch\f1 
ormix implementation.The methods exposes by this interface are very raw (it would be hard for a user to use them to obtain the functionality). They are aimed to an efficient database implementation (using INSERT, SELECT, UPDATE and DELETE statements) but 
\hich\af1\dbch\af15\loch\f1 o\hich\af1\dbch\af15\loch\f1 ther storage technologies can be used just as well (such as XML).  }{\fs20\loch\af15 
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20\cf6 \hich\af1\dbch\af15\loch\f1 Version 1.1 added such functionality:
\par \hich\af1\dbch\af15\loch\f1 - batch versions of client/project CRUD operations.
\par \hich\af1\dbch\af15\loch\f1 - client/project search functionality}{\fs20\cf6\loch\af15 
\par 
\par }\pard \li720\nowidctlpar\faauto {\b\fs20 \hich\af1\dbch\af15\loch\f1 InformixTimeTrackerProjectPersistence
\par }\pard \qj\li720\sa120\nowidctlpar\faauto {\fs20\cf1 \hich\af1\dbch\af15\loch\f1 This class is a concr\hich\af1\dbch\af15\loch\f1 
ete implementation of the TimeTrackerProjectPersistence  interface that uses an Informix database as persistence. This implementation uses the DB Connection Factory component to obtain a connection to the database. }{\fs20 \hich\af1\dbch\af15\loch\f1 
Transaction should be employed to ensure \hich\af1\dbch\af15\loch\f1 
atomicity. This class provides two constructors. If the default constructor is used to create an instance of this class, then the DEFAULT_CONNECTION_PRODUCER_NAME constant will be used to obtain a connection from the DB Connection Factory component. If th
\hich\af1\dbch\af15\loch\f1 e\hich\af1\dbch\af15\loch\f1  parameterized constructor is used then the user has the possibility to specify a name that will be passed to the DB Connection Factory component to obtain a connection to the Informix database.  }{
\fs20\loch\af15 
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20\cf6 \hich\af1\dbch\af15\loch\f1 Version 1.1 added such functionality:
\par \hich\af1\dbch\af15\loch\f1 - batch versions of c\hich\af1\dbch\af15\loch\f1 lient/project CRUD operations.
\par \hich\af1\dbch\af15\loch\f1 - client/project search functionality}{\fs20\cf6\loch\af15 
\par }{\fs20\loch\af15 
\par }\pard \li720\nowidctlpar\faauto {\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 DatabaseSearchUtility
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 This class is used to perform search operations, using the specified search Filter.
\par \hich\af1\dbch\af15\loch\f1 It is used by the InformixTimeTrackerPersistence class, but can safely be reused\hich\af1\dbch\af15\loch\f1  by other DB persistence implementations.
\par \hich\af1\dbch\af15\loch\f1 Main its function is to create PreparedStatement representing the Filter and initialize its parameters to proper values. This class is  configured via ConfigManager.}{\fs20\cf6\loch\af15 
\par 
\par }{\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 Filter
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 Thi\hich\af1\dbch\af15\loch\f1 
s interface represents a search filter. A search filter is used to specify what entities to search. In this component it is used to specify what projects or clients to search. Note, that the filter itself acts just like a data-structure, which specifies t
\hich\af1\dbch\af15\loch\f1 h\hich\af1\dbch\af15\loch\f1 e parameters of search; it doesn't contain any search logic.}{\fs20\cf6\loch\af15 
\par }{\b\fs20\cf6\loch\af15 
\par }{\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 ValueFilter
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 This class implements the Filter interface.
\par \hich\af1\dbch\af15\loch\f1 This class represents a search filter, which compares the values of the specified field of the entity with the specified value, using the \hich\af1\dbch\af15\loch\f1 specified CompareOperation.
\par \hich\af1\dbch\af15\loch\f1 The entity is accepted if the operation returns true value, and is not accepted otherwise.
\par \hich\af1\dbch\af15\loch\f1 The supported operations are:
\par }\pard \fi-360\li1440\nowidctlpar\tx1440\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 equal to
\par }\pard \fi-360\li1440\nowidctlpar\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 less than
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 less than or equal to
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 greater than
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 greater than or equal to
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 like (compare a string filed with a specified pattern string)}{\fs20\cf6\loch\af15 
\par }\pard \li720\nowidctlpar\faauto {\fs20\cf6\loch\af15 
\par }{\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 CompareOperation
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 This class is derived from the Enum class.
\par \hich\af1\dbch\af15\loch\f1 This class represents an enumeration type, representing the compare operations to be used by the ValueFilter.
\par \hich\af1\dbch\af15\loch\f1 It has such values:
\par }\pard \fi-360\li1440\nowidctlpar\tx1440\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 E\hich\af1\dbch\af15\loch\f1 
QUAL - "=" operation, the result filter accepts only the entities, the specified field of which is equal to the specified value
\par }\pard \fi-360\li1440\nowidctlpar\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 LESS - "<" operation, the result filter accepts only the entities, the specified field of which is less than the specified val
\hich\af1\dbch\af15\loch\f1 ue
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 LESS_OR_EQUAL - "<=" operation, the result filter accepts only the entities, the specified field of which is less than or equal to the specified value
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 GREATER - ">" operation, the result filter accepts only the entities, the specified field of which\hich\af1\dbch\af15\loch\f1  is greater than the specified value
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 GREATER_OR_EQUAL - ">=" operation, the result filter accepts only the entities, the specified field of which is greater than or equal to the specified value
\par }{\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 LIKE - "like" operation, the result filter accepts only th\hich\af1\dbch\af15\loch\f1 e entities, the specified field of which matches specified pattern.}{
\fs20\cf6\loch\af15 
\par }\pard \li720\nowidctlpar\faauto {\fs20\cf6\loch\af15 
\par }{\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 MultiValueFilter
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 This class implements the Filter interface.
\par \hich\af1\dbch\af15\loch\f1 This class represents a sear\hich\af1\dbch\af15\loch\f1 
ch filter, which compares the values of the specified field of the entity with the specified array of values. The entity is accepted if field value is equal to one of the values in the array. This filter corresponds to the "IN" predicate in SQL query.}{
\fs20\cf6\loch\af15 
\par 
\par }{\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 Not\hich\af1\dbch\af15\loch\f1 Filter
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 This class implements the Filter interface.
\par \hich\af1\dbch\af15\loch\f1 This class represents a search filter, "negating" a search filter. It performs logical "NOT" operation on the specified filter. It means, that this filter will accept only these values, which are not accep
\hich\af1\dbch\af15\loch\f1 ted by the specified filter.}{\fs20\cf6\loch\af15 
\par 
\par }{\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 BinaryOperationFilter
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 This class implements the Filter interface. This class represents a search filter, combining two other search filters. The specified BinaryOperation is used to combine the filters. It can be either logica
\hich\af1\dbch\af15\loch\f1 l "AND" or logical "OR" operation.}{\fs20\cf6\loch\af15 
\par }\pard \fi-360\li1440\nowidctlpar\tx1440\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 "AND" operation means, that this filter accepts only the values,which are accepted by both of the specified filters.

\par }\pard \fi-360\li1440\nowidctlpar\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 "OR" operation means, that this filter accepts the values,which are accepted at least by one of the \hich\af1\dbch\af15\loch\f1 
specified filters.}{\fs20\cf6\loch\af15 
\par }\pard \li720\nowidctlpar\faauto {\fs20\cf6\loch\af15 
\par }{\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 BinaryOperation}{\b\fs20\cf6\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 This class is derived from the Enum class.
\par \hich\af1\dbch\af15\loch\f1 This class represents an enumeration type, representing the binary logical operations to be used by the BinaryOperationFilter.
\par \hich\af1\dbch\af15\loch\f1 It has such values:
\par }\pard \fi-360\li1440\nowidctlpar\tx1440\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 AND - logical "AND" operatio\hich\af1\dbch\af15\loch\f1 
n, the result filter accepts only the entities, accepted by both operand filters
\par }\pard \fi-360\li1440\nowidctlpar\faauto {\fs20\cf6 \hich\af0\dbch\af15\loch\f0 -\tab }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 OR - logical "OR" operation, the result filer accepts the entities, accepted by at least one of the operand filters}{
\fs20\cf6\loch\af15 
\par }\pard \li720\nowidctlpar\faauto {\fs20\loch\af15 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 1.5\tab Component Exception Definitions
\par }\pard\plain \nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\loch\af15 \tab }{\b\fs20 \hich\af1\dbch\af15\loch\f1 Persistence Excepti\hich\af1\dbch\af15\loch\f1 on[custom]}{\loch\af15 
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 The PersistenceException exception is used to wrap any persistence implementation specific exception. These exceptions are thrown by the TimeTrackerProjectPersistence
\par \hich\af1\dbch\af15\loch\f1  interface implementations. Since they are implementation specific, there need\hich\af1\dbch\af15\loch\f1 s to be a common way to report them to the user, and that is what this exception is used for. 
\par \hich\af1\dbch\af15\loch\f1 This exception is originally thrown in the persistence implementations. The business logic layer (the manager classes) will forward them to the user.
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 ConfigurationException[custom]
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 This exception is thrown by the ProjectPersistenceManager if anything goes wrong in the process of loading the configuration file or if the information is missing or corrupt. 
\par \hich\af1\dbch\af15\loch\f1 It is also thrown by the DatbaseSearchUtility cla\hich\af1\dbch\af15\loch\f1 ss when any error happens, when loading the configuration parameters.
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 InsufficientDataException[custom]
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 This exception is thrown when some required fields (NOT NULL) are not set when creating or updating an entry, type or status in the persistence. This e\hich\af1\dbch\af15\loch\f1 
xception is thrown by the ProjectUtility and ClientUtility.
\par }\pard \li720\nowidctlpar\faauto {\b\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 NullPointerException
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 This exception is thrown in various methods where null value is not acceptable.
\par \hich\af1\dbch\af15\loch\f1 Refer to the documentation in Poseidon for more details.
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 IllegalArgumentException
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 This except\hich\af1\dbch\af15\loch\f1 ion is thrown in various methods if the given string argument is empty. Refer to the documentation in Poseidon for more details.
\par }\pard \li720\sa120\nowidctlpar\faauto {\fs20\lang1049 
\par }\pard \li720\nowidctlpar\faauto {\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 BatchOperationException[custom]
\par }{\fs20\cf6\lang1049 \hich\af1\dbch\af15\loch\f1 This exception is thrown by the implementations of TimeTrackerProjectPersistence interface, wh\hich\af1\dbch\af15\loch\f1 en the batch operation fails.
\par \hich\af1\dbch\af15\loch\f1 It is also rethrown by the ProjectUtility and ClientUtility classes.}{\lang1049\loch\af15 
\par }{\fs20\cf6\lang1049 \hich\af1\dbch\af15\loch\f1 It stores the array of cause exceptions, each corresponding to the particular operation.
\par \hich\af1\dbch\af15\loch\f1 If a particular operation was successfull the array contains null in that place.
\par }{\fs20\lang1049\loch\af15 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 1.6\tab Thread Safety
\par }\pard\plain \qj\li720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 This component is not thread safe. Thread safety was not a requirement.
\par }\pard \qj\li720\sa120\sl240\slmult0\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 Conflicts may occur in the persistence layer. In order to avoid them one would have \hich\af1\dbch\af15\loch\f1 
to synchronize all the methods from the persistence implementations, to avoid concurrent database access. In addition, before making any change to the database, one would have to make sure the existing data is still valid. 
\par }\pard \qj\li720\nowidctlpar\faauto {\fs20\lang1049 \hich\af1\dbch\af15\loch\f1  
\par }\pard \qj\li720\sa120\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 In order to achieve this goal \hich\af1\dbch\af15\loch\f1 
the database operations have to be atomic. The solution is to use JDBC transactions. The Connection class provides the setAutoCommit method to switch into manual commit mode. After that, the SQL statement that need to be executed in one transaction are ex
\hich\af1\dbch\af15\loch\f1 e\hich\af1\dbch\af15\loch\f1 
cuted in sequence. At the end the commit or rollback methods are used depending on whether everything was successful or an error occurred. If commit is successful then we have the guarantee that everything was executed atomically.
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 
The 1.1 version doesn't add anything really new to the question of thread-safety. The information about mutability of particular classes can be looked-up in the docs tab of Poseidon. All the classes, representing the search filters are immutable, i.e. thr
\hich\af1\dbch\af15\loch\f1 e\hich\af1\dbch\af15\loch\f1 ad-safe. The DatabaseSearchUtility class is mutable, i.e. not thread-safe.
\par }\pard \nowidctlpar\faauto {\lang1049 \hich\af0\dbch\af15\loch\f0  
\par }\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0 \loch\af1\hich\af1\dbch\f15\cgrid {\b \hich\af1\dbch\af15\loch\f1 2.\tab Environment Requirements\tab \tab 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 2.1\tab Environment
\par }\pard\plain \fi-216\li936\nowidctlpar\tx1152\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\fs20 \hich\af1\dbch\af15\loch\f1 Development language: Java 1.4
\par }\pard \fi-216\li936\nowidctlpar\faauto {\fs20 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\fs20 \hich\af1\dbch\af15\loch\f1 Compile target: Java 1.4
\par }\pard \nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 2.2\tab TopCoder Software Components
\par }\pard\plain \qj\fi-216\li1080\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\b\fs20 \hich\af1\dbch\af15\loch\f1 Configuration Manager 2.1.4 }{\b\fs20 \hich\af0\dbch\af15\loch\f0 -}{\b\fs20 
\hich\af1\dbch\af15\loch\f1  }{\fs20 \hich\af1\dbch\af15\loch\f1 used to\hich\af1\dbch\af15\loch\f1 
 retrieve the configured data. This component is used by getting its singleton instance with ConfigManager.getInstance(). Then the existsNamespace method should be used to determine whether the namespace is already loaded. If not, the add method is used t
\hich\af1\dbch\af15\loch\f1 o\hich\af1\dbch\af15\loch\f1  load the default configuration file. Finally, getString returns the values of the properties.
\par }\pard \qj\fi-216\li1080\sa120\nowidctlpar\faauto {\fs20 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\b\fs20 \hich\af1\dbch\af15\loch\f1 GUID Generator 1.0}{\fs20 \hich\af1\dbch\af15\loch\f1 
is used to assign unique ids to records. This component has the advantage of not requiring persistent storage (such as ID Generator requires)\hich\af1\dbch\af15\loch\f1 
, making the component easier to use. A generator is obtained with UUIDUtility.getGenerator(UUIDType.TYPEINT32). Then using generator.getNextUUID().toString() ids are generated as needed.
\par }{\fs20 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\b\fs20 \hich\af1\dbch\af15\loch\f1 Base Exception 1.0 }{\fs20 \hich\af1\dbch\af15\loch\f1 is used as a base class for the all the custom \hich\af1\dbch\af15\loch\f1 
exceptions defined in this component. The purpose of this component is to provide a consistent way to handle the cause exception for both JDK 1.3 and JDK 1.4.
\par }{\fs20 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\b\fs20 \hich\af1\dbch\af15\loch\f1 DB Connection Factory 1.0 }{\fs20 \hich\af1\dbch\af15\loch\f1 provides a simple but flexible framework allowing the clients to obta\hich\af1\dbch\af15\loch\f1 
in the connections to a SQL database without providing any implementation details. This component is used to obtain a connection to an Informix database(in the current implementation of Expense Entry component).
\par }\pard \qj\li720\sa120\nowidctlpar\faauto {\fs20\lang1049 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 2.3\tab Third Party Components
\par }\pard\plain \li720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 None}{\hich\af0\dbch\af15\loch\f0 .
\par }\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0 \loch\af1\hich\af1\dbch\f15\cgrid {\b \hich\af1\dbch\af15\loch\f1 3.\tab Install\hich\af1\dbch\af15\loch\f1 ation and Configuration
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 3.1\tab Package Name
\par }\pard\plain \li720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 com.cronos.timetracker.project
\par \hich\af1\dbch\af15\loch\f1 com.cronos.timetracker.project.persistence
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 com.cronos.timetracker.project.searchfilters
\par }{\fs20\cf6\lang1049\loch\af15 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 3.2\tab Configuration Parameters
\par }\pard\plain \sa120\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20\loch\af15 
\par }{\fs20\lang1049 \hich\af1\dbch\af15\loch\f1     
\par }\trowd \clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \cltxlrtb \cellx2592\clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \cltxlrtb \cellx5264\clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl
\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb \cellx8640\pard \nowidctlpar\intbl\faauto {\b\i \hich\af0\dbch\af15\loch\f0 Parameter \cell \hich\af0\dbch\af15\loch\f0 Description\cell \hich\af0\dbch\af15\loch\f0 Values\cell }\pard 
\nowidctlpar\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright {\row }\trowd \clvertalt\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \cltxlrtb \cellx2592\clvertalt\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \cltxlrtb \cellx5264\clvertalt\clbrdrl
\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb \cellx8640\pard \nowidctlpar\intbl\faauto {\b\fs20 \hich\af1\dbch\af15\loch\f1 persistence_class\cell }{\fs20 \hich\af1\dbch\af15\loch\f1 
Fully qualified class name of the TimeTrackerProjectPersistence implementation. }{\b\fs20 \hich\af1\dbch\af15\loch\f1 Required}{\fs20 \hich\af1\dbch\af15\loch\f1 .\cell \hich\af1\dbch\af15\loch\f1 InformixTimeTrackerProjectPersistence\cell }\pard 
\nowidctlpar\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright {\loch\af15 \row }\pard \nowidctlpar\intbl\faauto {\b\fs20\lang1049 \hich\af1\dbch\af15\loch\f1 connection_factory_namespace}{\b\fs20 \cell }{\fs20\lang1049 \hich\af1\dbch\af15\loch\f1 
The namespace of the DB Connection Factory configuration file. }{\b\fs20\lang1049 \hich\af1\dbch\af15\loch\f1 Required}{\fs20\lang1049 \hich\af1\dbch\af15\loch\f1 .}{\fs20 \cell }{\fs20\lang1049 \hich\af1\dbch\af15\loch\f1 com.topcoder.db.connectio
\hich\af1\dbch\af15\loch\f1 nfactory}{\fs20 \cell }\pard \nowidctlpar\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright {\row }\pard \nowidctlpar\intbl\faauto {\b\fs20 \hich\af1\dbch\af15\loch\f1 connection_producer_name\cell }{\fs20 
\hich\af1\dbch\af15\loch\f1 Identifies a  ConnectionProducer which will be used to obtain a connection to a database. }{\b\fs20 \hich\af1\dbch\af15\loch\f1 Optional}{\fs20 \cell \hich\af1\dbch\af15\loch\f1 Informix_Connection_Producer\cell }\pard 
\nowidctlpar\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright {\loch\af15 \row }\pard \nowidctlpar\intbl\faauto {\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 project_search_utility_namespace\cell }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 
Specifies the ConfigManager namespace to use for retrieving configuration of DatabaseSearchUtility used to search projects. }{\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 Optional}{\fs20\cf6 \cell \hich\af1\dbch\af15\loch\f1 
com.cronos.timetracker.project.persistence.DatabaseSearchUtility.projects\cell }\pard \nowidctlpar\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright {\loch\af15 \row }\trowd \clvertalt\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \cltxlrtb \cellx2592
\clvertalt\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \cltxlrtb \cellx5264\clvertalt\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb \cellx8640\pard \nowidctlpar\intbl\faauto {\b\fs20\cf6 \hich\af1\dbch\af15\loch\f1 
client_search_utility_namespace\cell }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 Specifies the Co\hich\af1\dbch\af15\loch\f1 nfigManager namespace to use for retrieving configuration of DatabaseSearchUtility used to search clients. }{\b\fs20\cf6 
\hich\af1\dbch\af15\loch\f1 Optional}{\fs20\cf6 \cell \hich\af1\dbch\af15\loch\f1 com.cronos.timetracker.project.persistence.DatabaseSearchUtility.clients\cell }\pard \nowidctlpar\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright {\cf6\loch\af15 \row 
}\pard \sa120\nowidctlpar\faauto {\fs20\lang1049 \hich\af1\dbch\af15\loch\f1       
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 Here is an example of the configuration file:
\par }\pard \li360\nowidctlpar\faauto {\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <?xml version\hich\af1\dbch\af15\loch\f1 ="1.0" ?>  
\par \hich\af1\dbch\af15\loch\f1 <CMConfig>  
\par }{\fs16\cf2\loch\af15 \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <Config name="com.cronos.timetracker.project.PersistenceManager">
\par \tab \tab \hich\af1\dbch\af15\loch\f1 <!--the  class name of the persistence-->
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 persistence_class}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{
\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <value>InformixTimeTrackerProjectPersistence</value>
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property> 
\par }\pard \fi360\li1080\nowidctlpar\faauto {\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <!-- the na\hich\af1\dbch\af15\loch\f1 mespace of the DB Connection Factory configuration file (required) -->
\par }\pard \fi720\li720\nowidctlpar\faauto {\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <Property name="connection_factory_namespace">
\par }\pard \fi360\li1800\nowidctlpar\faauto {\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <Value>com.topcoder.db.connectionfactory</Value>
\par }\pard \li1440\nowidctlpar\faauto {\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </Property>
\par }\pard \li360\nowidctlpar\faauto {\fs16\cf2 \tab \tab \hich\af1\dbch\af15\loch\f1 <!--the  name identifying a ConnectionProducer instance-->
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 connection_producer_name}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{
\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >
\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab <value> Informix_Connection_Producer</value>
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property> 
\par }{\fs16\cf2\loch\af15 \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </Config>
\par \tab \hich\af1\dbch\af15\loch\f1 <!-- Configuration of the DatabseSearchUtility used to search projects -->
\par }{\fs16\cf2\loch\af15 \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <Config name="com.cronos.timetracker.project.persistence.Data\hich\af1\dbch\af15\loch\f1 baseSearchUtility.projects">
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <!--The SQL query template, required-->
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 query_template}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 
\hich\af1\dbch\af15\loch\f1 >
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <value>select distinct Projects.ProjectsID from Projects, ProjectWorkers,  ProjectManagers, ClientProjects where (Projects.ProjectsID = ProjectWork\hich\af1\dbch\af15\loch\f1 
ers.ProjectsID) and(Projects.ProjectsID = ClientProjects.ProjectsID)and(Projects.ProjectsID = ProjectManagers.ProjectsID) and </value>
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property> 
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <!-- The aliases of the DB column names, required-->
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 column_aliases}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 
\hich\af1\dbch\af15\loch\f1 >
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <!-- Name of \hich\af1\dbch\af15\loch\f1 a particular property is a name of the alias -->
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <!-- Value of a particular property is a value of the alias -->
\par }{\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=\hich\f1 \rdblquote \loch\f1 Name\hich\f1 \rdblquote \loch\f1 >}{\loch\af15 
\par }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Projects.Name</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par }{\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=\hich\f1 \rdblquote \loch\f1 Description\hich\f1 \rdblquote \loch\f1 >}{\loch\af15 
\par }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Projects.Description\hich\af1\dbch\af15\loch\f1 </value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Project Manager}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 
>
\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>ProjectManagers.UsersID</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Project Worker}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >

\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>ProjectWorkers.UsersID</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Project Client}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >

\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <value>ClientProjects.ClientsID</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Creation User}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >

\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Projects.CreationUser</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Modification User}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{
\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >
\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Projects.ModificationUser</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <prope\hich\af1\dbch\af15\loch\f1 rty name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Start Date}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 
\hich\af1\dbch\af15\loch\f1 >
\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Projects.StartDate</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 End Date}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >

\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Projects.EndDate</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Creation Date}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >

\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Projects.CreationDate</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <p\hich\af1\dbch\af15\loch\f1 roperty name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Modification Date}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{
\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >
\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Projects.ModificationDate</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \hich\af1\dbch\af15\loch\f1 </property> 
\par }{\fs16\cf2\loch\af15 \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </Config>
\par }{\fs16\cf2\lang1049\loch\af15 
\par }{\fs16\cf2\loch\af15 \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <!-- Configuration of the DatabseSearchUtility used to search clients-->
\par \tab \hich\af1\dbch\af15\loch\f1 <Config name="com.cronos.timetracker.project.persistence.Da\hich\af1\dbch\af15\loch\f1 tabaseSearchUtility.clients">
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <!--The SQL query template, required-->
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 query_template}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 
\hich\af1\dbch\af15\loch\f1 >
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <value>select distinct Clients.ClientsID from Clients where </value>
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property> 
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <!-- The aliases of the DB column names, required-->
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 column_aliases}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 
\hich\af1\dbch\af15\loch\f1 >
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <!-- Name of a particular property is a name of the alias -->
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <!-- Value of a particular property is a value of the alias -->
\par }{\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=\hich\f1 \rdblquote \loch\f1 Name\hich\f1 \rdblquote \loch\f1 >}{\loch\af15 
\par }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Clients.Name</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name\hich\af1\dbch\af15\loch\f1 =}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Creation User}{\fs16\cf2 
\loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >
\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Clients.CreationUser</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Modification User}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{
\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >
\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Clients.ModificationUser</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab 
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Creation Date}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 >

\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Clients.CreationDate</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par \tab \tab \tab \hich\af1\dbch\af15\loch\f1 <property name=}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 Modification Date}{\fs16\cf2 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs16\cf2 
\hich\af1\dbch\af15\loch\f1 >
\par \hich\af1\dbch\af15\loch\f1  \tab \tab \tab \tab <value>Clients.ModificationDate</value>
\par }{\fs16\cf2\loch\af15 \tab \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property>
\par }{\fs16\cf2\loch\af15 \tab \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </property> 
\par }{\fs16\cf2\loch\af15 \tab }{\fs16\cf2 \hich\af1\dbch\af15\loch\f1 </Config>
\par \hich\af1\dbch\af15\loch\f1 </CMConfig> 
\par }{\lang1049\loch\af15 
\par }\pard \nowidctlpar\faauto {\fs20\cf9\lang1049\loch\af15 
\par 
\par }\pard \sa120\nowidctlpar\faauto {\fs20\lang1049 
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 3.3\tab Dependencies Configuration
\par }\pard\plain \fi720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 None.
\par }\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0 \loch\af1\hich\af1\dbch\f15\cgrid {\b \hich\af1\dbch\af15\loch\f1 4.\tab Usage Notes
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 4.1\tab Required steps to test the component
\par }\pard\plain \fi-360\li1080\sa120\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\fs20 \hich\af1\dbch\af15\loch\f1 Extract the component distribution.
\par }{\fs20\lang1049 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\fs20\lang1049 \hich\af1\dbch\af15\loch\f1 Execute the DDL insert script (test_files/insert.sql) to create }{\fs20 \hich\af1\dbch\af15\loch\f1 the tables and }{\fs20\lang1049 
\hich\af1\dbch\af15\loch\f1 some predefined entries.}{\fs20 
\par }{\fs20\lang1049 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\fs20\lang1049 \hich\af1\dbch\af15\loch\f1 Edit the database configuration (test_files/}{\fs20 \hich\af1\dbch\af15\loch\f1 timetrackerproject}{\fs20\lang1049 \hich\af1\dbch\af15\loch\f1 .xml).}{
\fs20 
\par }{\fs20 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\fs20 \hich\af1\dbch\af15\loch\f1 Execute }{\fs20 \loch\af0\dbch\af15\hich\f0 \lquote }{\fs20 \hich\af1\dbch\af15\loch\f1 ant test}{\fs20 \loch\af0\dbch\af15\hich\f0 \rquote }{\fs20 
\hich\af1\dbch\af15\loch\f1  within the directory t\hich\af1\dbch\af15\loch\f1 hat the distribution was extracted to.
\par }{\fs20 \loch\af3\dbch\af15\hich\f3 \'b7\tab }{\fs20 \hich\af1\dbch\af15\loch\f1 Execute the DDL delete script (test_files/delete.sql) to clean up the tables.
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 4.2\tab Required steps to use the component
\par }\pard\plain \fi720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 Extract the component distribution.
\par }\pard\plain \s2\nowidctlpar\tx0\faauto\outlinelevel1 \loch\af1\hich\af1\dbch\f15\cgrid {\b\fs20 \hich\af1\dbch\af15\loch\f1 4.3\tab Demo
\par }\pard\plain \fi720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 The configuration file showed above will be used in \hich\af1\dbch\af15\loch\f1 demo.
\par }{\fs20\lang1049\loch\af15 
\par }{\i\fs20\cf1 \hich\af1\dbch\af15\loch\f1 1) Basic functionality, version 1.0 
\par }{\fs20\cf1\lang1049\loch\af15 
\par }{\fs20\cf1 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20\cf1 \hich\af1\dbch\af15\loch\f1 create a ProjectPersistenceManager}{\fs20\cf1 
\par }\pard \fi-720\li1440\nowidctlpar\faauto {\fs20\cf1 \hich\af1\dbch\af15\loch\f1 ProjectPersistenceManager pm = new ProjectPersistenceManager(}{\fs20\cf1 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf1 \hich\af1\dbch\af15\loch\f1 
com.topcoder.timetracker.project.PersistenceManager}{\fs20\cf1 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf1 \hich\af1\dbch\af15\loch\f1 );}{\fs20\cf2 
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 create a P\hich\af1\dbch\af15\loch\f1 roject instance using the parameterized constructor}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 Project project = new Project(1);
\par }\pard \li720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 
using the setters the fields should be initialized; it is not necessary to perform //this task in this demo since it is a trivial one, and the demo will get very big}{\fs20 
\par }{\b\fs20\lang1049 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 /\hich\af1\dbch\af15\loch\f1 /create a ProjectUtility
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 ProjectUtility pu = new ProjectUtility(pm);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 add the project to the database}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 pu.addProject(project);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 create a ProjectManager instance}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 ProjectManager projectManager = new ProjectManager(project, 1);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 assign the projectManager to the project}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 pu.assignProjectManager(projectManager);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 change the description of the project}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 project.setDescription(}{\fs20 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 Renault project}{\fs20 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 );
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 update the project}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 pu.updateProject(project);
\par }{\fs20\lang1049 
\par }\pard \fi720\nowidctlpar\faauto {\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 query the project manager of the proje\hich\af1\dbch\af15\loch\f1 ct}{\fs20\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 ProjectManager pm1 = pu.getProjectManager(project.getId());
\par }{\fs20\lang1049\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 create a ProjectWorker}{\fs20\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //ProjectWorker worker1 = new ProjectWorker(project,2);
\par }{\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //add the worker to the project(in the database)
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 pu.addWorker(worker1);
\par }{\fs20\lang1049\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 create a second ProjectWorker}{\fs20\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //Pro\hich\af1\dbch\af15\loch\f1 jectWorker worke2r = new ProjectWorker(project,3);
\par }{\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //add the worker to the project(in the database)
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 pu.addWorker(worker2);
\par }{\fs20\lang1049\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 update a worker}{\fs20\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 double PayRate = 100;
\par \hich\af1\dbch\af15\loch\f1 worker2.setPayRate(payRate);
\par \hich\af1\dbch\af15\loch\f1 pu.updateWorker(worker2);
\par }{\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //get a worker from the project
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 ProjectWorker worker3 = pu.getWorker(2,1);
\par }{\fs20\lang1049\loch\af15 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //get all the workers from the project
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 List l = pu.getWorkers(1);
\par }{\fs20\lang1049\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 add an expense entry to the project}{\fs20\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 pu.addExpenseEntry(5,1,}{\fs20 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 John}{\fs20 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 );
\par }{\b\fs20\lang1049\loch\af15 
\par }\pard \fi-720\li1440\nowidctlpar\faauto {\b\fs20 \hich\af1\dbch\af15\loch\f1 //get all the expense entries from a project
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 List expenses = pu.getExpenseEntries(1);
\par }\pard \fi720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 add a time entry to the project}{\fs20\loch\af15 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 pu.addTimeEntry(4,1,}{\fs20 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 John}{\fs20 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 );
\par }{\b\fs20\lang1049\loch\af15 
\par }\pard \fi-720\li1440\nowidctlpar\faauto {\b\fs20 \hich\af1\dbch\af15\loch\f1 //get all the time entries from a project
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 List times = pu.getTimeEntries(1);
\par }{\fs20\lang1049 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //create a ClientUtility instance
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 ClientUtility cu = new ClientUtility(p\hich\af1\dbch\af15\loch\f1 m);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 create a client using the parameterized constructor}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 Client client = new Client(5);
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //using setters assume that the fields are initialized
\par }{\b\fs20\lang1049 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //add the client to the database
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 cu.addClient(client);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 update the client description}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 client.setDescription(}{\fs20 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 bussinesmen}{\fs20 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 );
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 update the client (in the database)}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 cu.updateClient(client);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 add a project to the client}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 cu.addProjectToClient(client.getId(), project);
\par }{\fs20\lang1049 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //retrieve the projects of a client
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 List proj = cu.getAllClientProjects(client.getId());
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 crea\hich\af1\dbch\af15\loch\f1 te another project}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 Project project1 = new Project(2);
\par \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 assume that the fields are initialized using the setters}{\fs20 
\par }{\b\fs20\lang1049 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //add the project to the database
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 pu.addProject(project1);
\par }{\fs20\lang1049 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //assign a client to project1
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 pu.assignClient(2,5,}{\fs20 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 Tim}{\fs20 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20 \hich\af1\dbch\af15\loch\f1 );
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 query the client of a project}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 Client client1 = pu.getProjectClient(project1.getId());
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 remove a worker}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 pu.removeWorker(2,1);
\par }{\fs20\lang1049 
\par }{\b\fs20 \hich\af1\dbch\af15\loch\f1 //remove all workers from a project
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 pu.removeWorkers(1);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 remove a time entry from a project}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 pu.removeTimeEntry(4,1);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 remov\hich\af1\dbch\af15\loch\f1 e an expense entry from a project}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 pu.removeExpenseEntry(5,1);
\par }{\fs20\lang1049 
\par 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 remove the project manager from a project}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 pu.removeProjectManager(2,1);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 remove a client}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 cu.removeClient(5);
\par }{\fs20\lang1049 
\par }{\fs20 \hich\af1\dbch\af15\loch\f1 //}{\b\fs20 \hich\af1\dbch\af15\loch\f1 remove all the clients}{\fs20 
\par \hich\af1\dbch\af15\loch\f1 cu.removeAllClients();
\par }\pard \fi720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }\pard \li720\nowidctlpar\faauto {\fs20\lang1049\loch\af15 
\par }{\i\fs20\cf6 \hich\af1\dbch\af15\loch\f1 2) Batch operations with projects, clients and workers, version 1.1
\par }\pard \fi720\nowidctlpar\faauto {\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Assume that }{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 pu}{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf6 
\hich\af1\dbch\af15\loch\f1  variable stores valid ProjectUtility instance
\par \hich\af1\dbch\af15\loch\f1 // Assume that }{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 cu}{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 
 variable stores valid ClientUtility instance
\par }{\fs20\cf6\lang1049 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Add new projects to the database, atomic mode
\par \hich\af1\dbch\af15\loch\f1 pu.addProjects(projects, true);
\par }{\fs20\cf6\lang1049\loch\af15 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Remove projects from the database, non-atomic mode
\par \hich\af1\dbch\af15\loch\f1 pu.removeProjects(projectIds, false);
\par }\pard \nowidctlpar\faauto {\fs20\cf6 
\par }\pard \fi720\nowidctlpar\faauto {\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Add new clients to the database, atomic mode
\par \hich\af1\dbch\af15\loch\f1 pu.addClients(clients, true);
\par 
\par \hich\af1\dbch\af15\loch\f1 // Remove clients from the database, non-atomic mod\hich\af1\dbch\af15\loch\f1 e
\par \hich\af1\dbch\af15\loch\f1 pu.removeClients(clientIds, false);
\par 
\par \hich\af1\dbch\af15\loch\f1 // Add new workers to the database, atomic mode
\par \hich\af1\dbch\af15\loch\f1 pu.addWorkers(workers, true);
\par 
\par \hich\af1\dbch\af15\loch\f1 // Remove workers from the database, non-atomic mode
\par \hich\af1\dbch\af15\loch\f1 pu.removeWorkers(workerIds, false);
\par }{\fs20\cf6\lang1049 
\par }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // Other operations are quite similar, and there\hich\af1\dbch\af15\loch\f1  is no need to state them all here
\par \hich\af1\dbch\af15\loch\f1 // Generally the contract is such, the array is passed instead of the single parameter
\par \hich\af1\dbch\af15\loch\f1 // and the }{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \ldblquote }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 atomic}{\fs20\cf6 \loch\af0\dbch\af15\hich\f0 \rdblquote }{\fs20\cf6 \hich\af1\dbch\af15\loch\f1 
 boolean parameter specifies if the operation should be atomic.
\par }\pard \li720\nowidctlpar\faauto {\i\fs20\cf6\loch\af15 
\par }{\i\fs20\cf6 \hich\af1\dbch\af15\loch\f1 3) Search functionality, version 1.1
\par }{\lang1049\loch\af15 
\par }\pard \fi720\nowidctlpar\faauto {\fs20\cf6 \hich\af1\dbch\af15\loch\f1 // create a search filter, filtering the valu\hich\af1\dbch\af15\loch\f1 es in the specified column
\par \hich\af1\dbch\af15\loch\f1 // (they should be equal to the given value)
\par \hich\af1\dbch\af15\loch\f1 Filter equalFilter = new ValueFilter(CompareOperation.EQUAL, "Creation User", "creationUser");
\par 
\par \hich\af1\dbch\af15\loch\f1 // create a search filter, filtering the values in the specified column
\par \hich\af1\dbch\af15\loch\f1 // (they should match a given pattern)
\par \hich\af1\dbch\af15\loch\f1 Filter likeFilter = new ValueFilter(CompareOperation.LIKE, "Name", "%Some pattern%");
\par 
\par \hich\af1\dbch\af15\loch\f1 // create a search filter, filtering the values in the specified column
\par \hich\af1\dbch\af15\loch\f1 // (they should be one of the values)
\par \hich\af1\dbch\af15\loch\f1 Filter multiValueFil\hich\af1\dbch\af15\loch\f1 ter = new MultiValueFilter("Name", new Object[] \{"name1", "name2"\});
\par 
\par \hich\af1\dbch\af15\loch\f1 // create a search filter combining two filters using "OR" operation
\par \hich\af1\dbch\af15\loch\f1 Filter orFilter = new BinaryOperationFilter(BinaryOperation.OR, equalFilter, likeFilter);
\par 
\par \hich\af1\dbch\af15\loch\f1 // create a search filter \hich\af1\dbch\af15\loch\f1 combining two filters using "AND" operation
\par \hich\af1\dbch\af15\loch\f1 Filter andFilter = new BinaryOperationFilter(BinaryOperation.AND, equalFilter, likeFilter);
\par 
\par \hich\af1\dbch\af15\loch\f1 // create a search filter negating the given filter
\par \hich\af1\dbch\af15\loch\f1 Filter notAndFilter = new NotFilter(andFilter);
\par 
\par \hich\af1\dbch\af15\loch\f1 // search for proj\hich\af1\dbch\af15\loch\f1 ects using the filters
\par \hich\af1\dbch\af15\loch\f1 Project[] projects;
\par 
\par \hich\af1\dbch\af15\loch\f1 projects = pu.searchProjects(equalFilter);
\par \hich\af1\dbch\af15\loch\f1 projects = pu.searchProjects(likeFilter);
\par \hich\af1\dbch\af15\loch\f1 projects = pu.searchProjects(multiValueFilter);
\par \hich\af1\dbch\af15\loch\f1 projects = pu.searchProjects(orFilter);
\par \hich\af1\dbch\af15\loch\f1 projects = pu.searchProjects(andFilter)\hich\af1\dbch\af15\loch\f1 ;
\par \hich\af1\dbch\af15\loch\f1 projects = pu.searchProjects(notAndFilter);
\par 
\par \hich\af1\dbch\af15\loch\f1 // search for clients using the filters
\par \hich\af1\dbch\af15\loch\f1 Client[] clients;
\par 
\par \hich\af1\dbch\af15\loch\f1 clients = cu.searchClients(equalFilter);
\par \hich\af1\dbch\af15\loch\f1 clients = cu.searchClients(likeFilter);
\par \hich\af1\dbch\af15\loch\f1 clients = cu.searchClients(multiValueFilter);
\par \hich\af1\dbch\af15\loch\f1 clients = cu.searchClients(orFilter);
\par \hich\af1\dbch\af15\loch\f1 clients = cu.searchClients(andFilter);
\par \hich\af1\dbch\af15\loch\f1 clients = cu.searchClients(notAndFilter);}{\fs20\cf6 
\par }{\cf6\lang1049 
\par }{\fs20\lang1049 
\par }\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0 \loch\af1\hich\af1\dbch\f15\cgrid {\b \hich\af1\dbch\af15\loch\f1 5.\tab Future Enhancements
\par }\pard\plain \fi720\nowidctlpar\faauto \loch\af1\hich\af1\dbch\f15\cgrid {\fs20 \hich\af1\dbch\af15\loch\f1 More TimeTrackerProjectPersistence implementations to this component. 
\par }}