{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Palatino};}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Arial};}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New{\*\falt Courier New};}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol{\*\falt Symbol};}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f36\fswiss\fcharset0\fprq0{\*\panose 00000000000000000000}ArialMT;}
{\f174\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Palatino};}{\f175\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Palatino};}{\f177\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Palatino};}
{\f178\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Palatino};}{\f179\froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Palatino};}{\f180\froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Palatino};}
{\f181\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Palatino};}{\f182\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Palatino};}{\f184\fswiss\fcharset238\fprq2 Arial CE{\*\falt Arial};}
{\f185\fswiss\fcharset204\fprq2 Arial Cyr{\*\falt Arial};}{\f187\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Arial};}{\f188\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Arial};}{\f189\fswiss\fcharset177\fprq2 Arial (Hebrew){\*\falt Arial};}
{\f190\fswiss\fcharset178\fprq2 Arial (Arabic){\*\falt Arial};}{\f191\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Arial};}{\f192\fswiss\fcharset163\fprq2 Arial (Vietnamese){\*\falt Arial};}
{\f194\fmodern\fcharset238\fprq1 Courier New CE{\*\falt Courier New};}{\f195\fmodern\fcharset204\fprq1 Courier New Cyr{\*\falt Courier New};}{\f197\fmodern\fcharset161\fprq1 Courier New Greek{\*\falt Courier New};}
{\f198\fmodern\fcharset162\fprq1 Courier New Tur{\*\falt Courier New};}{\f199\fmodern\fcharset177\fprq1 Courier New (Hebrew){\*\falt Courier New};}{\f200\fmodern\fcharset178\fprq1 Courier New (Arabic){\*\falt Courier New};}
{\f201\fmodern\fcharset186\fprq1 Courier New Baltic{\*\falt Courier New};}{\f202\fmodern\fcharset163\fprq1 Courier New (Vietnamese){\*\falt Courier New};}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;\red255\green102\blue0;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 \styrsid1075031 Normal;}{
\s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{
\s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 \b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext0 heading 2;}{
\s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0 \i\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext0 heading 3;}{
\s4\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl3\outlinelevel3\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon1 \snext0 heading 4;}{
\s5\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl4\outlinelevel4\adjustright\rin0\lin0\itap0 \f1\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 5;}{
\s6\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl5\outlinelevel5\adjustright\rin0\lin0\itap0 \i\f1\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 6;}{
\s7\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl6\outlinelevel6\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 7;}{
\s8\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl7\outlinelevel7\adjustright\rin0\lin0\itap0 \i\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 8;}{
\s9\ql \li0\ri0\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl8\outlinelevel8\adjustright\rin0\lin0\itap0 \b\i\f1\fs18\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive 
\ssemihidden Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\*\cs15 \additive \ul\cf2 \sbasedon10 Hyperlink;}{
\s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 Body Text;}{\s17\ql \li720\ri0\sa120\sl240\slmult0
\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \f1\fs20\cf2\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 \sautoupd \styrsid11168775 InfoBlue;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\listtable
{\list\listtemplateid-985754512{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\s1\jclisttab\tx360 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03\'00.\'01;}{\levelnumbers\'01\'03;}\s2\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'05\'00.\'01.\'02;}{\levelnumbers\'01\'03\'05;}\s3\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\s4
\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers\'01\'03\'05\'07\'09;}\s5\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\s6\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\s7\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'0f\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\s8\jclisttab\tx0 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\s9\jclisttab\tx0 }{\listname ;}\listid-5}{\list\listtemplateid-160384884\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715
\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240
\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960\jclisttab\tx3960\lin3960 }{\listlevel
\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680\lin4680 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid806357716}{\list\listtemplateid932329388\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0 \fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3960
\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4680\jclisttab\tx4680\lin4680 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid876431865}{\list\listtemplateid-1548734852\listhybrid{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-370905472\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-216\li936\jclisttab\tx1152\lin936 }{\listlevel\levelnfc23\levelnfcn23\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6480
\jclisttab\tx6480\lin6480 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li7200\jclisttab\tx7200\lin7200 }
{\listname ;}\listid932708657}{\list\listtemplateid-1293882214\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698699\'01\u-3880 ?;}{\levelnumbers;}
\f10\fbias0 \fi-360\li1260\jclisttab\tx1260\lin1260 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1980
\jclisttab\tx1980\lin1980 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2700\jclisttab\tx2700\lin2700 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li3420\jclisttab\tx3420\lin3420 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li4140\jclisttab\tx4140\lin4140 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4860\jclisttab\tx4860\lin4860 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5580\jclisttab\tx5580\lin5580 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0
{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6300\jclisttab\tx6300\lin6300 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li7020\jclisttab\tx7020\lin7020 }{\listname ;}\listid1043097759}{\list\listtemplateid-1298505236\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelspace0
\levelindent0{\leveltext\leveltemplateid1205917086\'01-;}{\levelnumbers;}\loch\af1\hich\af1\dbch\af0\fbias0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0 \fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3960
\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4680\jclisttab\tx4680\lin4680 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6840\jclisttab\tx6840\lin6840 }{\listname ;}\listid1101293919}{\list\listtemplateid1206840888\listhybrid{\listlevel
\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\leveltemplateid-1767067950\'01-;}{\levelnumbers;}\loch\af1\hich\af1\dbch\af0\fbias0 \fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1800\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3960\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4680\jclisttab\tx4680\lin4680 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0 \fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6120
\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6840\jclisttab\tx6840\lin6840 }
{\listname ;}\listid1477721646}{\list\listtemplateid366660650\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-370905472\'01\u-3913 ?;}{\levelnumbers;}
\f3\fbias0 \fi-216\li936\jclisttab\tx1152\lin936 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li2160
\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li7200\jclisttab\tx7200\lin7200 }{\listname ;}\listid1714190277}}{\*\listoverridetable{\listoverride\listid-5\listoverridecount9{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls1}{\listoverride\listid806357716\listoverridecount9{\lfolevel}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}\ls2}{\listoverride\listid876431865\listoverridecount9{\lfolevel}{\lfolevel}{\lfolevel}{\lfolevel}{\lfolevel}{\lfolevel}{\lfolevel}{\lfolevel}{\lfolevel}\ls3}{\listoverride\listid876431865\listoverridecount0\ls4}
{\listoverride\listid806357716\listoverridecount0\ls5}{\listoverride\listid1043097759\listoverridecount0\ls6}{\listoverride\listid932708657\listoverridecount0\ls7}{\listoverride\listid1714190277\listoverridecount0\ls8}{\listoverride\listid1101293919
\listoverridecount0\ls9}{\listoverride\listid1477721646\listoverridecount0\ls10}}{\*\rsidtbl \rsid21596\rsid94103\rsid140352\rsid201164\rsid218022\rsid268251\rsid279683\rsid675629\rsid855843\rsid984777\rsid1075031\rsid1195660\rsid1330965\rsid1461715
\rsid1509805\rsid1510542\rsid1657617\rsid1780124\rsid1798857\rsid1857184\rsid2054528\rsid2232306\rsid2301522\rsid2700911\rsid2703826\rsid2710335\rsid2891826\rsid2961329\rsid3016826\rsid3152121\rsid3219965\rsid3238081\rsid3438602\rsid3499148\rsid3543078
\rsid3690992\rsid3873819\rsid4273860\rsid4282574\rsid4288136\rsid4487498\rsid4531121\rsid4799965\rsid5142728\rsid5322275\rsid5322636\rsid5382114\rsid5588406\rsid5792675\rsid5795655\rsid5851428\rsid5920419\rsid5991371\rsid6105360\rsid6109909\rsid6360842
\rsid6383198\rsid6498610\rsid6626950\rsid6638791\rsid7474327\rsid7566600\rsid7607583\rsid7934269\rsid7998157\rsid8019813\rsid8092845\rsid8261434\rsid8330907\rsid8466040\rsid8468746\rsid8522302\rsid8589194\rsid8722292\rsid8737571\rsid9180335\rsid9186815
\rsid9252095\rsid9327462\rsid9519105\rsid9520952\rsid9719012\rsid9859354\rsid9925973\rsid9965243\rsid10053494\rsid10175690\rsid10233313\rsid10234541\rsid10446724\rsid10447737\rsid10575748\rsid10891186\rsid10953574\rsid11040418\rsid11168775\rsid11678718
\rsid11889077\rsid11949931\rsid11996200\rsid12065079\rsid12081176\rsid12193388\rsid12408302\rsid12596054\rsid12677483\rsid12745461\rsid12926856\rsid12931427\rsid13043104\rsid13137632\rsid13242114\rsid13270043\rsid13379382\rsid13443668\rsid13449994
\rsid13457956\rsid13834663\rsid13991790\rsid14052230\rsid14093591\rsid14113066\rsid14184857\rsid14288850\rsid14298597\rsid14621552\rsid14710717\rsid14889596\rsid14965994\rsid14972295\rsid15149069\rsid15170621\rsid15232720\rsid15236992\rsid15471299
\rsid15606622\rsid16123447\rsid16136783\rsid16265055\rsid16404760\rsid16516418\rsid16648019\rsid16736398}{\*\generator Microsoft Word 11.0.5604;}{\info{\title <<Component>> <<Version>> Component Specification}{\author gpaul}{\operator adi}
{\creatim\yr2004\mo6\dy16\hr17\min44}{\revtim\yr2006\mo3\dy6\hr11\min53}{\version127}{\edmins662}{\nofpages18}{\nofwords7000}{\nofchars39905}{\*\company TopCoder}{\nofcharsws46812}{\vern24689}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\rsidroot9327462 \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx720\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs28\ul\insrsid7566600 Expense Entry}{\fs28\ul\insrsid3016826  }{\fs28\ul\cf6\insrsid12081176\charrsid13270043 1.1}{\fs28\ul\insrsid3016826  Component Specification
\par }\pard\plain \s16\ql \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 
\par {\listtext\pard\plain\s1 \b\f1\insrsid3016826 \hich\af1\dbch\af0\loch\f1 1.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Design
\par }\pard\plain \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid3152121 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid2710335\charrsid2301522 
The Expense Entry custom component is part of the Time Tracker application. It provides an abstraction of a}{\f1\fs20\insrsid14972295 n expense entry that an employer }{\f1\fs20\insrsid2710335\charrsid2301522 
enter into the system on a regular basis. This component handles the persistence and other business logic required by the application.
\par The }{\f1\fs20\insrsid15606622\charrsid2301522 manager classes handle the business logic}{\f1\fs20\insrsid2710335\charrsid2301522 . They provide a fa\'e7ade for the user to the
 functionality offered by this component: expense entry management, expense entry types management, expense entry statuses management.
\par The }{\f1\fs20\insrsid15606622\charrsid2301522 following classes implement the model part of this application}{\f1\fs20\insrsid2710335\charrsid2301522 : ExpenseEntry, ExpenseEntryType and ExpenseEntryStatus.
\par The persistence layer is abstracted using an interface. This allows easy swapping of the persistence storage without changes to the rest of the component. The default implementation uses an Informix database for storage. }{\f1\fs20\insrsid2710335 
\par }{\f1\fs20\cf17\insrsid4487498 Version 1.1 adds a few additional functionalities:}{\f1\fs20\cf17\insrsid3152121 
\par {\listtext\pard\plain\f1\fs20\cf17\insrsid4487498 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \qj \fi-360\li1080\ri0\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls10\adjustright\rin0\lin1080\itap0\pararsid4487498 {\f1\fs20\cf17\insrsid4487498 
bulk operations on expense entries
\par {\listtext\pard\plain\f1\fs20\cf17\insrsid4487498 \hich\af1\dbch\af0\loch\f1 -\tab}attaching zero or more reject reasons to an expense entry}{\f1\fs20\insrsid4487498\charrsid4487498 
\par {\listtext\pard\plain\f1\fs20\cf17\insrsid4487498 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \qj \fi-360\li1080\ri0\sa120\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls10\adjustright\rin0\lin1080\itap0\pararsid4487498 {\f1\fs20\cf17\insrsid4487498 
a powerful expense entry search framework}{\f1\fs20\insrsid4487498\charrsid4487498 
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid1657617 {\f1\fs20\cf17\insrsid4487498\charrsid1657617 The reject reason functionality is implemented by adding a list of reject reasons }{
\f1\fs20\cf17\insrsid1657617\charrsid1657617 and the appropriate modifying and retrieval methods }{\f1\fs20\cf17\insrsid4487498\charrsid1657617 
to the ExpenseEntry data class. The list contains instances of the ExpenseEntryRejectReason data class. The data class is needed because the reject reasons linked to an expense entry are characterized by a creation and
 modification user and date. In order to accommodate the ExpenseEntryRejectReason class into the data class hierarchy, CommonInfo had to be split in two. It was done because ExpenseEntryRejectReason doesn\rquote 
t have an id or a description. These attributes and
 the corresponding setters and getters have been moved to BasicInfo (extends CommonInfo). The old data classes extend from BasicInfo thus having the same API as before. The new data class extends from CommonInfo thus having only what it needs}{
\f1\fs20\insrsid4487498 .}{\f1\fs20\insrsid1657617 
\par }{\f1\fs20\cf17\insrsid1657617 The bulk operations on expense entries are implemented at the ExpenseEntryManager, ExpenseEntryPersistence and }{\f1\fs20\cf17\insrsid1657617\charrsid1657617 
ExpenseEntryDbPersistence levels. All these classes and interfaces have four new methods (for bulk adding, deleting, updating and retrieving). Ho
wever, only ExpenseEntryDbPersistence has significant business logic. The bulk operations accept an array of ExpenseEntry}{\f1\fs20\cf17\insrsid1657617  objects or expense entry ids. They also have a}{\f1\fs20\cf17\insrsid10233313 n}{
\f1\fs20\cf17\insrsid1657617  isAtomic flag. An atomic bulk operation means that the entire operation fails if a single operation fails (in which case no changes are done to the DB an}{\f1\fs20\cf17\insrsid5382114 d no results are returned). Non-}{
\f1\fs20\cf17\insrsid1657617 atomic means each op}{\f1\fs20\cf17\insrsid5382114 eration is treated individually. I}{\f1\fs20\cf17\insrsid1657617 f one operation fails, the others are processed anyway. An array is returned to the user with those exp
ense entries or ids that have caused problems.
\par The expense entry search framework is very powerful. It is built around a strategy pattern. This means that additional search criteria can be added easily. The Criteria interface abstracts the search criteria.
 It is oriented towards DB implementations and it is used to perform the filtering at the database level (without bringing all expense entries into memory) for obvious performance reasons.}{\f1\fs20\cf17\insrsid4531121 
 The Criteria has methods for returning the where clause expression 
to be used for filtering. Since it can have parameters, another method returns them (they are not embedded in the text expression for portability reasons; a PreparedStatement is used for insertion). The implementations of the Criteria interface contain a 
perfect field match filter, a like (SQL style) field match filter, a between (SQL style) field match filter and a special RejectReasonCriteria (because it uses the exp_reject_reason table it has a special where clause that uses \'93IN (SELECT \'85)\'94}{
\f1\fs20\cf17\insrsid3238081  or \'93EXISTS\'94}{\f1\fs20\cf17\insrsid4531121 ).
 There are also two aggregate filters, NotCriteria and CompositeCriteria that provide the usual boolean operations (NOT, AND, OR). Note that many implementations are very generic (they can express a constraint on any field). Constants and shortcut methods
 for the explicitly required filters are provided.}{\f1\fs20\cf17\insrsid1657617 
\par }{\f1\fs20\cf17\insrsid15236992 Useful }{\f1\fs20\cf17\insrsid13991790 additional }{\f1\fs20\cf17\insrsid15236992 features:
\par {\listtext\pard\plain\f1\fs20\cf17\insrsid15236992 \hich\af1\dbch\af0\loch\f1 -\tab}}\pard \qj \fi-360\li1080\ri0\sa120\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls10\adjustright\rin0\lin1080\itap0\pararsid15236992 {\f1\fs20\cf17\insrsid15236992 
any perfect match queries can be performed (not just on the required fields)
\par {\listtext\pard\plain\f1\fs20\cf17\insrsid15236992 \hich\af1\dbch\af0\loch\f1 -\tab}any SQL like match queries can be performed (not just on the required fields)
\par {\listtext\pard\plain\f1\fs20\cf17\insrsid15236992 \hich\af1\dbch\af0\loch\f1 -\tab}any SQL between and <=, => match queries can be performed (not just on the required fields)}{\f1\fs20\insrsid15236992\charrsid2301522 
\par }\pard \ql \li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0\pararsid3152121 {\f36\fs20\insrsid2710335 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 1.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Design Patterns 
\par }\pard\plain \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid3152121 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid5588406\charrsid2301522 The }{
\b\f1\fs20\insrsid5588406\charrsid2301522 strategy}{\f1\fs20\insrsid5588406\charrsid2301522  pattern is used for abstracting the persistence implementation in the ExpenseEntryPersistence interface.}{\f1\fs20\insrsid1195660  }{
\f1\fs20\cf17\insrsid1195660\charrsid1195660 It is also used in the Criteria interface and its subclasses to abstract the search filtering criteria}{\f1\fs20\insrsid1195660 .}{\f1\fs20\insrsid5588406\charrsid2301522 
\par The }{\b\f1\fs20\insrsid5588406\charrsid2301522 data value object}{\f1\fs20\insrsid5588406\charrsid2301522  pattern is used in the}{\f1\fs20\insrsid12081176  ExpenseEntry, ExpenseEntryType,}{\f1\fs20\insrsid5588406\charrsid2301522  ExpenseEntryStatus}{
\f1\fs20\insrsid12081176  and }{\f1\fs20\cf17\insrsid12081176\charrsid12081176 ExpenseEntryRejectReason}{\f1\fs20\insrsid5588406\charrsid2301522  classes. These classes facilitate the data exchange between the business logic and the persistence layer.}{
\f1\fs20\insrsid5588406 
\par }{\f1\fs20\cf17\insrsid1195660\charrsid1195660 The }{\b\f1\fs20\cf17\insrsid1195660\charrsid4288136 composite pattern}{\f1\fs20\cf17\insrsid1195660\charrsid1195660 
 is used in the CompositeCriteria class. A CompositeCriteria object aggregates other Criteria instances, including even instances of CompositeCriteria itself.}{\f1\fs20\cf17\insrsid1195660 
\par }{\f1\fs20\cf17\insrsid4288136 The search classes have }{\b\f1\fs20\cf17\insrsid4288136\charrsid4288136 factory methods}{\f1\fs20\cf17\insrsid4288136  for creating the filters from the requirements.}{\f1\fs20\cf17\insrsid4288136\charrsid1195660 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid2301522 {\f1\fs20\insrsid12081176\charrsid2301522 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 1.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Industry Standards 
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11168775 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid5322636\charrsid5920419 SQL, JDBC
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 1.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Required Algorithms
\par }\pard\plain \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8589194 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid14972295 SQL}{\f1\fs20\insrsid11168775\charrsid13457956 
 statements are very simple select, insert, update and delete queries so, }{\f1\fs20\insrsid14972295 it }{\f1\fs20\insrsid11168775\charrsid13457956 is not necessary to provide them as algorithms.
\par }{\f1\fs20\insrsid13457956\charrsid13457956 I will provide an algorithm for the constructor of ExpenseEntryManager}{\f1\fs20\insrsid15170621 (the algorithms for the constructors oh the other two managers are almost identical)}{
\f1\fs20\insrsid13457956\charrsid13457956 . }{\f1\fs20\insrsid11168775\charrsid13457956 
\par }\pard \ql \li720\ri0\sl360\slmult1\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13457956 {\f1\fs20\insrsid13457956\charrsid13457956 The algorithm is:
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11168775 {\f1\fs20\insrsid13457956\charrsid13457956 //read the configuration file
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13457956 {\f1\fs20\insrsid13457956\charrsid13457956 ConfigManager cm = ConfigManager.getInstance();
\par String className = cm.getStringArray(namespace,"}{\f1\fs20\insrsid15170621 entry_}{\f1\fs20\insrsid13457956\charrsid13457956 persistence_class");
\par String connectionProducerName = cm.getStringArray(namespace,"}{\f1\fs20\insrsid13457956   
\par                                                                     }{\f1\fs20\insrsid13457956\charrsid13457956 connection_producer_name");}{\f1\fs20\insrsid13457956 
\par 
\par //create the persistence instance through reflection
\par }{\f1\fs20\insrsid12745461 
\par Class c = Class.forName(className);
\par }{\f1\fs20\insrsid13457956 if(connectionProducerName == null) \{
\par         }{\f1\fs20\insrsid12745461 persistence = (}{\f1\fs20\insrsid15170621 ExpenseEntryPersistence}{\f1\fs20\insrsid12745461 )c.newInstance();}{\f1\fs20\insrsid13457956 
\par \}}{\f1\fs20\insrsid12745461  else \{}{\f1\fs20\insrsid13457956 
\par }{\f1\fs20\insrsid12745461          }{\f1\fs20\insrsid12745461\charrsid12745461 Constructor constr = c.getConstructor(new Class[]\{}{\f1\fs20\insrsid12745461 Class.forName(\'93String\'94}{\f1\fs20\insrsid12745461\charrsid12745461 \});}{
\f1\fs20\insrsid12745461 
\par          persistence = (}{\f1\fs20\insrsid15170621 ExpenseEntryPersistence}{\f1\fs20\insrsid12745461 ) }{\f1\fs20\insrsid12745461\charrsid12745461 constr.newInstance(new }{\f1\fs20\insrsid12745461  
\par                                                                }{\f1\fs20\insrsid12745461\charrsid12745461 Object[]\{}{\f1\fs20\insrsid12745461 connectionProducerName)\}); 
\par \}}{\f1\fs20\insrsid12745461\charrsid13457956 
\par }{\f1\fs20\insrsid13457956\charrsid9180335 
\par {\listtext\pard\plain\s3 \i\f1\fs20\cf6\insrsid1075031\charrsid3873819 \hich\af1\dbch\af0\loch\f1 1.3.1\tab}}\pard\plain \s3\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin0\itap0\pararsid1075031 \i\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\cf6\insrsid1075031\charrsid3873819 Composite and reject reason criteria
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid1075031 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\cf6\insrsid1075031\charrsid3873819 These two criteria might 
present some difficulties in implementation. The composite criteria works by concatenating the where clauses of the contained criteria:
\par 
\par - result = empty string
\par - for each contained criteria
\par - if not first criteria, result = result + compositionKeyword
\par }{\f1\fs20\cf6\insrsid16136783\charrsid3873819 - for all criteria}{\f1\fs20\cf6\insrsid1075031\charrsid3873819 , result = result + "(" + criteria.getWhereClause() + ")"
\par  - return result
\par The parameters are obtained by concatenating the parameters of the contained criteria:
\par 
\par - result = empty ArrayList
\par - }{\f1\fs20\cf6\insrsid16136783\charrsid3873819 iterates the contained criteria}{\f1\fs20\cf6\insrsid1075031\charrsid3873819 
\par - for each criteria, calls getParameters()
\par - accumulate each result to the result list (in the exact order in which they are obtained from the contained cr}{\f1\fs20\cf6\insrsid16136783\charrsid3873819 iteria}{\f1\fs20\cf6\insrsid1075031\charrsid3873819 )
\par - return the result
\par 
\par The reject reason criteria is simple but it uses IN SELECT which some people might not know. So the where clause is obtained using:
\par 
\par - "? IN (SELECT reject_reason_id FROM exp_reject_reason "
\par    + "WHERE exp_reject_reason.ExpenseEntriesId = expenseEntries.ExpenseEntriesId)".
\par 
\par Other ways can be used as well:
\par 
\par - EXISTS (SELECT reject_reason_id FROM exp_reject_reason "
\par   + "WHERE exp_reject_reason.ExpenseEntriesId = expenseEntries.ExpenseEntriesId\'94
\par   + \'93AND exp_reject_reason.reject_reason_id = ?)".
\par 
\par In fact the second might be better. Some databases might not like the fact that IN is used with a value (not a field) in the first }{\f1\fs20\cf6\insrsid3690992\charrsid3873819 case}{\f1\fs20\cf6\insrsid1075031\charrsid3873819 .}{
\f1\fs20\insrsid1075031\charrsid1075031 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11168775 {\insrsid13457956\charrsid11168775 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 1.4\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Component Class Overview
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid7998157 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 \tab }{\b\f1\fs20\cf2\insrsid7998157\charrsid14298597 ExpenseEntry}{
\b\f1\fs20\cf2\insrsid3016826\charrsid14298597 
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid2961329 {\f1\fs20\cf2\insrsid2961329\charrsid2961329 
This class holds the information about an expense entry. In addition to common information, an expense entry also contains the date, amount of money, the type, the current status and a flag indicating whether the client should be billed. 
\par Version 1.1 also adds a rejectReason list containing ExpenseEntryRejectReason objects. This list contains the reject reasons for the expense entry. The list has a range of accessor}{\f1\fs20\cf2\insrsid9186815 y}{
\f1\fs20\cf2\insrsid2961329\charrsid2961329  methods for consulting and changing it. 
\par When creating an instance of this class the user has two options: 
\par 1) Use the default constructor and allow the GUID Generator component to generate a unique id 
\par 2) Use the parameterized co
nstructor and provide an id for the ExpenseEntry instance; if the id already is contained by another entry from the ExpenseEntries table, then the newly created entry will not be added to the ExpenseEntries table. Also the user should not populate the cre
ationDate and modificationDate fields, because if he does, the entry will not be added to the database. This fields will be handled automatically by the component}{\f1\fs20\cf2\insrsid1461715  }{\f1\fs20\cf2\insrsid2961329\charrsid2961329 
(the current date will be used). When loading from the persistence, all the fields will be properly populated. 
\par }{\i\f1\fs20\cf2\insrsid2961329\charrsid2961329 Thread safety}{\f1\fs20\cf2\insrsid2961329\charrsid2961329 :
\par Because the class is mutable it is not thread safe. Threads will typically not share instances but if they do, the mutability sho
uld be used with care since any change done in one thread will affect the other thread, possibly without even being aware of the change.}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid7998157 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7998157 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid8468746 
\par }{\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid8468746\charrsid8468746 ExpenseEntryType}{\b\f1\fs20\insrsid8468746\charrsid8468746 
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8589194 {\f1\fs20\insrsid8468746\charrsid13043104 This class holds the information about an expense entry}{\f1\fs20\insrsid8468746  type}{\f1\fs20\insrsid7607583 
.}{\f1\fs20\insrsid8468746\charrsid13043104 When creating an instance of this class the user has two options:
\par 1) Use the default constructor and allow the GUID Generator component to generate a unique id
\par 2) Use the parameterized constructor and provide an id for the ExpenseEntry}{\f1\fs20\insrsid8468746 Type}{\f1\fs20\insrsid8468746\charrsid13043104  instance; if the id already is contained }{\f1\fs20\insrsid8468746 by another type from the ExpenseTypes}{
\f1\fs20\insrsid8468746\charrsid13043104  table, then the }{\f1\fs20\insrsid8468746 newly created type}{\f1\fs20\insrsid8468746\charrsid13043104  will no}{\f1\fs20\insrsid8468746 t be added to the ExpenseTypes}{\f1\fs20\insrsid8468746\charrsid13043104 
 table}{\f1\fs20\insrsid8468746 .}{\f1\fs20\insrsid8468746\charrsid13043104 
\par Also the user should not populate the creationDate and modificationDate field}{\f1\fs20\insrsid8468746 s, because if he does, the type}{\f1\fs20\insrsid8468746\charrsid13043104  will no}{\f1\fs20\insrsid14972295 t be added to the database. These}{
\f1\fs20\insrsid8468746\charrsid13043104  fields will be handled automatically by the component (the current date will be used).}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid8468746\charrsid13043104  When loading from the persistence, all the fi}{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid8468746 elds will be properly populated.
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8468746 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid2232306 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid2232306 {\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid2232306 ExpenseEntryStatus}{\b\f1\fs20\insrsid2232306\charrsid8468746 
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8589194 {\f1\fs20\insrsid2232306\charrsid13043104 This class holds the information about an expense entry}{\f1\fs20\insrsid2232306  status}{
\f1\fs20\insrsid7607583 .}{\f1\fs20\insrsid2232306\charrsid13043104 When creating an instance of this class the user has two options:
\par 1) Use the default constructor and allow the GUID Generator component to generate a unique id
\par 2) Use the parameterized constructor and provide an id for the ExpenseE}{\f1\fs20\insrsid2232306 ntryStatus}{\f1\fs20\insrsid2232306\charrsid13043104  instance; if the id already is contained }{\f1\fs20\insrsid2232306 
by another status from the ExpenseStatuses}{\f1\fs20\insrsid2232306\charrsid13043104  table, then the }{\f1\fs20\insrsid2232306 newly created status}{\f1\fs20\insrsid2232306\charrsid13043104  will no}{\f1\fs20\insrsid2232306 
t be added to the ExpenseStatuses}{\f1\fs20\insrsid2232306\charrsid13043104  table}{\f1\fs20\insrsid2232306 .}{\f1\fs20\insrsid2232306\charrsid13043104 
\par Also the user should not populate the creationDate and modificationDate field}{\f1\fs20\insrsid2232306 s, because if he does, the status}{\f1\fs20\insrsid2232306\charrsid13043104 
 will not be added to the database. This fields will be handled automatically by the component (the current date will be used).}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid2232306\charrsid13043104  When loading from the persistence, all the fi}{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid2232306 elds will be properly populated.
\par }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid14298597 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14298597 {\b\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 ExpenseEntryRejectReason}{
\b\f1\fs20\cf6\insrsid14298597\charrsid14298597 
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14298597 {\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 
This is a data class for representing an expense entry to reject reason id association (maps to the exp_reject_reason) table. This class is needed because the association has the creation and modification dates and users fields. Without those, the Expense
Entry class could have easily been storing the reject reason ids directly.
\par This class stores the rejectReasonId and inherits the date and user fields from the CommonInfo class.
\par }{\i\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 Thread safety}{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 :
\par Because the class is mutable it is not thread safe. Threads will typically not share instances but if they do,}{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid14298597  }{
\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 the mutability should be used with care since any change done in one thread will affect the other thread,}{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid14298597  }{
\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 possibly without even being aware of the change}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 .
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid2232306 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid7607583 
\par }{\b\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid7607583\charrsid14298597 CommonInfo
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid2961329 {\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid2961329\charrsid2961329 This abstract contains the common features 
of ExpenseEntry, ExpenseEntryType, ExpenseEntryStatus and ExpenseEntryRejectReason classes. This class is abstract because there is no need to instantiate it directly. It has no abstract methods; it is made abstract to group the common features of the dat
a classes and to prevent direct instantiation. This abstract class implements the Serializable interface, so all the concrete}{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid2961329  }{
\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid2961329\charrsid2961329 implementations of this class will be serializable.
\par The class contains the creation and 
modification dates and users. Note that id and description have been moved to BasicInfo. That's because ExpenseEntryRejectReason doesn't have them. The ExpenseEntry, ExpenseEntryType and ExpenseEntryStatus classes extend now from BasicInfo.
\par }{\i\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid2961329\charrsid2961329 Thread safety}{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid2961329\charrsid2961329 :
\par Because the class is mutable it is not thread safe. Threads will typically not share instances but if they do, the mutability should be used with care since any change done in one thread will affect the other thread, possibly without even being aware of t
he change}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid2961329\charrsid2961329 .}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid9859354 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14298597 {\b\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 BasicInfo
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid14298597 {\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 
This abstract contains the common features of ExpenseEntry, ExpenseEntryType and ExpenseEntryStatus classes.
\par This class is abstract because there is no need to instantiate it directly. It has no abstract methods; it is made}{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597  }{
\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 abstract to group the common features of the data classes and to prevent direct instantiation.
\par Note that id and description have been moved from CommonInfo. That's because ExpenseEntryRejectReason}{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597  }{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 
doesn't have them. The rest of the attributes/accessors needed by the three subclasses are inherited from}{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597  }{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 
CommonInfo.
\par }{\i\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 Thread safety}{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 :
\par Because the class is mutable it is not thread safe. Threads will typically not share instances but if they do,}{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597  }{
\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 the mutability should be used with care since any change done in one thread will affect the other thread,}{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597  }{
\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid14298597\charrsid14298597 possibly without even being aware of the change.
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid9859354 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid3016826 
\par }{\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid3016826 ExpenseEntryTypeManager
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid1798857 {\f1\fs20\insrsid1798857\charrsid1798857 The ExpenseEntryTypeManager class is a facade for the types management functionality.
\par It can do the following things:
\par -add a type(ExpenseEntryType instance) to the ExpenseTypes table; if the ExpenseEntryType instance has the id=-1 this manager will use the GUID Generator to generate an id for the ExpenseEntryType instance
\par -delete a type from the ExpenseTypes table
\par -delete all the types from the ExpenseTypes table
\par -retrieve a type(given its id) from the ExpenseTypes table
\par -retrieve all the types from the ExpenseTypes table
\par -update a type in the ExpenseTypes table
\par This manager is responsible for reading two properties from the configuration file. To accomplish this it will use the
\par Configuration Manager component. From the configuration file two properties will be read:
\par -a class name identifying an implementation of ExpenseEntryTypePersistence(this property is required)
\par -a connection producer name identifying a ConnectionProducer instance(this property is optional). This
\par instance of ConnectionProducer will provide the connection to the database.
\par Using these two properties this manager will create thourough reflection an ExpenseEntryTypePersistence}{\f1\fs20\insrsid1798857  }{\f1\fs20\insrsid1798857\charrsid1798857 implementation instance.}{\f1\fs20\insrsid6626950\charrsid1798857 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6626950 {\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857 
\par }{\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid6626950 ExpenseEntryStatusManager
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid1798857 {\f1\fs20\insrsid1798857\charrsid1798857 The ExpenseEntryStatusManager class is a facade for the statuses management functionality.
\par It can do the following things:
\par -add a status(ExpenseEntryStatus instance) to the ExpenseStatuses table; if the ExpenseEntryStatus instance has the id=-1 this manager will use the GUID Generator to generate an id for the ExpenseEntryStatus instance
\par -delete a status from the ExpenseStatuses table
\par -delete all the statuses from the ExpenseStatuses table
\par -retrieve a status(given its id) from the ExpenseStatuses table
\par -retrieve all the statuses from the ExpenseStatuses table
\par -update a status in the ExpenseStatuses table
\par This manager is responsible for reading two properties from the configuration file. To accomplish this it will use the
\par Configuration Manager component. From the configuration file two properties will be read:
\par -a class name identifying an implementation of ExpenseEntryStatusPersistence(this property is required)
\par -a connection producer name identifying a ConnectionProducer instance(t}{\f1\fs20\insrsid1798857 his property is optional). This }{\f1\fs20\insrsid1798857\charrsid1798857 instance of ConnectionProducer will provide the connection to the database.}{
\f1\fs20\insrsid1798857  }{\f1\fs20\insrsid1798857\charrsid1798857 Using these two properties this manager will create thourough reflection an ExpenseEntryStatusPersistence}{\f1\fs20\insrsid1798857  }{\f1\fs20\insrsid1798857\charrsid1798857 
implementation instance.}{\f1\fs20\insrsid6626950\charrsid1798857 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6626950 {\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857 
\par }{\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid5792675\charrsid6383198 ExpenseEntry}{\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid6626950\charrsid6383198 Manager
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid1798857 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857\charrsid1798857 
The ExpenseEntryManager class is a facade for the entries management functionality.
\par . It can do the following things:
\par -add an entry(ExpenseEntry instance) to the ExpenseEntries table; if the ExpenseEntry instance has the id=-1 this manager will use the GUID Generator to generate an id for the ExpenseEntry instance
\par -delete an entry from the ExpenseEntries table
\par -delete all the entries from the ExpenseEntries table
\par -retrieve an entry(given its id) from the ExpenseEntries table
\par -retrieve all the entries from the ExpenseEntries table
\par -update an entry in the ExpenseEntries table
\par This manager is responsible for reading two properties from the configuration file. To accomplish this it will use the
\par Configuration Manager component. From the configuration file two properties will be read:
\par -a class name identifying an implementation of ExpenseEntryPersistence(this property is required)
\par -a connection producer name identifying a ConnectionProducer instance(this property is optional). This
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6383198 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857\charrsid1798857 
instance of ConnectionProducer will provide the connection to the database.}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857  }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857\charrsid1798857 Using these two properties this manager will}
{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857  create thourough reflection an }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857\charrsid1798857 ExpenseEntryPersistence}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857  }{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1798857\charrsid1798857 implementation instance.}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid3543078 
\par }{\i\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid6383198\charrsid6383198 Changes since 1.0
\par }{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid6383198\charrsid6383198 Four new methods for doing bulk operations on sets of expense entries have been added. These methods can work in atomic mode (a failure on one entry causes t
he entire operation to fail) or non-atomic (a failure in one entry doesn't affect the other and the user has a way to know which ones failed).
\par There is also a search method that provides the capability to search expense entries at the database level and return the ones that match}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid6383198\charrsid6383198 .
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6626950 {\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid16648019 
\par }{\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748\charrsid6383198 ExpenseEntryPersistence}{\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid3543078\charrsid6383198 
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6383198 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748\charrsid10575748 
ExpenseEntryPersistence  represents the interface for expense entries access. Client can choose between alternative implementations}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748  }{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748\charrsid10575748 to suit persiste
nce migration. Interface defines all necessary methods to interact with the database.  The methods exposes by this interface are very raw (it would be hard for a user to use}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748  }{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748\charrsid10575748 them to obtain the functionality). They are aimed to an efficient database implementation (using INSERT, SELECT,}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748  }{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748\charrsid10575748 UPDATE and DELETE statements) but other storage technologies can be used just as well (such as XML).}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748 
\par }{\i\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid6383198\charrsid6383198 Changes since 1.0
\par }{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid6383198\charrsid6383198 Four new methods for doing bulk operations on sets of expense entries have been added. These methods can w
ork in atomic mode (a failure on one entry causes the entire operation to fail) or non-atomic (a failure in one entry doesn't affect the other and the user has a way to know which ones failed).
\par There is also a search method that provides the capability to search expense entries at the database level and return the ones that match}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid6383198\charrsid6383198 .
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6383198 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid10575748 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10575748 {\b\f1\fs20\insrsid10575748 ExpenseEntryTypePersistence
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10575748 {\f1\fs20\insrsid10575748\charrsid10575748 
ExpenseEntryTypePersistence  represents the interface for expense entry types access. Client can choose between alternative implementations}{\f1\fs20\insrsid10575748  }{\f1\fs20\insrsid10575748\charrsid10575748 
to suit persistence migration. Interface defines all necessary methods to interact with the database.  The methods exposes by this interface are very raw (it would be hard for a user to use}{\f1\fs20\insrsid10575748  }{
\f1\fs20\insrsid10575748\charrsid10575748 them to obtain the functionality). They are aimed to an efficient database implementation (using INSERT, SELECT,}{\f1\fs20\insrsid10575748  U}{\f1\fs20\insrsid10575748\charrsid10575748 
PDATE and DELETE statements) but other storage technologies can be used just as well (such as XML).}{\f1\fs20\insrsid10575748 
\par 
\par }{\b\f1\fs20\insrsid10575748\charrsid10575748 ExpenseEntryStatusPersistence}{\b\f1\fs20\insrsid10575748 
\par }{\f1\fs20\insrsid10575748\charrsid10575748 ExpenseEntryTypePersistence  represents the interface for expense entry types access. Client can choose betw}{\f1\fs20\insrsid10575748 een alternative implementations }{\f1\fs20\insrsid10575748\charrsid10575748 
to suit persistence migration. Interface defines all necessary methods to interact with the database.  The methods exposes by this interface are very raw (it would be hard for a user to use}{\f1\fs20\insrsid10575748  }{
\f1\fs20\insrsid10575748\charrsid10575748 them to obtain the functionality). They are aimed to an efficient database implementation (using INSERT, SELECT,}{\f1\fs20\insrsid10575748  }{\f1\fs20\insrsid10575748\charrsid10575748 
UPDATE and DELETE statements) but other storage technologies can be used just as well (such as XML).
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10575748 {\b\f1\fs20\insrsid10575748 
\par }{\b\f1\fs20\insrsid8522302\charrsid6383198 ExpenseEntryDbPersistence}{\b\f1\fs20\insrsid4273860\charrsid6383198 
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8522302 {\f1\fs20\cf1\insrsid8522302\charrsid8522302 This class is a co
ncrete implementation of the ExpenseEntryPersistence  interface that uses an database as persistence.}{\f1\fs20\cf1\insrsid8522302  }{\f1\fs20\cf1\insrsid8522302\charrsid8522302 
This implementation uses the DB Connection Factory component to obtain a connection to the database. Transaction should be}{\f1\fs20\cf1\insrsid8522302  }{\f1\fs20\cf1\insrsid8522302\charrsid8522302 employed to ensure atomicity. T
his class provides two constructors. The first is an empty constructor, and the second can be used to specify}{\f1\fs20\cf1\insrsid8522302  }{\f1\fs20\cf1\insrsid8522302\charrsid8522302 
the connection producer name which will be used to obtain a connection. The connection will not be initialized in the constructors. It will
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6383198 {\f1\fs20\cf1\insrsid8522302\charrsid8522302 be ini
tialized in one of the methods that will access the database; it will be initialized the first time one of this methods is called.}{\f1\fs20\cf1\insrsid8522302  }{\f1\fs20\cf1\insrsid8522302\charrsid8522302 
It can be initialized using the setter or the initConnection method.}{\f1\fs20\cf1\insrsid7998157 
\par }{\i\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid6383198\charrsid6383198 Changes since 1.0
\par }{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid6383198\charrsid6383198 
Four new methods for doing bulk operations on sets of expense entries have been added. These methods can work in atomic mode (a failure on one entry causes the entire operation to fail) or non-atomic (a failure in one entry doesn't affect the other and th
e user has a way to know which ones failed).
\par There is also a search method that provides the capability to search expense entries at the database level and return the ones that match}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid6383198\charrsid6383198 .
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8522302 {\f1\fs20\cf1\insrsid8522302 
\par }{\b\f1\fs20\cf1\insrsid8522302 ExpenseEntryTypeDbPersistence
\par }{\f1\fs20\cf1\insrsid8522302\charrsid8522302 This class is a concrete implementation of the ExpenseEntryTypePersistence  interface that u}{\f1\fs20\cf1\insrsid8522302 ses an database as persistence.}{\f1\fs20\cf1\insrsid8522302\charrsid8522302 
This implementation uses the DB Connection Factory component to obtain a connection to the database. Transaction should be}{\f1\fs20\cf1\insrsid8522302  }{\f1\fs20\cf1\insrsid8522302\charrsid8522302 employed to ensure atomicity. This class provides tw
o constructors. The first is an empty constructor, and the second can be used to specify}{\f1\fs20\cf1\insrsid8522302  }{\f1\fs20\cf1\insrsid8522302\charrsid8522302 
the connection producer name which will be used to obtain a connection. The connection will not be initialized in the constructors. It will}{\f1\fs20\cf1\insrsid8522302  }{\f1\fs20\cf1\insrsid8522302\charrsid8522302 be initialized in one of th
e methods that will access the database; it will be initialized the first time one of this methods is called.}{\f1\fs20\cf1\insrsid8522302  }{\f1\fs20\cf1\insrsid8522302\charrsid8522302 It can be initialized using the setter or the initConnection method.}
{\f1\fs20\cf1\insrsid8522302 
\par }{\b\f1\fs20\cf1\insrsid8589194 
\par 
\par }{\b\f1\fs20\cf1\insrsid13834663 ExpenseEntryStatusDbPersistence
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13834663 {\f1\fs20\cf1\insrsid13834663\charrsid13834663 This class is a concrete implementation of the ExpenseEntryStatusPersistence  interface that u}{
\f1\fs20\cf1\insrsid13834663 ses an database as persistence. }{\f1\fs20\cf1\insrsid13834663\charrsid13834663 This implementation uses the DB Connection Factory component to obtain a connection to the database. Transaction should be}{
\f1\fs20\cf1\insrsid13834663  }{\f1\fs20\cf1\insrsid13834663\charrsid13834663 employed to ensure atomicity. This class provides two constructors. The first is an empty constructor, and the second can be used to specify}{\f1\fs20\cf1\insrsid13834663  }{
\f1\fs20\cf1\insrsid13834663\charrsid13834663 the connection producer name which will be used to obtain a connection. The connection will not be initialized in the constructors. It will}{\f1\fs20\cf1\insrsid13834663  }{
\f1\fs20\cf1\insrsid13834663\charrsid13834663 be initialized in one of the methods that will access the database; it will be initialized the first time one of this methods is called.}{\f1\fs20\cf1\insrsid13834663  }{
\f1\fs20\cf1\insrsid13834663\charrsid13834663 It can be initialized using the setter or the initConnection method.}{\f1\fs20\cf1\insrsid13834663 
\par }{\f1\fs20\cf1\insrsid13443668 
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid94103 {\b\f1\fs20\cf6\insrsid13443668\charrsid13443668 Criteria}{\b\f1\fs20\cf6\insrsid94103\charrsid13443668 
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 This interface abstracts a criteria used for searchin}{\f1\fs20\cf6\insrsid16136783 
g expense entries. The criteria}{\f1\fs20\cf6\insrsid13443668\charrsid13443668 
 are database oriented, approach chosen for speed by being able to filter expense entries at the SQL query level, thus avoiding the need to bring all expense entries into memory.  
\par The cr
iteria implementations are used to build the where clause of an SQL query on the expense entry table. To do that, the actual clause expression (string) is needed. Since the clause may have user given parameters the interface has a method to return that to
o. The parameters are NOT inserted into the expression directly for portability reasons (different database implementations may represent data types in different ways). PreparedStatements are used instead.
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 
\par }{\b\f1\fs20\cf6\insrsid13443668\charrsid13443668 FieldMatchCriteria
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 This class represents a basic t
ype of criteria for exact matching of a field with a given value. Both the field and value are given by the user (the where clause expression will look like "field=value").  
\par The class defines 5 constants and 5 static methods for the fields the requirements specifically mention. This is done in an effort to provide the simplest possible API for the user.  
\par }{\i\f1\fs20\cf6\insrsid13443668\charrsid13443668 Thread safety}{\f1\fs20\cf6\insrsid13443668\charrsid13443668 :  
\par Immutable class, so there are no thread safety issues.
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 
\par }{\b\f1\fs20\cf6\insrsid13443668\charrsid13443668 FieldLikeCriteria
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 This class represents a basic type of criteria 
for a like type of match on a field (like as in the SQL like clause). Both the field and like pattern are given by the user (the where clause expression will be "field like pattern").  
\par The class defines a constant and a static method for the field the requirements specifically mention (description). This is done in an effort to provide the simplest possible API for the user.  
\par }{\i\f1\fs20\cf6\insrsid13443668\charrsid13443668 Thread safety}{\f1\fs20\cf6\insrsid13443668\charrsid13443668 :  
\par Immutable class, so there are no thread safety issues.
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 
\par }{\b\f1\fs20\cf6\insrsid13443668\charrsid13443668 FieldBetweenCriteria
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 This class represents a basic type of
 criteria for selecting records with a field within a given interval. The field name and the value limits are given by the user. The interval can be open ended (one of the limits can be null, interpreted as no limit). When both limits are not null, the cr
iteria matches to an SQL between clause. When one limit is missing, the criteria is a <= or => comparison.  
\par The class defines 3 constants and 3 static methods for the fields the requirements specifically mention. This is done in an effort to provide the simplest possible API for the user.  
\par }{\i\f1\fs20\cf6\insrsid13443668\charrsid13443668 Thread safety}{\f1\fs20\cf6\insrsid13443668\charrsid13443668 :  
\par Immutable class, so there are no thread safety issues.
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 
\par }{\b\f1\fs20\cf6\insrsid13443668\charrsid13443668 RejectReasonCriteria
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 
This class represents a very specific type of expense entry match, matching those expense entries with a given reject reason i
d. It is a very specific criteria because it doesn't act on the expense entry table but on the exp_reject_reason table. Because of that, the where clause is very specific and it uses the "IN (SELECT ...)"}{\f1\fs20\cf6\insrsid3238081  or \'93EXISTS\'94}{
\f1\fs20\cf6\insrsid13443668\charrsid13443668  SQL nested queries.  
\par }{\i\f1\fs20\cf6\insrsid13443668\charrsid13443668 Thread safety}{\f1\fs20\cf6\insrsid13443668\charrsid13443668 :  
\par Immutable class, so there are no thread safety issues.
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 
\par }{\b\f1\fs20\cf6\insrsid13443668\charrsid13443668 NotCriteria
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 
This class represents a special type of criteria that simply negates the expression of another criteria. It contains another criteria and the where clause return method delegates the call 
to that criteria and surrounds the result with brackets and prefixes it with NOT. The parameters are the same as the contained criteria (since no new parameters are inserted).  
\par }{\i\f1\fs20\cf6\insrsid13443668\charrsid13443668 Thread safety}{\f1\fs20\cf6\insrsid13443668\charrsid13443668 :  
\par Immutable class, so there are no thread safety issues.
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 
\par }{\b\f1\fs20\cf6\insrsid13443668\charrsid13443668 CompositeCriteria
\par }\pard \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid13443668 {\f1\fs20\cf6\insrsid13443668\charrsid13443668 
This class represents a special type of rule that is an aggregation over two or more rules. The aggregation type can be AND and OR with the usual boolean logic significance.  
\par Th}{\f1\fs20\cf6\insrsid1461715 e class has an attribute and a getter }{\f1\fs20\cf6\insrsid13443668\charrsid13443668 for the contained criteria.
 The keyword for the aggregation type is parameterized. However, considering the current SQL standard, only AND or OR are expected to be used (constants are static creation methods are defined for them). But maybe some database implementation might implem
ent other aggregation types (such as XOR for example).  
\par }{\i\f1\fs20\cf6\insrsid13443668\charrsid13443668 Thread safety}{\f1\fs20\cf6\insrsid13443668\charrsid13443668 :  
\par Immutable class, so there are no thread safety issues}{\f1\fs20\cf1\insrsid13443668\charrsid13443668 .
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 1.5\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Component Exception Definitions
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 \tab }{\b\f1\fs20\insrsid2054528\charrsid2054528 Persistence Exception[custom]}{
\f1\fs20\insrsid3016826\charrsid2054528 
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8589194 {\f1\fs20\insrsid2054528\charrsid2054528 The PersistenceExcept
ion exception is used to wrap any persistence implementation specific exception. These exceptions are thrown by the }{\f1\fs20\insrsid8589194 persistence}{\f1\fs20\insrsid2054528\charrsid2054528  interface}{\f1\fs20\insrsid8589194 s}{
\f1\fs20\insrsid2054528\charrsid2054528  implementations. Since they are implementation specific, there needs to be a common way to report them to the user, and that is what this exception is used for. }{\f1\fs20\insrsid8589194  }{
\f1\fs20\insrsid2054528\charrsid2054528 This exception is originally thrown in the persistence implementations. The business logic layer (the manager classes) will forward them to the user.}{\f1\fs20\insrsid3016826\charrsid2054528 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid2054528 {\f1\fs20\insrsid2054528\charrsid2054528 
\par }{\b\f1\fs20\insrsid2054528\charrsid2054528 ConfigurationException[custom]}{\b\f1\fs20\insrsid2054528 
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8589194 {\f1\fs20\insrsid2054528\charrsid21596 This exception is thrown by the }{\f1\fs20\insrsid8589194 managers}{\f1\fs20\insrsid2054528  }{
\f1\fs20\insrsid2054528\charrsid21596 if anythi}{\f1\fs20\insrsid8589194 ng goes wrong in the process of }{\f1\fs20\insrsid2054528\charrsid21596 loading the configuration file or if the information is missing or corrupt.}{\f1\fs20\insrsid2054528 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid2054528 {\f1\fs20\insrsid2054528 
\par }{\b\f1\fs20\insrsid2054528 InsufficientDataException[custom]
\par }\pard \qj \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8589194 {\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid2054528\charrsid16265055 
This exception is thrown when some required fields (NOT NULL) are not set when creating or updating an entry, type or status in the persistence. This exception is thrown by the ExpenseEntryManager, ExpenseEntryTypeManager and ExpenseEntryStatusManager.

\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid9520952 {\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid8589194 
\par }{\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid9520952\charrsid9520952 NullPointerException
\par }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid9520952\charrsid9520952 This exception is thrown in various methods where null value is not acceptable.
\par Refer to the documentation in Poseidon for more details.}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid14621552  }{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid14621552\charrsid14621552 
Not used in any of the new methods, but used in the old ones or the modified ones.}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid9520952\charrsid9520952 
\par 
\par }{\b\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid9520952\charrsid9520952 IllegalArgumentException
\par }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid9520952\charrsid9520952 This exception is thrown in various methods if the given string argument is empty. Refer to the documentation in Poseidon for more details.}{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid1509805  }{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid1509805 The new methods use it for null arguments too. It is also used for arrays with null elements and empty strings. Empt
y string definition varies among the methods (in some case all space is considered invalid argument, in other it is not). For example field names cannot be all space}{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid3438602 s,}{
\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid1509805  but the \'93contains\'94 value for the }{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid3438602 \'93}{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid1509805 like}{
\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid3438602 \'94}{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid1509805  search filter can be one or more spaces. The Pos
eidon documentation must be consulted to see the individual details of each method.}{\f1\fs20\cf6\lang1033\langfe2052\langfenp2052\insrsid9520952\charrsid1509805 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid2054528 {\f1\fs20\insrsid2054528\charrsid2054528 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 1.6\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Thread Safety
\par }\pard\plain \qj \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid3438602 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid12745461\charrsid3438602 
This component is not thread safe. Thread safety was not a requirement. }{\f1\fs20\insrsid8589194\charrsid3438602  }{\f1\fs20\insrsid14288850\charrsid3438602 It is not thread safe because, for example, a user may request an entry whi
le another may delete it at the same time. In order to achieve thread safety all the methods from the persistence layer have to be synchronized. I think that it is better not to add an overhead to this component by synchronizing all the methods from the p
ersistence and let the application handle thread safety}{\insrsid14288850 .}{\insrsid12745461 
\par }{\f1\fs20\cf6\insrsid3438602\charrsid10891186 The new classes and methods do not change the thread safety. The new data classes (BasicInfo and ExpenseEntryRejectReason) are mutable so they are not thread safe. However, they will not be typically 
shared between threads. The user should be aware that in a concurrent environment, the DB data may be changed by other thread, making the data contained in a data object invalid (for example it can be deleted entirely by another thread).
\par The ExpenseEntry class has some new methods to modify the new list attribute. They are not thread safe. It can be made so by synchronizing on the list. Because of the nature of the class, it is not worth doing it though.
\par The ExpenseEntryManager }{\f1\fs20\cf6\insrsid10891186\charrsid10891186 class }{\f1\fs20\cf6\insrsid3438602\charrsid10891186 itsel
f is thread safe because it is immutable. However, it relies on the ExpenseEntryPersistence implementations which are not thread safe. That makes the }{\f1\fs20\cf6\insrsid10891186 manager methods that}{\f1\fs20\cf6\insrsid3438602\charrsid10891186 
 delegate the calls to the persistence methods, not thread safe. Solutions are synchronizing everything (at the manager level or persistence level). A solution based on transactions can also be devised. However, either solution doesn\rquote 
t protect us from logical errors (one thread deletes an expense entry used by another thread).
\par }{\f1\fs20\cf6\insrsid10891186\charrsid10891186 The ExpenseEn
tryDbPersistence class is almost thread safe itself (it has a setConnection method that might produce strange results; that can be fixed by synchronizing all connection using methods). However, because the underlying storage is a database, the class is no
t
 thread safe anyway. To make it thread safe, synchronization on all methods or transactions (with the appropriate transaction isolation flags to prevent dirty reads, etc) can be used. However, that does not prevent logical errors (one thread deletes an ex
pense entry used by another thread).
\par The Criteria hierarchy is immutable so it is thread safe}{\f1\fs20\cf6\insrsid10891186 .
\par In conclusion, the component is not thread safe (not required) but it can be made so using synchronization and/or SQL transactions}{\f1\fs20\insrsid10891186 .}{\f1\fs20\insrsid10891186\charrsid3438602 
\par {\listtext\pard\plain\s1 \b\f1\insrsid3016826 \hich\af1\dbch\af0\loch\f1 2.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Environment Requirements\tab \tab 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 2.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Environment
\par {\listtext\pard\plain\f3\fs20\insrsid984777\charrsid984777 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard\plain \ql \fi-216\li936\ri0\widctlpar\jclisttab\tx1152\faauto\ls7\rin0\lin936\itap0\pararsid984777 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid984777\charrsid984777 Development language: Java 1.4
\par {\listtext\pard\plain\f3\fs20\insrsid984777\charrsid984777 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Compile target: Java 1.3, Java 1.4
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid984777 {\f36\fs20\insrsid984777 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 2.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 TopCoder Software Components
\par {\listtext\pard\plain\s16 \f3\fs20\insrsid13449994\charrsid8019813 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard\plain \s16\qj \fi-360\li1080\ri0\sa120\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls8\adjustright\rin0\lin1080\itap0\pararsid1857184 
\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid13449994\charrsid8019813 Configuration}{\b\insrsid13449994  }{\b\insrsid13449994\charrsid8019813 Manager}{\b\insrsid13449994  2.1.3 \endash  }{\insrsid13449994 
used to retrieve the configured data. This component is used by gett}{\insrsid12677483 ing its singleton instance with }{\insrsid13449994 
ConfigManager.getInstance(). Then the existsNamespace method should be used to determine whether the namespace is already loaded. If not, the add method is used to load the default configuration file. }{\insrsid13379382 Finally,}{\insrsid13449994  getS}{
\insrsid12677483 tring returns the values of the }{\insrsid13449994 properties.}{\insrsid1857184  }{\cf6\insrsid1857184 Version 2.1.4 is available. If the PM approves, it could be used instead of 2.1.3.}{\cf6\insrsid6498610 
 It allows spaces in directory and file names and it doesn\rquote t depend on Xerces so using it seems a good choice.}{\insrsid13449994 
\par {\listtext\pard\plain\s16 \f3\fs20\insrsid13449994\charrsid13449994 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s16\qj \fi-360\li1080\ri0\sa120\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls8\adjustright\rin0\lin1080\itap0\pararsid12677483 {
\b\insrsid13449994\charrsid13449994 GUID Generator 1.0}{\insrsid13449994  is used to assign unique ids to records.}{\insrsid13449994\charrsid13137632 
 This component has the advantage of not requiring persistent storage (such as ID Generator requires), making the component easier to use. A generator is obtained with UUIDUtility.getGenerator(UUIDType.TYPEINT32). Then using generator.getNextUUID().toStri
ng() ids are generated as needed.}{\insrsid3016826 
\par {\listtext\pard\plain\s16 \f3\fs20\insrsid14710717\charrsid14710717 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s16\qj \fi-360\li1080\ri0\sa120\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls8\adjustright\rin0\lin1080\itap0\pararsid14710717 {
\b\insrsid14710717\charrsid14710717 Base Exception 1.0}{\insrsid14710717 
 is used as a base class for the all the custom exceptions defined in this component. The purpose of this component is to provide a consistent way to handle the cause exception for both JDK 1.3 and JDK 1.4.
\par {\listtext\pard\plain\s16 \f3\fs20\insrsid14710717 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s16\qj \fi-360\li1080\ri0\sa120\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls8\adjustright\rin0\lin1080\itap0\pararsid12677483 {\b\insrsid14710717 
DB Connection Factory}{\b\insrsid13379382  1.0 }{\insrsid13379382 
provides a simple but flexible framework allowing the clients to obtain the connections to a SQL database without providing any implementation details. This component is used to obtain a connection to }{\insrsid12677483 a }{\insrsid4282574 database}{
\insrsid12677483 .}{\insrsid14710717 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 2.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Third Party Components
\par }\pard\plain \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8737571 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid8737571 None.}{\insrsid8737571\charrsid8737571 
\par {\listtext\pard\plain\s1 \b\f1\insrsid3016826 \hich\af1\dbch\af0\loch\f1 3.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Installation and Configuration
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 3.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Package Name
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid8737571 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid8737571\charrsid8737571 com.to}{\insrsid8737571 pcoder.timetracker.entry.expense}
{\f1\fs20\insrsid3016826\charrsid8737571 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 3.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Configuration Parameters
\par }\trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tposx827\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2280\clshdrawnil \cellx3133\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx6207
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx9425\pard\plain 
\ql \li0\ri0\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid3016826 Parameter}{\b\f1\fs20\insrsid3016826 
\cell }{\b\insrsid3016826 Description}{\b\f1\fs20\insrsid3016826 \cell }{\b\insrsid3016826 Values}{\b\f1\fs20\insrsid3016826 \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid3016826 \trowd \irow0\irowband0
\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tposx827\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2280\clshdrawnil \cellx3133\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx6207
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx9425\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid11949931\charrsid11949931 
connection_producer_name}{\b\insrsid3016826\charrsid11949931 \cell }{\lang1033\langfe2052\langfenp2052\insrsid11949931 Identifies a  ConnectionProducer which will be used to obtain a connection to a database.}{
\b\lang1033\langfe2052\langfenp2052\insrsid11949931 Optional}{\b\insrsid3016826\charrsid11949931 \cell }{\insrsid11949931 Expense_}{\insrsid11949931\charrsid11949931 Entry}{\insrsid16123447  }{\insrsid11949931 _Connection}{\insrsid8330907 
\par }{\insrsid11949931 _}{\insrsid11949931\charrsid11949931 Producer}{\insrsid3016826\charrsid11949931 \cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\insrsid3016826 \trowd \irow1\irowband1\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tposx827\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2280\clshdrawnil \cellx3133\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx6207
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx9425\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid16123447 entry_}{
\b\insrsid8330907\charrsid8330907 persistence_class\cell }{\lang1033\langfe2052\langfenp2052\insrsid8330907 Fully qualified class name of the ExpenseEntryPersistence implementation. }{\b\lang1033\langfe2052\langfenp2052\insrsid8330907 Required}{
\lang1033\langfe2052\langfenp2052\insrsid8330907 .\cell }{\insrsid8330907 ExpenseEntry}{\insrsid16123447 Db}{\insrsid8330907 Persistence\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid8330907 \trowd \irow2\irowband2\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tposx827\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2280\clshdrawnil \cellx3133\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx6207
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx9425\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid16123447 
entry_type_persistence_class\cell }{\lang1033\langfe2052\langfenp2052\insrsid16123447 Fully qualified class name of the ExpenseEntryTypePersistence implementation. }{\b\lang1033\langfe2052\langfenp2052\insrsid16123447 Required}{
\lang1033\langfe2052\langfenp2052\insrsid16123447 .\cell }{\insrsid16123447 ExpenseEntryTypeDbPersistence\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\insrsid16123447 \trowd \irow3\irowband3\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tposx827\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2280\clshdrawnil \cellx3133\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx6207
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx9425\row }\pard\plain 
\s16\ql \li0\ri0\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\absnoovrlp1 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid16123447 
entry_status_persistence_class\cell }{\lang1033\langfe2052\langfenp2052\insrsid16123447 Fully qualified class name of the ExpenseEntryStatusPersistence implementation. }{\b\lang1033\langfe2052\langfenp2052\insrsid16123447 Required}{
\lang1033\langfe2052\langfenp2052\insrsid16123447 .\cell }{\insrsid16123447 ExpnseEntryStatusDbPersistence\cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 
{\insrsid16123447 \trowd \irow4\irowband4\lastrow \ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\tpvpara\tposx827\tposy0\tdfrmtxtLeft180\tdfrmtxtRight180\trftsWidth1\trftsWidthB3\trftsWidthA3\trautofit1\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tabsnoovrlp1 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2280\clshdrawnil \cellx3133\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth3600\clshdrawnil \cellx6207
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx9425\row }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\f1\fs20\insrsid3016826 
\par }\pard\plain \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\lbr3\insrsid3016826 \line }{\insrsid3016826 
\par }\pard \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12193388 {\insrsid12193388             }{\lang1033\langfe2052\langfenp2052\insrsid12193388 Here is an example of the configuration file:
\par }\pard\plain \ql \li360\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12193388 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\lang1033\langfe2052\langfenp2052\insrsid12193388 \tab }{
\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid12193388\charrsid9719012 <?xml version="1.0" ?>  
\par           <CMConfig>  
\par                <Config name="}{\f1\fs20\insrsid12193388\charrsid9719012  com.topcoder.timetracker.entry.expense}{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid12193388\charrsid9719012 ">}{\f1\fs20\insrsid12193388\charrsid9719012 
\par }\pard \ql \li360\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid16123447 {\f1\fs20\insrsid16123447\charrsid9719012                         <!--the  }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid16123447\charrsid9719012 
class name of the entry persistence}{\f1\fs20\insrsid16123447\charrsid9719012 -->
\par                         <property name=\'94 entry_persistence_class\'94>
\par                              <value>ExpenseEntryDbPersistence</value>
\par                        </property> 
\par                         <!--the  }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid16123447\charrsid9719012 class name of the entry type persistence}{\f1\fs20\insrsid16123447\charrsid9719012 -->
\par                         <property name=\'94 entry_type_persistence_class\'94>
\par                              <value>ExpenseEntryTypeDbPersistence</value>
\par                        </property> 
\par                         <!--the  }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid16123447\charrsid9719012 class name of the entry persistence}{\f1\fs20\insrsid16123447\charrsid9719012 -->
\par                         <property name=\'94 entry_}{\f1\fs20\insrsid1330965\charrsid9719012 status_}{\f1\fs20\insrsid16123447\charrsid9719012 persistence_class\'94>
\par                              <value>ExpenseEntry}{\f1\fs20\insrsid1330965\charrsid9719012 Status}{\f1\fs20\insrsid16123447\charrsid9719012 DbPersistence</value>
\par                        </property> 
\par }\pard \ql \li360\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0\pararsid12193388 {\f1\fs20\insrsid12193388\charrsid9719012                         <!--the  }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid12193388\charrsid9719012 
name identifying a ConnectionProducer instance}{\f1\fs20\insrsid12193388\charrsid9719012 -->
\par                         <property name=\'94 connection_producer_name\'94>
\par                           }{\f1\fs20\insrsid1330965\charrsid9719012    <value>Expense_Entry}{\f1\fs20\insrsid12193388\charrsid9719012 _Connection_Producer</value>
\par                        </property> 
\par }{\f1\fs20\lang1033\langfe2052\langfenp2052\insrsid12193388\charrsid9719012         </Config>}{\f1\fs20\cf2\lang1033\langfe2052\langfenp2052\insrsid12193388\charrsid12193388  
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12193388 {\f1\fs20\cf9\insrsid12193388\charrsid12926856 
\par 
\par }\pard\plain \s16\ql \li0\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid12193388 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 3.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Dependencies Configuration
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12193388 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid12193388\charrsid12193388 None.}{
\f1\fs20\insrsid3016826\charrsid12193388 
\par {\listtext\pard\plain\s1 \b\f1\insrsid3016826 \hich\af1\dbch\af0\loch\f1 4.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Usage Notes
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 4.1\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Required steps to test the component
\par {\listtext\pard\plain\s16 \f3\fs20\insrsid3016826 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard\plain \s16\ql \fi-360\li1080\ri0\sa120\widctlpar\jclisttab\tx1080\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin1080\itap0 
\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Extract the component distribution.
\par {\listtext\pard\plain\s16 \f3\fs20\insrsid3016826 \loch\af3\dbch\af0\hich\f3 \'b7\tab}Execute \lquote ant test\rquote  within the directory that the distribution was extracted to.
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 4.2\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Required steps to use the component
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2700911 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid2700911\charrsid5142728 Extract the component distribution}{
\f1\fs20\insrsid2700911 .}{\f1\fs20\insrsid2700911\charrsid5142728 
\par {\listtext\pard\plain\s2 \b\f1\fs20\insrsid3016826 \hich\af1\dbch\af0\loch\f1 4.3\tab}}\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin0\itap0 
\b\f1\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Demo
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6638791 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid6638791\charrsid6638791 For this demo I will }{\f1\fs20\insrsid140352 
use the configuration file shown}{\f1\fs20\insrsid6638791\charrsid6638791  above.}{\f1\fs20\insrsid3016826 
\par }{\b\f1\fs20\insrsid6638791\charrsid6360842 //create an ExpenseEntryType
\par }{\f1\fs20\insrsid6638791 ExpenseEntryType type1 = new ExpenseEntryType();
\par }{\b\f1\fs20\insrsid6638791\charrsid6360842 //set the fields of type1
\par }{\f1\fs20\insrsid6638791 type1.setDescription(\'93Air Transportation\'94);
\par type1.setCreationUser(\'93John\'94);
\par type1.setModificationUser(\'93Tom\'94);
\par }{\f1\fs20\insrsid10446724 
\par }{\b\f1\fs20\insrsid6638791\charrsid6360842 //create another ExpenseEntryType
\par //this time supply the id
\par //if the id exist in the ExpenseTypes table then type2 will not be added to the table
\par }{\f1\fs20\insrsid6638791 ExpenseEntryType type2 = new ExpenseEntryType(2);
\par }{\b\f1\fs20\insrsid6638791\charrsid6360842 //set the fields of type2
\par }{\f1\fs20\insrsid6360842 type2}{\f1\fs20\insrsid6638791 .setDescription(\'93Car Rental\'94);
\par }{\f1\fs20\insrsid6360842 type2}{\f1\fs20\insrsid6638791 .setCreationUser(\'93Jimmy\'94);
\par }{\f1\fs20\insrsid6360842 type2}{\f1\fs20\insrsid6638791 .setModificationUser(\'93Aristotel\'94);
\par 
\par }{\b\f1\fs20\insrsid6638791\charrsid6360842 //create an ExpenseEntry}{\b\f1\fs20\insrsid9519105 Type}{\b\f1\fs20\insrsid6638791\charrsid6360842 Manager
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid9519105 {\f1\fs20\insrsid9519105 ExpenseEntryType}{\f1\fs20\insrsid4799965 Manager }{\f1\fs20\insrsid9519105 type}{\f1\fs20\insrsid6638791 
Manager = new ExpenseEntry}{\f1\fs20\insrsid9519105 Type}{\f1\fs20\insrsid6638791 Manager(\'93}{\insrsid6638791\charrsid8737571 com.to}{\insrsid6638791 pcoder.timetracker.entry.expense}{\f1\fs20\insrsid6638791 \'93);
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6638791 {\f1\fs20\insrsid6638791 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6638791 {\f1\fs20\insrsid6638791 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6360842 {\b\f1\fs20\insrsid6360842\charrsid6360842 //add the types to the ExpenseTypes table}{\b\f1\fs20\insrsid6360842 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6638791 {\f1\fs20\insrsid6360842 typeManager.addType(type1);
\par typeManager.addType(type2);
\par }{\b\f1\fs20\insrsid6360842\charrsid6360842 //assume that both types have been added to the ExpenseTypes table }{\b\f1\fs20\insrsid6360842 
\par 
\par //create an ExpenseEntryStatus
\par }{\f1\fs20\insrsid6360842\charrsid6360842 Expe}{\f1\fs20\insrsid6360842 nseEntryStatus status1 = new ExpenseEntryStatus();
\par }{\b\f1\fs20\insrsid6360842 //set the fields of the status1
\par }{\f1\fs20\insrsid6360842 status1.setDescription(\'93Approved\'94);
\par status1.setCreationUser(\'93John\'94);
\par status1.setModificationUser(\'93Tom\'94);
\par 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6360842 {\b\f1\fs20\insrsid6360842 //create another ExpenseEntryStatus
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6360842 {\b\f1\fs20\insrsid6360842\charrsid6360842 //this time supply the id
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6360842 {\b\f1\fs20\insrsid6360842\charrsid6360842 //if }{\b\f1\fs20\insrsid6360842 the id exist in the ExpenseStatuses table then status2}{
\b\f1\fs20\insrsid6360842\charrsid6360842  will not be added to the }{\b\f1\fs20\insrsid6360842 //}{\b\f1\fs20\insrsid6360842\charrsid6360842 table
\par }{\f1\fs20\insrsid6360842\charrsid6360842 Expe}{\f1\fs20\insrsid6360842 nseEntryStatus status2 = new ExpenseEntryStatus(3);
\par }{\b\f1\fs20\insrsid6360842 //set the fields of the status1
\par }{\f1\fs20\insrsid11996200 status2}{\f1\fs20\insrsid6360842 .setDescription(\'93}{\f1\fs20\insrsid11996200 Not }{\f1\fs20\insrsid6360842 Approved\'94);
\par }{\f1\fs20\insrsid11996200 status2}{\f1\fs20\insrsid6360842 .setCreationUser(\'93}{\f1\fs20\insrsid11996200 Mike}{\f1\fs20\insrsid6360842 \'94);
\par }{\f1\fs20\insrsid11996200 status2}{\f1\fs20\insrsid6360842 .setModificationUser(\'93Tom\'94);
\par }{\f1\fs20\insrsid11996200 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11996200 {\b\f1\fs20\insrsid11996200 //create an ExpenseEntryStatus}{\b\f1\fs20\insrsid11996200\charrsid6360842 Manager
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid9519105 {\f1\fs20\insrsid9519105 ExpenseEntryStatusManager statusManager = new ExpenseEntryStatusManager(\'93}{\insrsid9519105\charrsid8737571 com.to}{
\insrsid9519105 pcoder.timetracker.entry.expense}{\f1\fs20\insrsid9519105 \'93);
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11996200 {\f1\fs20\insrsid11996200 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid11996200 {\b\f1\fs20\insrsid11996200 //add the statuses to the ExpenseStatuses}{\b\f1\fs20\insrsid11996200\charrsid6360842  table
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11996200 {\f1\fs20\insrsid11996200 statusManager.addStatus(status1);
\par statusManager.addStatus(status2);
\par }{\b\f1\fs20\insrsid11996200\charrsid6360842 //assume that both}{\b\f1\fs20\insrsid11996200  statuses}{\b\f1\fs20\insrsid11996200\charrsid6360842  hav}{\b\f1\fs20\insrsid11996200 e been added to the ExpenseStatuses}{
\b\f1\fs20\insrsid11996200\charrsid6360842  table}{\b\f1\fs20\insrsid11996200 
\par 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15232720 {\b\f1\fs20\insrsid15232720\charrsid6360842 //create an ExpenseEntry
\par }{\f1\fs20\insrsid15232720 ExpenseEntry entry1 = new ExpenseEntry();
\par }{\b\f1\fs20\insrsid15232720\charrsid6360842 //set the fields of }{\b\f1\fs20\insrsid15232720 entry}{\b\f1\fs20\insrsid15232720\charrsid6360842 1
\par }{\f1\fs20\insrsid15232720 entry1.setDescription(\'93project Ohio\'94);
\par entry1.setCreationUser(\'93George\'94);
\par entry1.setModificationUser(\'93George);
\par entry1.setDate(200000);
\par entry1.setExpenseType(type1);
\par entry1.setExpenseStatus(status1);
\par entry1.setBillable(true);
\par double amount =20000;
\par entry1.setAmount(amount);
\par }{\f1\fs20\insrsid14093591 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14093591 {\f1\fs20\cf6\insrsid14093591\charrsid10446724 //}{\b\f1\fs20\cf6\insrsid14093591\charrsid10446724 
add reject reasons (by id), one at a time, or several at a time
\par }{\f1\fs20\cf6\insrsid14093591\charrsid14093591 entry1.addRejectReason(23);
\par entry1.addRejectReason(24);
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid10175690 {\f1\fs20\cf6\insrsid14093591\charrsid14093591 entry1.addRejectReasons}{\f1\fs20\cf6\insrsid14093591\charrsid10446724 (new int[] \{25, 26, 27\});}{
\f1\fs20\cf6\insrsid14093591\charrsid10175690 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid15232720 {\f1\fs20\insrsid15232720 
\par }{\b\f1\fs20\insrsid15232720\charrsid6360842 /}{\b\f1\fs20\insrsid279683 /create another ExpenseEntry}{\b\f1\fs20\insrsid15232720\charrsid6360842 
\par //this time supply the id
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid279683 {\b\f1\fs20\insrsid15232720\charrsid6360842 //if }{\b\f1\fs20\insrsid279683 the id exist in the ExpenseEntries table then entry}{
\b\f1\fs20\insrsid15232720\charrsid6360842 2 will not be added to the }{\b\f1\fs20\insrsid279683 //}{\b\f1\fs20\insrsid15232720\charrsid6360842 table
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid279683 {\f1\fs20\insrsid279683 ExpenseEntry entry2 = new ExpenseEntry(3);
\par }{\b\f1\fs20\insrsid279683\charrsid6360842 //set the fields of }{\b\f1\fs20\insrsid279683 entry2}{\b\f1\fs20\insrsid279683\charrsid6360842 
\par }{\f1\fs20\insrsid279683 entry2.setDescription(\'93project New York\'94);
\par entry2.setCreationUser(\'93Alonso\'94);
\par entry2.setModificationUser(\'93Alonso);
\par entry2.setDate(200000);
\par entry2.setExpenseType(type2);
\par entry2.setExpenseStatus(status2);
\par entry2.setBillable(false);
\par amount =200000;
\par entry2.setAmount(amount);
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11996200 {\b\f1\fs20\insrsid11996200\charrsid6360842  }{\b\f1\fs20\insrsid11996200 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid218022 {\b\f1\fs20\insrsid218022 //create an ExpenseEntry}{\b\f1\fs20\insrsid218022\charrsid6360842 Manager
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid9519105 {\f1\fs20\insrsid9519105 ExpenseEntryManager entryManager = new ExpenseEntryManager(\'93}{\insrsid9519105\charrsid8737571 com.to}{\insrsid9519105 
pcoder.timetracker.entry.expense}{\f1\fs20\insrsid9519105 \'93);
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid218022 {\f1\fs20\insrsid218022 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid218022 {\b\f1\fs20\insrsid218022 //add the entries to the ExpenseEntries}{\b\f1\fs20\insrsid218022\charrsid6360842  table
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14093591 {\b\f1\fs20\cf6\insrsid14093591 //for entry}{\b\f1\fs20\cf6\insrsid14093591\charrsid10446724 1, the reject reasons added above are persisted too
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid218022 {\f1\fs20\insrsid218022 entryManager.add}{\f1\fs20\insrsid10175690 Entry}{\f1\fs20\insrsid218022 (entry1);
\par }{\f1\fs20\insrsid10175690 entryManager.addEntry}{\f1\fs20\insrsid218022 (entry2);
\par }{\b\f1\fs20\insrsid218022\charrsid6360842 //assume that both}{\b\f1\fs20\insrsid218022  entries}{\b\f1\fs20\insrsid218022\charrsid6360842  hav}{\b\f1\fs20\insrsid218022 e been added to the ExpenseEntries}{\b\f1\fs20\insrsid218022\charrsid6360842  table}{
\b\f1\fs20\insrsid218022 
\par 
\par //retrieve type(s), status(es) and entry(entries) from the database
\par }{\f1\fs20\insrsid218022 ExpenseEntryType type3 = typeManager.retrieveType(2);
\par System.out.println(\'93description = \'93+type3.getDescription());
\par ExpenseEntryStatus status3 = statusManager.retrieveStatus(2);
\par System.out.println(\'93creation user = \'93+status2.getCreationUser());
\par ExpenseEntry entry3 = entryManager.retrieveEntry(3);
\par System.out.println(\'93is billable = \'93+entry3.isBillable());
\par 
\par List entries = entryManager.retrieveAllEntries();
\par for(int i=0;i<entries.size();i++)\{
\par     ExpenseEntry e = (ExpenseEntry)entries.get(i);
\par     System.out.println(\'93is billable+\'94e.isBillable());
\par }{\f1\fs20\insrsid10446724 
\par }{\b\f1\fs20\cf6\insrsid2703826\charrsid2703826     //get the reject reasons and print them
\par }{\f1\fs20\cf6\insrsid10446724\charrsid2703826     ExpenseEntryRejectReason[] r = e.getRejectReasons();
\par     for (int j = 0; j < r.length; j++) \{
\par           System.out.print}{\f1\fs20\cf6\insrsid2703826\charrsid2703826 ln}{\f1\fs20\cf6\insrsid10446724\charrsid2703826 (}{\f1\fs20\cf6\insrsid2703826\charrsid2703826 r[j].getId() + \'93 \'93 + r[j].getCreationUser() + \'93 \'93 
\par                        + r[j].getCreationDate()}{\f1\fs20\cf6\insrsid10446724\charrsid2703826 );
\par     \}
\par }{\f1\fs20\cf6\insrsid2703826\charrsid2703826 
\par }{\b\f1\fs20\cf6\insrsid2703826\charrsid2703826     //get the reject reason ids directly and print them
\par }{\f1\fs20\cf6\insrsid2703826\charrsid2703826     int[] rids = e.getRejectReasonIds();
\par     for (int j = 0; j < rids.length; j++) \{
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid2703826 {\f1\fs20\cf6\insrsid2703826\charrsid2703826           System.out.println(rids[j].getId());
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid218022 {\f1\fs20\cf6\insrsid2703826\charrsid2703826     \}
\par }{\f1\fs20\insrsid218022 \}
\par      }{\f1\fs20\insrsid218022\charrsid218022 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8092845 {\f1\fs20\insrsid8092845 List types = typeManager.retrieveAllTypes();
\par for(int i=0;i<types.size();i++)\{
\par     ExpenseEntryType t = (ExpenseEntryType)types.get(i);
\par     System.out.println(\'93description+\'94t.getDescription());
\par \}
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid218022 {\f1\fs20\insrsid218022 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8092845 {\f1\fs20\insrsid8092845 List statuses = statusManager.retrieveAllStatuses();
\par for(int i=0;i<statuses.size();i++)\{
\par     ExpenseEntryStatus s = (ExpenseEntryStatus)statuses.get(i);
\par     System.out.println(\'93description+\'94t.isBillable());
\par \}
\par 
\par }{\b\f1\fs20\insrsid8092845 //update an entry
\par }{\f1\fs20\insrsid8092845 entry3.setBillabel(true);
\par }{\f1\fs20\insrsid10446724 
\par }{\b\f1\fs20\cf6\insrsid3219965\charrsid3219965 //update the entry by adding a new reject reason}{\b\f1\fs20\cf6\insrsid10446724\charrsid3219965 
\par }{\f1\fs20\cf6\insrsid10446724\charrsid3219965 entry3.addRejectReason(50);}{\f1\fs20\cf6\insrsid10446724 
\par }{\f1\fs20\cf6\insrsid14965994\charrsid3219965 
\par }{\b\f1\fs20\cf6\insrsid3219965\charrsid3219965 //and deleting old ones (one or several at a time)
\par }{\f1\fs20\cf6\insrsid10446724\charrsid3219965 entry3.deleteRejectReason(51);
\par entry3.deleteRejectReason(52);
\par entry3.deleteRejectReasons(new int[] \{53, 54, 55\});}{\f1\fs20\cf6\insrsid10446724 
\par }{\f1\fs20\cf6\insrsid14965994\charrsid3219965 
\par }{\b\f1\fs20\cf6\insrsid10446724\charrsid3219965 //}{\b\f1\fs20\cf6\insrsid3219965\charrsid3219965 the existing reject reasons can also be changed}{\b\f1\fs20\cf6\insrsid10446724\charrsid3219965 
\par }{\b\f1\fs20\cf6\insrsid3219965\charrsid3219965 //the code below takes each reject reason and changes
\par //the modification user
\par }{\f1\fs20\cf6\insrsid3219965\charrsid3219965 ExpenseEntryRejectReason[] r = entry3.getRejectReasons();
\par for (int i = 0; i < r.length; i++) \{
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid3219965 {\f1\fs20\cf6\insrsid3219965\charrsid3219965       r[i].setModificationUser(\'93me\'94);
\par       entry3.updateRejectReason(r[i]);
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8092845 {\f1\fs20\cf6\insrsid3219965\charrsid3219965 \}}{\f1\fs20\cf6\insrsid3219965 
\par }{\f1\fs20\cf6\insrsid14965994\charrsid3219965 
\par }{\b\f1\fs20\cf6\insrsid3219965\charrsid3219965 //alternatively the update can be done for all reject reasons at a time
\par }{\f1\fs20\cf6\insrsid3219965\charrsid3219965 entry3.updateRejectReasons(r);
\par }{\f1\fs20\cf6\insrsid3219965 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid3219965 {\b\f1\fs20\cf6\insrsid3219965\charrsid3219965 //the}{\b\f1\fs20\cf6\insrsid3219965  entry update method will make sure the reject reasons from the
\par //database are in synch with the entry reject reasons (that means records
\par //could be added, deleted or updated)}{\b\f1\fs20\cf6\insrsid3219965\charrsid3219965 
\par }{\f1\fs20\insrsid8092845 entryManager.updateEntry(entry3);}{\f1\fs20\insrsid3219965 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8092845 {\f1\fs20\insrsid8092845\charrsid8092845 
\par }{\b\f1\fs20\insrsid8092845 //update a type
\par }{\f1\fs20\insrsid8092845 type3.setModificationUser(\'93Pam);
\par typeManager.updateType(type3);
\par }{\b\f1\fs20\insrsid8092845 
\par //update a status
\par }\pard \ql \li720\ri0\widctlpar\faauto\rin0\lin720\itap0\pararsid8092845 {\f1\fs20\insrsid8092845 status3.setDescription(\'93}{\f36\fs20\insrsid8092845 Pending Approval\'94}{\f1\fs20\insrsid8092845 );}{\f36\fs20\insrsid8092845\charrsid8092845 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid8092845 {\f1\fs20\insrsid8092845 statusManager.updateStatus(status3);
\par 
\par }{\b\f1\fs20\insrsid15149069\charrsid15149069 //delete an entry}{\b\f1\fs20\insrsid8092845 
\par }{\f1\fs20\insrsid15149069 if (entryManager.deleteEntry(3))
\par     System.out.println(\'93entry was deleted\'94);
\par 
\par //}{\b\f1\fs20\insrsid15149069 delete all entries
\par }{\f1\fs20\insrsid15149069\charrsid15149069 entryManager.deleteAllEntries();
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11996200 {\b\f1\fs20\insrsid279683 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid15149069 {\b\f1\fs20\insrsid15149069 //delete a type
\par }{\f1\fs20\insrsid15149069 if (typeManager.deleteType(2))
\par     System.out.println(\'93type was deleted\'94);
\par 
\par //}{\b\f1\fs20\insrsid15149069 delete all types
\par }{\f1\fs20\insrsid15149069 typeManager.deleteAllTypes}{\f1\fs20\insrsid15149069\charrsid15149069 ();
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6360842 {\f1\fs20\insrsid11996200 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid15149069 {\b\f1\fs20\insrsid15149069 //delete a status
\par }{\f1\fs20\insrsid15149069 if (statusManager.deleteStatus(3))
\par     System.out.println(\'93}{\f1\fs20\insrsid3499148 status}{\f1\fs20\insrsid15149069  was deleted\'94);
\par 
\par //}{\b\f1\fs20\insrsid15149069 delete all statuses
\par }{\f1\fs20\insrsid15149069 statusManager.deleteAllStatuses}{\f1\fs20\insrsid15149069\charrsid15149069 ();}{\f1\fs20\insrsid15149069 
\par }{\f1\fs20\insrsid14093591 
\par }{\b\f1\fs20\cf6\insrsid16516418\charrsid14965994 //the alternative to the addEntry, deleteEntry, updateEntry and retrieveEntry are
\par //the }{\b\f1\fs20\cf6\insrsid201164 BULK}{\b\f1\fs20\cf6\insrsid16516418\charrsid14965994  methods that can process more entries in one call
\par 
\par //three entries are added in one call, atomically (meaning if one fails, all fail
\par //without any database changes}{\b\f1\fs20\cf6\insrsid5851428\charrsid14965994 )}{\b\f1\fs20\cf6\insrsid16516418\charrsid14965994 
\par }{\f1\fs20\cf6\insrsid5991371\charrsid14965994 entryManager.addEntries(new ExpenseEntry[] \{entry1, entry2, entry3\}, true);}{\f1\fs20\cf6\insrsid14093591\charrsid14965994 
\par }{\f1\fs20\cf6\insrsid16516418\charrsid14965994 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid16516418 {\b\f1\fs20\cf6\insrsid16516418\charrsid14965994 //three entries are added in one call, non atomically (meaning if one fails, the
\par //others are still performed independently and the failed ones are returned to
\par //the user)
\par }{\f1\fs20\cf6\insrsid16516418\charrsid14965994 ExpenseEntry[] failed = 
\par          entryManager.addEntries(new ExpenseEntry[] \{entry1, entry2, entry3\}, false);
\par for (int i = 0; i < failed.length; i++) \{
\par         System.out.println(failed[i].getDescription() + \'93 adding failed\'94);
\par \}
\par 
\par }{\b\f1\fs20\cf6\insrsid16516418\charrsid14965994 //three entries are deleted in one call, atomically (meaning if one fails, all fail
\par //without any database changes}{\b\f1\fs20\cf6\insrsid5851428\charrsid14965994 )}{\b\f1\fs20\cf6\insrsid16516418\charrsid14965994 
\par }{\f1\fs20\cf6\insrsid16516418\charrsid14965994 entryManager.deleteEntries(new int[] \{50, 51, 52\}, true);
\par 
\par }{\b\f1\fs20\cf6\insrsid16516418\charrsid14965994 //three entries are deleted in one call, non atomically (meaning if one fails, the
\par //others are still performed independently and the ids of the failed ones are
\par //returned to the user)
\par }{\f1\fs20\cf6\insrsid16516418\charrsid14965994 int[] failedIds = 
\par          entryManager.addEntries deleteEntries(new int[] \{50, 51, 52\}, false);
\par for (int i = 0; i < failedIds.length; i++) \{
\par         System.out.println(failedIds[i] + \'93 deletion failed\'94);
\par \}
\par 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10447737 {\b\f1\fs20\cf6\insrsid10447737\charrsid14965994 //three entries are updated in one call, atomically (meaning if one fails, all fail
\par //without any database changes}{\b\f1\fs20\cf6\insrsid5851428\charrsid14965994 )}{\b\f1\fs20\cf6\insrsid10447737\charrsid14965994 
\par }{\f1\fs20\cf6\insrsid10447737\charrsid14965994 entryManager.updateEntries(new ExpenseEntry[] \{entry1, entry2, entry3\}, true);
\par 
\par }{\b\f1\fs20\cf6\insrsid10447737\charrsid14965994 //three entries are updated in one call, non atomically (meaning if one fails, the
\par //others are still performed independently and the failed ones are returned to
\par //the user)
\par }{\f1\fs20\cf6\insrsid10447737\charrsid14965994 ExpenseEntry[] failed = 
\par          entryManager.updateEntries(new ExpenseEntry[] \{entry1, entry2, entry3\}, false);
\par for (int i = 0; i < failed.length; i++) \{
\par         System.out.println(failed[i].getDescription() + \'93 update failed\'94);
\par \}
\par }{\f1\fs20\cf6\insrsid7474327\charrsid14965994 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7474327 {\b\f1\fs20\cf6\insrsid7474327\charrsid14965994 //three entries are }{\b\f1\fs20\cf6\insrsid5851428\charrsid14965994 retrieved}{
\b\f1\fs20\cf6\insrsid7474327\charrsid14965994  in one call, atomically (meaning if one fails, all fail
\par //without any }{\b\f1\fs20\cf6\insrsid5851428\charrsid14965994 results being returned)}{\b\f1\fs20\cf6\insrsid7474327\charrsid14965994 
\par }{\f1\fs20\cf6\insrsid5851428\charrsid14965994 ExpenseEntry[] entries = }{\f1\fs20\cf6\insrsid7474327\charrsid14965994 entryManager.}{\f1\fs20\cf6\insrsid5851428\charrsid14965994 retrieve}{\f1\fs20\cf6\insrsid7474327\charrsid14965994 Entries(new int[] \{
50, 51, 52\}, true);
\par }{\f1\fs20\cf6\insrsid5851428\charrsid14965994 if (entries == null) \{
\par         System.out.println(\'93retrieval failed\'94);
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid5851428 {\f1\fs20\cf6\insrsid5851428\charrsid14965994 \} else for (int i = 0; i < entries.length; i++) \{
\par         System.out.println(entries[i].getDescription() + \'93 retrieved\'94);
\par \}
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid12596054 {\f1\fs20\cf6\insrsid7474327\charrsid14965994 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid7474327 {\b\f1\fs20\cf6\insrsid7474327\charrsid14965994 //three entries are }{\b\f1\fs20\cf6\insrsid12596054\charrsid14965994 retrieved}{
\b\f1\fs20\cf6\insrsid7474327\charrsid14965994  in one call, non atomically (meaning if one fails, the
\par //others are still }{\b\f1\fs20\cf6\insrsid12596054\charrsid14965994 retrieved}{\b\f1\fs20\cf6\insrsid7474327\charrsid14965994  independently and the }{\b\f1\fs20\cf6\insrsid12596054\charrsid14965994 retrieved}{
\b\f1\fs20\cf6\insrsid7474327\charrsid14965994  ones are returned to
\par //the user}{\b\f1\fs20\cf6\insrsid12596054\charrsid14965994  \endash  note the difference from add/delete/update}{\b\f1\fs20\cf6\insrsid7474327\charrsid14965994 )
\par }{\f1\fs20\cf6\insrsid7474327\charrsid14965994 ExpenseEntry[]}{\f1\fs20\cf6\insrsid675629\charrsid14965994  entries }{\f1\fs20\cf6\insrsid7474327\charrsid14965994 = 
\par          entryManager.}{\f1\fs20\cf6\insrsid675629\charrsid14965994 retrieve}{\f1\fs20\cf6\insrsid7474327\charrsid14965994 Entries(new int[] \{50, 51, 52\}, false);
\par for (int i = 0; i < }{\f1\fs20\cf6\insrsid675629\charrsid14965994 entries}{\f1\fs20\cf6\insrsid7474327\charrsid14965994 .length; i++) \{
\par  }{\f1\fs20\cf6\insrsid675629\charrsid14965994        System.out.println(entries}{\f1\fs20\cf6\insrsid7474327\charrsid14965994 [i].getDescription() + \'93 }{\f1\fs20\cf6\insrsid675629\charrsid14965994 retrieved}{
\f1\fs20\cf6\insrsid7474327\charrsid14965994 \'94);
\par \}}{\f1\fs20\cf6\insrsid7474327 
\par }{\f1\fs20\cf6\insrsid11678718 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10447737 {\b\f1\fs20\cf6\insrsid6109909\charrsid12931427 //the }{\b\f1\fs20\cf6\insrsid201164 SEARCH}{\b\f1\fs20\cf6\insrsid6109909\charrsid12931427 
 framework allows expense entries being searched based}{\b\f1\fs20\cf6\insrsid12931427 
\par //}{\b\f1\fs20\cf6\insrsid6109909\charrsid12931427 on different criteria}{\b\f1\fs20\cf6\insrsid7474327 
\par }{\b\f1\fs20\cf6\insrsid11040418 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for description containing a given string
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit1 = FieldLikeCriteria.getDescriptionContainsCriteria("gambling debt");
\par 
\par }{\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for expense status, expense type, billable flag, creation and modification users
\par // matching a given value
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit2 = FieldMatchCriteria.getExpenseStatusMatchCriteria(2);
\par Criteria crit3 = FieldMatchCriteria.getExpenseTypeMatchCriteria(23);
\par Criteria crit4 = FieldMatchCriteria.getBillableMatchCriteria(true);
\par Criteria crit5 = FieldMatchCriteria.getCreationUserMatchCriteria("me");
\par Criteria crit6 = FieldMatchCriteria.getModificationUserMatchCriteria("boss");
\par 
\par }{\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for amount between two given value
\par //the null calls means open ended (the first means amount >= 1000, the second amount <=2000)
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit7 = FieldBetweenCriteria.getAmountBetweenCriteria(}{\f1\fs20\cf6\insrsid11040418 
\par       \tab }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 BigDecimal.valueOf(1000), BigDecimal.valueOf(2000));
\par Criteria crit8 = FieldBetweenCriteria.getAmountBetweenCriteria(}{\f1\fs20\cf6\insrsid11040418 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 BigDecimal.valueOf(1000), null);
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit9 = FieldBetweenCriteria.getAmountBetweenCriteria(}{\f1\fs20\cf6\insrsid11040418 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 null, BigDecimal.valueOf(2000));
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 
\par }{\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for creation and modification dates between two given dates
\par //the null calls mean open ended (the first means 2005/30/1 or later, the second today or before)
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit10 = FieldBetweenCriteria.getCreationDateBetweenCriteria(}{\f1\fs20\cf6\insrsid11040418 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 new Date(2005, 30, 1), new Date());
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit11 = FieldBetweenCriteria.getCreationDateBetweenCriteria(}{\f1\fs20\cf6\insrsid11040418 

\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 new Date(2005, 30, 1), null);
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit12 = FieldBetweenCriteria.getCreationDateBetweenCriteria(}{\f1\fs20\cf6\insrsid11040418 

\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 null, new Date());
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit13 = FieldBetweenCriteria.getModificationDateBetweenCriteria(}{\f1\fs20\cf6\insrsid11040418 

\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 new Date(2005, 30, 1), new Date());
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit14 = FieldBetweenCriteria.getModificationDateBetweenCriteria(}{\f1\fs20\cf6\insrsid11040418 

\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 new Date(2005, 30, 1), null);
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit15 = FieldBetweenCriteria.getModificationDateBetweenCriteria(}{\f1\fs20\cf6\insrsid11040418 

\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 null, new Date());
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 
\par }{\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for an expense entry having a given reject reason
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit16 = new RejectReasonCriteria(50);
\par Criteria crit16b = new RejectReasonCriteria(51);
\par Criteria crit16c = new RejectReasonCriteria(52);
\par 
\par }{\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for entries not matching a given criteria
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit17 = new NotCriteria(crit10);
\par 
\par }{\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for entries matching two criteria at the same time
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit18 = CompositeCriteria.getAndCompositeCriteria(crit2, crit6);}{\f1\fs20\cf6\insrsid11040418 
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 
\par }{\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for entries matching any of two criteria
\par //in this particular case it looks for an entry having reject reason 51 OR 52
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit19 = CompositeCriteria.getOrCompositeCriteria(crit16b, crit16c);}{\f1\fs20\cf6\insrsid11040418 
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 
\par }{\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for entries matching more criteria at the same time
\par //in this particular case it looks for an entry having reject reason 50, 51 AND 52
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria crit20 = CompositeCriteria.getAndCompositeCriteria(}{\f1\fs20\cf6\insrsid11040418 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 new Criteria[] \{crit16, crit16b, crit16c\});}{\f1\fs20\cf6\insrsid11040418 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 
\par }{\b\f1\fs20\cf6\insrsid11040418\charrsid11040418 //look for entries matching any of more criteria
\par }{\f1\fs20\cf6\insrsid11040418\charrsid11040418 Criteria criteria = CompositeCriteria.getOrCompositeCriteria(}{\f1\fs20\cf6\insrsid11040418 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11040418 {\f1\fs20\cf6\insrsid11040418\charrsid11040418 new Criteria[] \{crit2, crit6, crit12\});
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid10447737 {\b\f1\fs20\cf6\insrsid11040418 
\par // the actual search and result printing}{\b\f1\fs20\cf6\insrsid11040418\charrsid12931427 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid6109909 {\f1\fs20\cf6\insrsid6109909\charrsid14965994 ExpenseEntry[] entries = entryManager.}{\f1\fs20\cf6\insrsid6109909 searchEntries}{
\f1\fs20\cf6\insrsid6109909\charrsid14965994  (}{\f1\fs20\cf6\insrsid6109909 criteria}{\f1\fs20\cf6\insrsid6109909\charrsid14965994 );
\par for (int i = 0; i < entries.length; i++) \{
\par         System.out.println(entries[i].getDescription() + \'93 }{\f1\fs20\cf6\insrsid6109909 match found}{\f1\fs20\cf6\insrsid6109909\charrsid14965994 \'94);
\par \}
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6109909 {\f1\fs20\insrsid16516418\charrsid15149069 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6638791 {\f1\fs20\insrsid9925973\charrsid6638791 
\par {\listtext\pard\plain\s1 \b\f1\insrsid3016826 \hich\af1\dbch\af0\loch\f1 5.\tab}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin0\itap0 
\b\f1\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3016826 Future Enhancements
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14113066 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid14113066\charrsid14113066 More ExpenseEntryPersistence implementation}{
\f1\fs20\insrsid16648019 s}{\f1\fs20\insrsid14113066\charrsid14113066  to this component. }{\f1\fs20\insrsid14113066 
\par }{\f1\fs20\insrsid10234541 
\par }\pard \ql \li720\ri0\sa120\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0\pararsid11889077 {\f1\fs20\cf6\insrsid10234541 
The Criteria interface allows additional search criteria to be used without any code changes to the component. The first enhancement one can think of is adding more implementations.}{\f1\fs20\cf6\insrsid10234541\charrsid10234541 
\par }}