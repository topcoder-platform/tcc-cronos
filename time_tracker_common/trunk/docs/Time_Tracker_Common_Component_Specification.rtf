{\rtf1\ansi\ansicpg936\deff0\deflang1033\deflangfe2052{\fonttbl{\f0\fswiss\fprq2\fcharset0 Arial;}{\f1\froman\fprq2\fcharset0 Times New Roman;}{\f2\fnil\fprq2\fcharset2 Wingdings;}{\f3\fmodern\fprq1\fcharset0 Courier New;}{\f4\fmodern\fprq6\fcharset0 ??;}{\f5\fnil Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green0\blue255;\red127\green0\blue85;\red63\green127\blue95;\red42\green0\blue255;\red0\green0\blue192;}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}}
{\*\generator Msftedit 5.41.15.1507;}\viewkind4\uc1\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\kerning2\ul\b\f0\fs28 Time Tracker Common 3.1 Component Specification\par
\pard\nowidctlpar\li720\sa120\ulnone\b0\f1\fs20\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\b\f0 1.\tab\fs24 Design\par
\pard\li720\sb120\sa120\qj\cf1\b0\fs20 The Time Tracker Common Custom component is part of the Time Tracker application. It provides for some basic common classes used by many of the components in TimeTracker. This component is simply a couple of classes. It encapsulates the persistence for payment types. It is packaged as a component in order to make it commonly available to many other components. \par
\i TimeTracker Bean \i0 This is the basis for every entity, which it persisted in to the database. It provides the common attributes, which are required when persisting. This is an abstract class that is to be used by many of the entities in Time Tracker.\f1\par
\f0 Payment Terms are used on an invoice to determine the payment agreement for that invoice. Clients and projects have default payment terms associated with their records. The payment term extends TimeTrackerBean and has the following attributes: id, description, and term, active\f1 .\par
\pard\nowidctlpar\li720\sb120\sa120\qj\cf0\f0 CommonManager provide an easy to use API that operates on PaymentTerms with many new methods added over the required ones. \f1\par
\pard\li720\sb120\sa120\qj\cf1\f0 The Time Tracker application will use this component to perform operations related to company and user authentication and authorization. \par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\cf0\b 1.1\tab Industry Standards \par
\pard\nowidctlpar\fi720\b0 JDBC, JavaBeans\f1\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b\f0 1.2\tab Design Patterns \par
\pard\nowidctlpar\li720\sb240\sa120\qj\tx720\tx1080\b0\f2\'a7\tab\b\f0 Strategy Pattern\b0  \endash  The PaymentTermDAO interface and their implementation implement this pattern, so that we can plug in to the other implementations easily.\par
\pard\nowidctlpar\li720\sb240\sa120\qj\f2\'a7\tab\b\f0 Data Access Object (DAO) Pattern \b0\endash  PaymentTermDAO implementations implement this pattern.\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 1.3\tab Required Algorithms\par
\pard\nowidctlpar\li720\tx720\tx1080\b0\f2\'a7\tab\f0 None.\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 1.4\tab Component Class Overview\par
\pard\li720\sb120\sa120\qj\cf1 Package com.topcoder.timetracker.common \par
\pard\nowidctlpar\li720\sb120\sa120\qj\cf0 TimeTrackerBean\b0\f1\par
\f0 Bean base class used to represent all entities of the Time Tracker Application, which it persisted in to the database. It contains all the properties which are common to these entities (id, creation date, modification date, creation user, modification user and changed flag). It is also Serializable to support network transfer, and state persistence.\f1\par
\b\f0 PaymentTerm\f1\par
\b0\f0 This bean represents the Payment Terms that are used on an invoice to determine the payment agreement for that invoice. Clients and projects have default payment terms associated with their records. The PaymentTerm extends TimeTrackerBean and has the following attributes: term, description, active.\par
\b CommonManager\b0 :\par
This interface defines the contract to manage the PaymentTerms in the persistence for Time Tracker Application. Contains operations like add, update, retrieve, delete.\par
\b SimpleCommonManager\b0 :\par
This class implements the CommonManager interface and it uses the PaymentTermDAO object to manage the PaymentTerms in the persistence, and it also has a configurable recentDays used in the retrieveRecentlyCreatedPaymentTerms and retrieveRecentlyModifiedPaymentTerms methods. Contains operations like add, update, retrieve, delete. \f1\par
\b\f0 PaymentTermDAO\f1\par
\b0\f0 This interface defines the necessary methods that a PaymentTerm DAO should support. Add, retrieve, update and delete methods are provided.\f1\par
\b\f0 Package com.topcoder.timetracker.common.persistence\f1\par
\f0 DatabasePaymentTermDAO\b0 :\par
Database implementation of the PaymentTermDAO interface. It is capable of persisting and retrieving PaymentTerm information from the database. Add, Retrieve, Update, Delete methods are provided. DB Connection is realized using DBConnectionFactory. An IDGenerator instance is used to generate ids for PaymentTerms that should be added in the persistence.\f1\par
\pard\nowidctlpar\li720\b\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\f0 1.5\tab Component Exception Definitions\par
\pard\nowidctlpar\li720 1. Standard Exceptions\par
\pard\nowidctlpar\b0\f1\par
\pard\nowidctlpar\qj\tab\b\f0 IllegalArgumentException\b0\f1\par
\pard\nowidctlpar\li720\qj\f0 This exception is thrown when the parameters passed to a function invalid. (e.g. empty string, null argument etc. ) Please refer to the method exception documentation for more details. Empty string means the length of string is zero after it is trimmed. \par
\pard\nowidctlpar\li720\f1\par
\b\f0 2. Custom Exceptions\par
\b0\f1\par
\pard\nowidctlpar\li720\sb120\sa120\qj\tx720\b\f0 CommonManagementException \par
\b0 This exception extends the BaseException and is thrown from the CommonManager interface. It is also the parent exception class for all the other custom exceptions in this design.\f1\par
\b\f0 CommonManagerConfigurationException \par
\b0 This exception extends the CommonMangementException, and it is thrown if the configured value is invalid, or any required configuration value is missing. It is also used to wrap the exceptions from ConfigManager and IDGenerationException.\par
\b PaymentTermDAOException\par
\b0 This exception is thrown when a problem occurs when performing operations with the PaymentTerms in the persistence. \f1\par
\b\f0 PaymentTermNotFoundException\b0\f1\par
\f0 This exception is thrown if the involved PaymentTerm was not found in the persistence. This is thrown during update/delete/retrieve methods.\b\f1\par
\f0 DuplicatePaymentTermException\f1\par
\b0\f0 This exception is thrown if the involved PaymentTerm was not found in the persistence. This is thrown during update/delete/retrieve methods.\f1\par
\pard\nowidctlpar\li720\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b\f0 1.6\tab Thread Safety\par
\pard\nowidctlpar\li720\sb120\sa120\qj\b0 All the classes (excerpt the beans) are immutable and therefore thread safe. \par
TimeTrackerBean is not used directly only by the classes that extend it. \f1\par
\f0 PaymentTerm is mutable, but multiple threads are advised to work with their own instances to ensure thread safety of the application. \par
External synchronization can be used to achieve the thread safety of this component.\f1\par
\i\f0 NOTE\i0 : All the TCS components used in this component are either thread-safe or used in thread-safe way, so they won\rquote t affect the thread-safety of this component.\par
\pard\nowidctlpar\f1\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\b\f0 2.\tab\fs24 Environment Requirements\par
\pard\keepn\nowidctlpar\s2\sl240\slmult0\tx0\fs20 2.1\tab Environment\par
\pard\nowidctlpar\li720\qj\tx720\tx1170\b0\f2\'a7\tab\f0 Development language: Java1.4\par
\pard\nowidctlpar\li720\qj\f2\'a7\tab\f0 Compile target: Java1.4, Java1.5\f1\par
\pard\nowidctlpar\li720\par
\pard\keepn\nowidctlpar\s2\sl240\slmult0\tx0\b\f0 2.2\tab TopCoder Software Components\par
\pard\nowidctlpar\b0\f1\par
\pard\nowidctlpar\fi-360\li1080\sb120\sa120\qj\tx1080\f2\'a7\tab\b\f0 Configuration Manager 2.1.5\b0  \endash  Configuration Manager is used to configure data in this component. \par
\pard\nowidctlpar\fi-360\li1080\sb120\sa120\qj\f2\'a7\tab\b\f0 DB Connection Factory 1.0\b0  \endash  It is used to get connection to database.\par
\f2\'a7\tab\b\f0 Object Factory 2.0.1\b0  \endash  It is used to create PaymentTermDAO and DBConnectionFactory. \par
\f2\'a7\tab\b\f0 Base Exception 1.0\b0  \endash  This is used as a base for all custom exceptions. \par
\f2\'a7\tab\b\f0 ID Generator 3.0\b0  \endash  is used to create ids for PaymentTerms when they are added to persistence.\par
\pard\nowidctlpar\f1\par
\pard\keepn\nowidctlpar\s2\sl240\slmult0\tx0\b\f0 2.3\tab Third Party Components\par
\pard\nowidctlpar\fi-360\li1080\tx1080\b0\f2\'a7\tab\f0 None.\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\b 3.\tab\fs24 Installation and Configuration\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\fs20 3.1\tab Package Name\par
\pard\nowidctlpar\fi720\sb120\sa120 com.topcoder.timetracker.common\f1\par
\f0 com.topcoder.timetracker.common.persistence\b0\f1\par
\pard\keepn\nowidctlpar\s2\fi-720\li720\sb120\sa60\sl240\slmult0\tx0\tx720\b\f0 3.2\tab Configuration Parameters\par
\pard\nowidctlpar\b0\f1\fs24\par
\pard\nowidctlpar\fi-10\li708\f0\fs20 For \b SimpleCommonManager\b0  class\par
\f1\par
\trowd\trgaph108\trleft-108\trrh269\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2340\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx5771\clvertalc\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8201\pard\intbl\nowidctlpar\qj\b\f0 Parameter\cell\pard\intbl\nowidctlpar Description\cell\pard\intbl\nowidctlpar\qj Values\cell\row\trowd\trgaph108\trleft-108\trrh269\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2340\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx5771\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8201\pard\intbl\nowidctlpar\fs18 of_namespace\cell\b0 The namespace used to create ObjectFactory object. \b Required\b0 . \b\f1\cell\b0\f0 Must be non-empty string. \cell\row\trowd\trgaph108\trleft-108\trrh269\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2340\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx5771\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8201\pard\intbl\nowidctlpar\b payment_term_dao_key\cell\b0 The key used to create PaymentTermDAO object from ObjectFactory. \b Required\b0 . \cell Must be non-empty string. \cell\row\trowd\trgaph108\trleft-108\trrh269\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2340\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx5771\clvertalc\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8201\pard\intbl\nowidctlpar\b recent_days\cell\b0 Represents the number of recent days used to get the recently unblocked users. \b Required\b0 . \cell Must be positive int value or -1.\cell\row\pard\nowidctlpar\fi200\li720\f1\fs20\par
\par
\pard\nowidctlpar\fi-10\li720\f0 For \b DatabasePaymentTermDAO\b0  class\par
\f1\par
\trowd\trgaph108\trleft-108\trrh269\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2340\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx5771\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8201\pard\intbl\nowidctlpar\qj\b\f0 Parameter\cell\pard\intbl\nowidctlpar Description\cell\pard\intbl\nowidctlpar\qj Values\cell\row\trowd\trgaph108\trleft-108\trrh269\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2340\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx5771\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8201\pard\intbl\nowidctlpar\fs18 of_namespace\cell\b0 The namespace used to create ObjectFactory object. \b Required\b0 . \b\f1\cell\b0\f0 Must be non-empty string. \cell\row\trowd\trgaph108\trleft-108\trrh269\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2340\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx5771\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8201\pard\intbl\nowidctlpar\b db_connection_factory_key\cell\b0 The key used to create DBConnectionFactory object from ObjectFactory. \b Required\b0 . \cell Must be non-empty string. \cell\row\trowd\trgaph108\trleft-108\trrh269\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2340\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx5771\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8201\pard\intbl\nowidctlpar\b connection_name\cell\b0 The connection name used to obtain db connection from DBConnectionFactory. \b Required\b0 . \cell Must be non-empty string. \cell\row\trowd\trgaph108\trleft-108\trrh269\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2340\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx5771\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8201\pard\intbl\nowidctlpar\b id_generator_name\cell\b0 This property contains the name that will be used by IDGeneratorFactory. \b Required\b0\f1 .\cell\f0 Must be non-empty string.\cell\row\pard\nowidctlpar\fi200\li720\f1\fs20\par
\pard\nowidctlpar\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b\f0 3.3\tab Dependencies Configuration\par
\pard\nowidctlpar\fi-360\li1080\tx1080\b0\f2\'a7\tab\f0 None\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\b 4.\tab\fs24 Usage Notes\par
\pard\nowidctlpar\b0\f1\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b\f0\fs20 4.1\tab Required steps to test the component\par
\pard\nowidctlpar\fi-360\li1080\sa120\tx1080\b0\f2\'a7\tab\f0 Extract the component distribution.\par
\pard\nowidctlpar\fi-360\li1080\tx1080\f2\'a7\tab\f0 Follow {\field{\*\fldinst{HYPERLINK "\\\\l "_Dependencies_Configuration""}}{\fldrslt{\cf2\ul Dependencies Configuration}}}\cf0\ulnone\f1\fs20 .\f0  See build.xml for details.\f1\par
\pard\nowidctlpar\fi-360\li1080\f2\'a7\tab\f0 Refer to /test_files/UnitTests.readme\f1\par
\pard\nowidctlpar\fi-360\li1080\sa120\tx1080\f2\'a7\tab\f0 Execute \lquote ant test\rquote  within the directory that the distribution was extracted to.\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 4.2\tab Required steps to use the component\par
\pard\nowidctlpar\fi-360\li1080\tx1080\b0\f2\'a7\tab\f0 None.\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 4.3\tab Demo\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\b0\f1\fs18\tab\tab\f0      \par
\pard\nowidctlpar\fi480\cf3\b\f3\fs20 private\cf1\b0  PaymentTerm getPaymentTermToAdd() \{\par
    \par
\pard\nowidctlpar\cf4\kerning0\f4          \f5 //No need to set creation date, modification date, modification user\cf0\par
\cf1         \cf4 //if you're planning to add payment term through SimpleCommonManager\cf0\kerning2\f3\par
\pard\nowidctlpar\fi480\cf1     PaymentTerm paymentTerm = \cf3\b new\cf1\b0  PaymentTerm();\cf0\par
\pard\nowidctlpar\cf1         paymentTerm.setCreationUser(\cf5 "creation_user"\cf1 );\cf0\par
\cf1         paymentTerm.setDescription(\cf5 "description"\cf1 );\cf0\par
\cf1         paymentTerm.setActive(\cf3\b true\cf1\b0 );\cf0\par
\cf1         paymentTerm.setTerm(2);\cf0\par
\cf1         \cf3\b return\cf1\b0  paymentTerm;\cf0\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\cf1     \}\par
\pard\nowidctlpar\cf0\f0\fs24        \f1\par
\cf1\f3\fs20         PaymentTerm first = \cf3\b this\cf1\b0 .getPaymentTermToAdd();\cf0\par
\cf1         PaymentTerm second = \cf3\b this\cf1\b0 .getPaymentTermToAdd();\cf0\par
\cf1         PaymentTerm third = \cf3\b this\cf1\b0 .getPaymentTermToAdd();\cf0\par
\par
\cf1         PaymentTerm requiredPaymentTerm;\cf0\par
\cf1         PaymentTerm[] requiredPaymentTerms;\cf0\par
\par
\cf1         SimpleCommonManager scManager = \cf3\b new\cf1\b0  SimpleCommonManager();\cf0\par
\cf1         \cf4 // 1. Add a PaymentTerm to persistence\par
        \cf1 scManager.deleteAllPaymentTerms();\cf0\par
\cf1         scManager.addPaymentTerm(first);\cf0\par
\cf1         scManager.addPaymentTerm(second);\par
\cf0\par
\cf1         \cf4\kerning0\f5 //If you're planning to use DAO to add payment term directly\cf0\par
\cf1         \cf4 //ensure the creation date is not null and equals modification date, and not exceeds current date\cf0\par
\cf1         \cf4 //and ensure the modification user is set with a valid value\cf0\par
\cf1         Date currentDate = \cf3\b new\cf1\b0  Date();\cf0\par
\cf1         third.setCreationDate(currentDate);\cf0\par
\cf1         third.setModificationDate(currentDate);\cf0\par
\cf1         third.setModificationUser(\cf5 "modificationUser"\cf1 );\cf0\par
\cf1         dao.addPaymentTerm(third);\cf0\kerning2\f3\par
\par
\cf1         \cf3\b long\cf1\b0  givenId = second.getId();\cf0\par
\cf1         \cf3\b long\cf1\b0 [] ids = \{first.getId(), second.getId(), third.getId()\};\cf0\par
\par
\cf1         \cf4 // 2. Modify a PaymentTerm\cf0\par
\cf1         second.setTerm(1);\cf0\par
\cf1         second.setActive(\cf3\b false\cf1\b0 );\cf0\par
\cf1         second.setDescription(\cf5 "Term changes to 1 day"\cf1 );\cf0\par
\cf1         second.setModificationUser(\cf5 "me"\cf1 );\cf0\par
\par
\cf1         \cf4 // 3. Update a PaymentTerm\cf0\par
\cf1         scManager.updatePaymentTerm(second);\par
\cf0\par
\cf4\kerning0\f4          \f5 //If you're planning to use DAO to update payment term directly\cf0\par
\cf1         \cf4 //ensure the creation date < modification date, and modification date does not exceeds current date\cf0\par
\cf1         third.setTerm(1);\cf0\par
\cf1         third.setActive(\cf3\b false\cf1\b0 );\cf0\par
\cf1         third.setDescription(\cf5 "Term changes to 1 day"\cf1 );\cf0\par
\cf1         third.setModificationUser(\cf5 "me"\cf1 );\cf0\par
\cf1         currentDate = \cf3\b new\cf1\b0  Date();\cf0\par
\cf1         third.setCreationDate(\cf3\b new\cf1\b0  Date(currentDate.getTime() - 1));\cf0\par
\cf1         third.setModificationDate(currentDate);\cf0\par
\cf1         dao.updatePaymentTerm(third);\par
\cf0\kerning2\f3\par
\cf1         \cf4 // 4. Retrieve a PaymentTerm using its id\cf0\par
\cf1         \cf4 // 4.1 Retrieve a updated PaymentTerm\cf0\par
\cf1         requiredPaymentTerm = scManager.retrievePaymentTerm(givenId);\cf0\par
\cf1         \cf4 // 4.2 Retrieve a non-exist PaymentTerm\cf0\par
\cf1         requiredPaymentTerm = scManager.retrievePaymentTerm(10);\cf0\par
\par
\cf1         \cf4 // 5. Retrieve some PaymentTerms using their ids\cf0\par
\cf1         requiredPaymentTerms = scManager.retrievePaymentTerms(ids);\cf0\par
\par
\cf1         \cf4 // 6. Retrieve all active PaymentTerms\cf0\par
\cf1         requiredPaymentTerms = scManager.retrieveActivePaymentTerms();\cf0\par
\par
\cf1         \cf4 // 7. Retrieve recently created PaymentTerms (with configured recent number of days)\cf0\par
\cf1         requiredPaymentTerms = scManager.retrieveRecentlyCreatedPaymentTerms();\cf0\par
\par
\cf1         \cf4 // 8. Retrieve recently created PaymentTerms (with specified number of days)\cf0\par
\cf1         requiredPaymentTerms = scManager.retrieveRecentlyCreatedPaymentTerms(Integer.\cf6\i MAX_VALUE\cf1\i0 );\cf0\par
\par
\cf1         \cf4 // 9. Retrieve recently modified PaymentTerms (with configured recent number of days)\cf0\par
\cf1         requiredPaymentTerms = scManager.retrieveRecentlyModifiedPaymentTerms();\cf0\par
\par
\cf1         \cf4 // 10. Retrieve recently modified PaymentTerms (with specified number of days)\cf0\par
\cf1         requiredPaymentTerms = scManager.retrieveRecentlyModifiedPaymentTerms(Integer.\cf6\i MAX_VALUE\cf1\i0 );\cf0\par
\par
\cf1         \cf4 // 11. Retrieve all PaymentTerms\cf0\par
\cf1         requiredPaymentTerms = scManager.retrieveAllPaymentTerms();\cf0\par
\par
\cf1         \cf4 // 12. Delete a non-exist PaymentTerm\cf0\par
\cf1         \cf3\b try\cf1\b0  \{\cf0\par
\cf1             scManager.deletePaymentTerm(10);\cf0\par
\cf1             \i fail\i0 (\cf5 "PaymentTermNotFoundException expected"\cf1 );\cf0\par
\cf1         \} \cf3\b catch\cf1\b0  (PaymentTermNotFoundException e) \{\cf0\par
\cf1             \i assertEquals\i0 (10, e.getProblemPaymentTermId());\cf0\par
\cf1         \}\cf0\par
\par
\cf1         \cf4 // 13. Delete PaymentTerms corresponding to the given ids\cf0\par
\cf1         scManager.deletePaymentTerms(ids);\cf0\par
\cf1         \cf0\par
\cf1         \cf4 // 14. Delete all PaymentTerms from persistence\cf0\par
\cf1         scManager.deleteAllPaymentTerms();\par
\pard\nowidctlpar\fi1000 requiredPaymentTerms = scManager.retrieveAllPaymentTerms();\cf0\par
\pard\nowidctlpar\f1\fs24\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\b\f0 5.\tab Future Enhancements\par
\pard\cf1\b0\f1\par
\pard\li720\qj\f0\fs20 Other database systems maybe plugged in for some client environments. Multiple user stores may be used for the same client environment. \f1\par
}
 