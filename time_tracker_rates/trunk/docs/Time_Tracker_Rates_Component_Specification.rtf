{\rtf1\ansi\ansicpg1252\deff0\deflang1033\deflangfe1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Arial;}{\f1\fmodern\fprq1\fcharset0 Courier New;}{\f2\froman\fprq2\fcharset0 Times New Roman;}{\f3\froman\fprq2\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;\red0\green0\blue0;\red255\green0\blue0;\red255\green0\blue255;\red0\green128\blue0;\red0\green255\blue255;\red224\green224\blue224;}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}{\s3 heading 3;}}
{\*\generator Msftedit 5.41.15.1507;}\viewkind4\uc1\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx720\cf1\ul\b\f0\fs28 Time Tracker Rates 3.2 Component Specification\par
\pard\li720\sa120\cf0\ulnone\b0\fs20\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\b\fs24 1.\tab Design\par
\pard\li720\sa120\cf2\b0\fs20 Within the Time Tracker application, \ldblquote Rates\rdblquote  are stored to assist in the calculation of values used by the application. As the data for multiple companies is stored by the application, each \ldblquote Rate\rdblquote  is split into two conceptual halves: Firstly, a common rate, which is simply a description and an ID - e.g. \ldblquote Overtime per hour\rdblquote . Then, each rate is combined with a company, storing also the value which the rate takes - e.g. \ldblquote Company XYZ Overtime per hour = $50\rdblquote . Different companies then can all share the same rate description, but have different values to each other.\par
This component manages the \ldblquote Rate\rdblquote  objects described above - that is, rate descriptions always coupled with company identification. These Rate objects can be added, updated and removed from a Rate Manager, as well as retrieved by Company Id as well as other possible criteria.\par
The Rate Manager itself is backed by a pluggable persistence layer, to make sure the Rate information is stored between application runs - the type of persistence is set at configuration, and a default Informix version is provided with this component.\par
Finally, whenever insert/update/delete operations are performed (either on single or multiple rates), the ability is provided to also persist audit records detailing each change to the database.\par
\cf0 Please note that changes to version 3.1 will be shown in \cf3\b red\cf0\b0  (new entries) and \cf1\b blue\cf0\b0  (modification of existing entries).\par
\cf3 In version 3.2 we will add number of enhancements/clarification to the 3.1 version\par
\pard\fi-360\li1440\sa120\tx1440 1.\tab We will create a mid-tier layer for transactional control, which will use the stateless Session Bean technology from J2EE. The basic premise is that the RateManager will now act as a delegate, which will talk to the EJB (which is controlled/observed by the J2EE container), which will in turn talk to the DAO\b . The important thing to remember here is that the EJB will participate in transactions that are delineated and controlled by the container\b0 .\cf2\par
\pard\fi-360\li1440\sa120\cf3 2.\tab It was also decided that usage of Configuration Manager is safe if properly initialized on the server (since it is a singleton) since at that time (when the EJB is created and used in the container) all the namespace data would have been loaded into memory.\cf2\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\cf0\b 1.1\tab Design Patterns \par
\pard\li720\cf2\b0\i Delegate + Strategy:\i0  The Audit Manager class loads a pluggable persistence layer, then delegates all of the methods to this persistence strategy.\par
\cf3 The \b Business\b0  \b Delegate\b0  pattern (J2EE pattern) is used by the RateManager to delegate all actions to the EJB (which then ferries that to the proper DAO)\par
\b Dao\b0  pattern is used to separate persistence implementation/logic and the controller (manager/ejb)\cf2\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\cf0\b 1.2\tab Industry Standards \par
\pard\nowidctlpar\li720\sa120\sl240\slmult0\cf2\b0 SQL is used by the provided Informix persistence layer to persist information to the database connected.\par
\pard\fi720\sa120\cf3 We also use JDBC, J2EE, and EJB\cf0\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 1.3\tab Required Algorithms\par
\pard\nowidctlpar\li720\sa120\sl240\slmult0\cf2\b0 Most complex algorithms within the component are displayed on sequence diagrams - the most involved - add Rates (update and delete are similar) - is also shown below:\line\f1 addRates(rates):\line     Obtain a connection to the database.\line     Prepare an SQL_INSERT_RATE statement\line     For each rate in rates:    \line         Insert the rate information parameters\line         statement.addBatch();\line     statement.executeBatch();\line     For each result:\line         If the update failed: Log at ERROR level\line         If the update succeeded:\line             auditAction(null\super\b *\nosupersub\b0 , rate, \ldblquote INSERT\rdblquote ):\line                 create Audit Header\line                 insert header information (see appendix)\line                 for each changed rate detail, create Audit Detail\line                 insert audit into the action\par
\pard\nowidctlpar\li720\sl240\slmult0\line\super\b\i *\nosupersub\b0 If this is an update or delete statement, then\line retrieveRate(rateid, companyid, false) should first be called\line and the result passed here as the old rate information. See appendix\i0\par
\pard\sa120\cf0\f0\tab\par
\pard\keepn\nowidctlpar\s3\fi720\sb120\sa60\sl240\slmult0\tx0\cf3\i 1.3.1\tab Transactional Considerations\par
\pard\li720\i0 All transactional control is now in the J2EE container, which means that we do not control the transaction explicitly through the connection (we cannot actually as this is forbidden) What we do is we rollback transactions when there is an issue through the \f1 setRollbackOnly\f0 () method is \f1 SesssionContext\f0  which then signals to the container to control the transaction properly.\par
\pard\li720\sa120 There is an additional aspect, which needs to be considered: When we are dealing with AuditManager we only use the manager to create audits but we do not use it to delete audits. Again here we let the container UNDO any audit issues.\cf0\tab\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 1.4\tab Component Class Overview: \par
\pard\fi720 RateManager:\par
\pard\li720\b0 A RateManager is the entry point into the storage and retrieval of rates within the system - it provides the basic CRUD methods, for both single and multiple Rates. Each method within is delegated to a pluggable persistence layer, the type of which is determined via configuration. \par
\pard\fi720\li720\line\b Rate:\par
\pard\li720\b0 Bean class that stores information about a Rate within a Time Tracker application. This extends the TimeTrackerBean base, so contains the common ID as well as creation and modification information. In addition to this, information is stored containing the description of the rate, the value the rate takes, as well as a company the rate is for. As it is a Bean class, it has a no-argument constructor and all members have appropriately named get/set methods. In addition, no parameter checking is performed; the validation of parameters is left to the web application. \par
\pard\fi720\par
\b RatePersistence << interface >>:\par
\pard\li720\b0 Interface defining the necessary methods for any pluggable persistence layer for use with the Rates component. Provided are four basic CRUD operations for batches of rates (add/update/delete/retrieve Rates) as well as two additional methods that allow single rates to be obtained, identified by company and ID or description. It is up to each implementation to define how much information it loads as well as when it throws exceptions, please read any implementing class's documentation for more details. Each implementing class should be able to be constructed by using the Object Factory component. In addition, it is assumed that each implementing class will handle its own thread safety.\par
\pard\fi720\par
\b InformixRatePersistence:\par
\b0 The InformixRatePersistence class is the default persistence plug-in for this component - \par
it stores the rate information inside Informix tables (the ERD has been provided).\par
Implementing the RatePersistence interface, it provides the basic CRUD operations. \par
In addition, two private utility methods have been provided, to help load rates from \par
a database row, as well as to auditing any insert/delete/update action.\par
\par
\pard\li720\cf3\b LocalRate\par
\b0 This is a simple local home interface used to create a local bean for the rate persistence delegation actions.\par
\par
\b LocalHomeRate\par
\b0 This is a local interface for the contract for CRUD operations on rate data. This interface will be used in implementing a stateless session ejb with container manager transactions.\par
\par
\b RateEjb\par
\b0 This is an implementation EJB of the LocalRate interface. This is nothing more than a delegating wrapper around the RatePersistence instance but with an interception of exceptions from the dao and with subsequent transaction control (rollback only) when an issue has been detected/signaled.\par
In other words this acts like a container based transactional control plugin. This is a stateless session bean with a container manager transaction control. This ejb will join any started transactions.\cf0\par
\pard\fi720\li720\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 1.5\tab Component Exception Definitions\par
\pard\b0\f2\fs24\tab\b\f0\fs20 RatesManagerException:\par
\pard\li720\b0 Exception used by the Rates component whenever there is a problem within a RateManager instance. For example, if its pluggable persistence encounters an error, that will be wrapped and thrown as a RateManager exception. Two constructors are provided that both take a reason why the error occurs, and one taking the error which caused this to be thrown.\par
\pard\fi720\b\par
RatesPersistenceException:\par
\pard\li720\b0 Exception used by the Rates component whenever there is a problem within the pluggable persistence layer. Any class implementing the RatePersistence interface may throw this if errors are encountered while persisting information, for example caused by SQL or IO exceptions.\par
\pard\fi720\b\par
RatesConfigurationException:\par
\pard\li720\b0 Exception used by the Rates component whenever there is a problem while initializing all the objects based on configuration parameters. For example, if required parameters are missing or invalid, then this exception is thrown. It is also recommended any implementation of RatePersistence throws this exception.\par
\par
\cf3\b\f2\fs24 javax.ejb.CreateException: \b0 if there was an issue with creation of an ejb.\cf0\f0\fs20\par
\pard\fi720\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 1.6\tab Thread Safety\par
\pard\li720\cf2\b0 The Java bean within the component - Rate - is not threadsafe - there is no protection against concurrent read/writes of the members. Due to its intended usage, it is assumed that it will be used in a thread-safe manner; synchronization is not performed in the interest of speed and simplicity.\par
All implementations of the persistence interface should handle their thread safety, and the provided Informix version does this by having immutable members (log and connection name) read on construction, and not modifying the remaining members - the interactions performed on the database utilize a PreparedStatement\rquote s batch transactions, any failures are logged.\line The remaining class - RateManager - is thread safe as it delegates all method calls to its persistence plug-in, which is assumed to be thread safe.\par
\par
\cf3 The newly introduced transaction control (version 3.2) via EJB Stateless Session Bean (container managed) makes this a more stable implementation since now we do not have to worry about what other managers (who might be working on same data) are doing. The actual control will be done based on transaction participation, which will be controlled by the container. Thus we do not have to worry about this aspect any more.\cf2\f2\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\cf0\b\f0\fs24 2.\tab Environment Requirements\tab\tab\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\fs20 2.1\tab Environment\par
\pard\fi-360\li1080\tx1080\b0\f3\'b7\tab\f0 Java 1.4 for development\par
\pard\fi-360\li1080\f3\'b7\tab\f0 Java 1.4 and 1.5 for compilation\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 2.2\tab TopCoder Software Components\par
\pard\fi-360\li1080\sa120\tx1080\b0\f3\'b7\tab\f0 Base Exception 1.0 for the Base Exception superclass of custom exceptions.\par
\pard\fi-360\li1080\sa120\f3\'b7\tab\f0 Configuration Manager 2.1.5 for reading parameters from configuration.\par
\f3\'b7\tab\f0 DB Connection Factory 1.0 for configurable Connection loading.\par
\f3\'b7\tab\f0 Logging Wrapper 1.2 for access to configurable Log instances.\par
\f3\'b7\tab\f0 Object Factory 2.0.1 for loading of the pluggable persistence layer.\par
\cf1\f3\'b7\tab\f0 Time Tracker Audit 3.2 for access to the audit manager \endash  Here we assume that this version will be available for this component since the transaction control must be done for all managers in the same way.\par
\f3\'b7\tab\f0 Time Tracker Company 3.2 for access to company instances. Here we assume that this version will be available for this component since the transaction control must be done for all managers in the same way.\par
\pard\li720\sa120\cf0\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 2.3\tab Third Party Components\par
\pard\li720\b0 None\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\b\fs24 3.\tab Installation and Configuration\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\fs20 3.1\tab Package Name\par
\pard\li720\b0 com.topcoder.timetracker.rates\line com.topcoder.timetracker.rates.persistence\par
com.topcoder.timetracker.rates.ejb\par
\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 3.2\tab Configuration Parameters\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\tx0\cf1\b0\i 3.2.1\tab Rate Manager configuration properties\par
\pard\cf0\i0\f2\fs24\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\b\f0\fs20 Parameter\cell Description\cell Values\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120\b0\fs16 objectFactoryNamespace\line (required)\cell Namespace where the object factory\rquote s configuration is stored.\cell Valid Object Factory namespace.\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120 persistenceObject\line (required)\cell Object factory key used to load the AuditPersistence implementation.\cell Valid Object Factory persistence key.\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120 persistenceNamespace/\line\i connectionName\line\i0 (optional)\cell Name of connection to acquire from DB Connection Factory - if not provided, a default connection is used.\cell Valid Connection Factory connection name.\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120 persistenceNamespace/\line\i logName\line\i0 (optional)\cell\cf4 Name of log to acquire from the Log Factory - if not provided, a default log is used.\cf0\cell Valid Log Factory log name.\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120\cf4 objectFactoryNamespace\cf0\line (required)\cell Namespace where the object factory\rquote s configuration is stored.\cell Valid Object Factory namespace.\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120 persistenceNamespace/\line\i connectionFactoryKey \i0 (required)\cell Object factory key used to load the Connection factory implementation within the persistence layer.\cell Valid Object Factory persistence key.\cell\row\trowd\trgaph108\trleft-108\trrh615\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120 persistenceNamespace/\line\i auditManagerKey \line\i0 (required)\cell Object factory key used to load the Audit manager implementation within the persistence layer.\cell Valid Object Factory persistence key.\cell\row\trowd\trgaph108\trleft-108\trrh630\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120\cf3 rate_local_ejb_reference_name\cell\pard\intbl This is an actual JNDI property name as used in the deployment descriptor for the EJB so that we can obtain a JNDI initial context. This is basically the value that we would see in the deployment descriptor by which the bean will be bound to JNDI name.\par
\b\i Required.\cell\pard\intbl\sa120\b0\i0\ldblquote rate.rateLocalHome\rdblquote\cell\row\pard\li720\sa120\cf0\fs20 A sampleConfig.xml file has been provided with demonstrations of each parameter, located at the RateManager\rquote s default namespace.\par
\pard\keepn\nowidctlpar\s3\sb120\sa60\sl240\slmult0\tx0\cf3\i 3.2.2\tab EJB Configuration Entries (via deployment descriptor)\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\b\i0 Parameter\cell Description\cell Values\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120\b0 of_namespace\cell\pard\intbl An optional Object Factory namespace used to specify the namespace used within Object Factory configuration. Default namespace is assumed if not provided.\par
\b\i Optional.\cell\pard\intbl\sa120\b0\i0 of_namespace\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx2952\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx6768\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx8916\pard\intbl\sa120 of_rate_persistence_key\cell\pard\intbl This is an optional (by default we assume that the InformixRatePersistence will be used if nothing is specified) Object Factory key, which would be used to obtain an instance of the RatePersistence.\par
\b\i Optional.\cell\pard\intbl\sa120\b0\i0 of_rate_persistence_key\cell\row\pard\li720\sa120\cf0\par
\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 3.3\tab Dependencies Configuration\par
\pard\nowidctlpar\li720\sa120\sl240\slmult0\cf2\b0 Many components listed in 2.2 will require some form of configuration to allow the configuration of this component to be used - e.g. connections and logs set up. Please see their component specification for more details.\par
\pard\li720\cf3 We also assume that the EJB has been properly configured which would include:\par
\pard\fi-360\li1440\tx1440\f3\'b7\tab\f0 Proper EJB deployment descriptor creation\par
\pard\fi-360\li2160\tx2160\f1 o\tab\f0 We need to ensure that the proper configuration name for DAO has been included so that it can be fetched through the InitialContext in the EJB\cf0\f2\fs24\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\b\f0 4.\tab Usage Notes\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\fs20 4.1\tab Required steps to test the component\par
\pard\fi-360\li1080\sa120\tx1080\b0\f3\'b7\tab\f0 Extract the component distribution.\par
\pard\fi-360\li1080\sa120\f3\'b7\tab\f0 Follow Dependencies Configuration.\par
\f3\'b7\tab\f0 Execute \lquote ant test\rquote  within the directory that the distribution was extracted to.\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\b 4.2\tab Required steps to use the component\par
\pard\nowidctlpar\li720\sa120\sl240\slmult0\cf2\b0 See below for example usage:\par
\pard\keepn\nowidctlpar\s2\sb120\sa60\sl240\slmult0\tx0\cf0\b 4.3\tab Demo\par
\pard\cf3\b0 Note that for version 3.2 there is no change to the demo since the user is not aware of the changes.\par
\par
\pard\li720\cf5\b\f1\fs18 // Create a new manager, using default namespace\cf0\b0\line RateManager rateman = null;\line try\{ rateman = new RateManager(); \} \line catch(RateConfigurationException rce)\{ \line     return 0; \cf5\b // hopefully shouldn\rquote t occur\cf0\b0\line\}\par
\par
\cf5\b // Create a new rate for company #3, type #21\cf0\b0\line Company myCompany = ...; \cf5\b // retrieve from application\cf0\b0\line myCompany.setId(3); \line\line\cf5\b // Note - no description set, null is default.\cf0\b0\line Rate myRate = new Rate();\line myRate.setId(21);\line myRate.setCompany(myCompany);\line myRate.setRate(50.0);\line\line\cf5\b // Persist:\cf0\b0\line try\{ rateman.addRate(myRate, true); \} \cf5\b // fails, so no audit\cf0\b0\line catch(RateManagerException rme)\{\line\cf5\b     // this should be thrown, as null descriptions \line     // wont be allowed using the default Informix persistence\cf0\b0\line     System.out.println(\ldblquote Must have non-null description!\rdblquote );\line\}\line\line\cf5\b // Add description and persist within batch\cf0\b0\line myRate.setDescription(\ldblquote Overtime per hour\rdblquote );\line Rate rates[] = new Rate[1]; rates[0] = myRate;\line rateman.addRates(rates, true); \cf5\b // 1 Audit header added\line\cf0\b0\line\cf5\b // Double the rates to please the staff, persist the change\cf0\b0\line myRate.setRate( myRate.getRate() * 2.0 );\line rateman.updateRate(myRate, false); \cf5\b // Don\rquote t audit\cf0\b0\line\line\cf5\b // retrieve the rate:\cf0\b0\line Rate[] companyRates = rateman.retrieveRates(myCompany.getId());\line assert(companyRates.length == 1 && companyRates[0].getId() == 21);\line\line\cf5\b // remove the rate (in batch) then try to retrieve it:\cf0\b0\line rateman.removeRates(rates, true); \cf5\b // 1 Audit header added\cf0\b0\line assert(rateman.retrieveRate(21, 3) == null); \cf5\b // no match, null returned.\cf0\b0\line assert(rateman.retrieveRate(\ldblquote Overtime per hour\rdblquote , 3) == null); \cf5\b //  \lquote\rquote\cf0\b0  \line\par
\cf5\b // Note - in total, 2 new Audit header records should be added\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\cf0\f0\fs24 5.\tab Future Enhancements\par
\pard\li720\cf2\b0\fs20 One possible enhancement would be to provide a better range of search options - for example, taking a generic search filter and each matching rate is returned.\line Another addition might be to allow rates to have company instances loaded, rather than null being used.\line Finally, an enhancement that may be useful later is a different persistence plug-in, for example using XML files or a different database provider.\par
\par
\pard\keepn\nowidctlpar\s1\sb120\sa60\sl240\slmult0\tx360\cf0\b\fs24 6.\tab\page Appendix:\par
\pard\li720\b0\fs20 The Entity Relationship Diagram (ERD) for the Rates tables (rate and comp_rate) has been provided with the submission. Each Rate member should map simply to a column within the database.\par
\cf2\line For the Audit Headers, the following information is used \i (constants in italics)\i0\par
\par
\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clcbpat7\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw30\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw30\brdrs \cellx4320\clcbpat7\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw30\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw30\brdrs \cellx8748\pard\intbl\qc\b Member\cell Column\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw30\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw30\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl\b0\f1\fs18 id\cell\i Not used - audit manager provides this\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl\i0 entityId\cell Rate.getId()\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl creationDate\cell Rate.getModificationDate()\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl tableName\cell\i\ldblquote comp_rate\rdblquote\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl\i0 companyId\cell Rate.getCompany().getId()\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl creationUser\cell Rate.getModificationUser()\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl actionType\cell\i\ldblquote INSERT\rdblquote /\rdblquote UPDATE\rdblquote /\rdblquote DELETE\rdblquote\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl\i0 clientId\cell\i 0\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl\i0 projectId\cell\i 0\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw15\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw15\brdrs \cellx8748\pard\intbl\i0 resourceId\cell\i 0\cell\row\trowd\trgaph108\trleft-108\trbrdrl\brdrs\brdrw30 \trbrdrt\brdrs\brdrw30 \trbrdrr\brdrs\brdrw15 \trbrdrb\brdrs\brdrw30 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw30\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw15\brdrs\clbrdrb\brdrw30\brdrs \cellx4320\clbrdrl\brdrw15\brdrs\clbrdrt\brdrw15\brdrs\clbrdrr\brdrw30\brdrs\clbrdrb\brdrw30\brdrs \cellx8748\pard\intbl\i0 applicationArea\cell\i ApplicationArea.TT_CONFIGURATION\cell\row\pard\li720\cf3\i0\f2\fs24\line\cf2\f0\fs20 And for Audit Details, the relevant old/new values are obtained from the previous/new Rate values, with the column name taken from the appropriate ERD column.\par
\par
The audit itself is added with code similar to:\line\cf0\f1\fs18 void auditAction(prev, curr, action)\{\line     AuditHeader header = new AuditHeader();\line     header.setEntityId(curr.getId());\line     header.setCreationDate(curr.getModificationDate());\line\cf5\b     // ... etc, see above for uses\line\line     // for each column that has changed:\cf0\b0\line     ArrayList details = new ArrayList();\line\line     if(prev == null || curr == null || prev.getRate() != curr.getRate())\{\line         AuditDetail detail = new AuditDetail();\line         detail.setColumnName(\ldblquote rate\rdblquote );\line         detail.setOldValue(prev == null ? null : \ldblquote\rdblquote  + prev.getRate());\line         detail.setNewValue(curr == null ? null : \ldblquote\rdblquote  + curr.getRate()); \line         details.add(detail);\line     \}\line\line     if(prev == null || curr == null || prev.getRate() != curr.getRate())\{\line         AuditDetail detail = new AuditDetail();\line         detail.setColumnName(\ldblquote description\rdblquote );\line         detail.setOldValue(prev == null ? null : prev.getDescription());\line         detail.setNewValue(curr == null ? null : curr.getDescription()); \line         details.add(detail);\line     \}\line     \cf5\b // etc. for each column in the comp_rate table.\cf0\b0\line\line     header.setDetails( details as an AuditDetail[] );\line     auditManager.createAuditRecord(header); \cf5\b // send record for auditing.\cf2\b0\f0\fs20\par
}
 