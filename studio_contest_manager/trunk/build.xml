<?xml version="1.0"?>

<project name="Studio Contest Manager" default="dist" basedir=".">

    <property file="e:/topcoder_global.properties"/>

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="Studio_Contest_Manager"/>
    <property name="package" value="com.topcoder.service.studio.contest" />
    <property name="packagedir" value="com/topcoder/service/studio/contest" />
    <property name="distfilename" value="studio_contest_manager" />
    <property name="component_version" value="1.1.0" />
    <property name="component_path" value="${distfilename}/${component_version}" />

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src" />
    <property name="tcs_libdir" value="lib/tcs" />
    <property name="ext_libdir" value="lib/jboss/4.2" />
    <property name="jar_tcs_libdir" value="lib/tcs" />
    <property name="jar_ext_libdir" value="lib" />
    <property name="docsdir" value="docs" />
    <property name="configdir" value="conf" />
    <property name="testlogdir" value="log" />
    <property name="testfiles" value="test_files" />
    <property name="javadocsdir" value="${docsdir}/javadocs" />
    <property name="webdir" value="web" />
    <property name="reports" value="reports" />

    <property name="javasrc" value="${srcdir}/java" />
    <property name="javamain" value="${javasrc}/main" />
    <property name="javatests" value="${javasrc}/tests" />

    <property name="builddir" value="build" />
    <property name="build_classdir" value="${builddir}/classes" />
    <property name="build_testclassdir" value="${builddir}/testClasses" />
    <property name="build_targetclassdir" value="${builddir}/targetclasses" />
    <property name="build_distdir" value="${builddir}/dist" />
    <property name="build_docsdir" value="${builddir}/${docsdir}" />
    <property name="build_javadocsdir" value="${builddir}/${javadocsdir}" />
    <property name="build_webdir" value="${builddir}/${webdir}" />
    <property name="build_lib" value="${builddir}/lib" />
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}" />

    <!-- EXECUTION TAGS -->
    <property name="debug" value="off" />
    <property name="verbose" value="no" />

    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_conf" value="${build_tcsdistdir}/${configdir}" />
    <property name="dist_lib" value="${build_distdir}/lib/tcs" />
    <property name="dist_src" value="${build_tcsdistdir}/${srcdir}" />
    <property name="dist_docs" value="${build_tcsdistdir}/${docsdir}" />
    <property name="dist_javadocs" value="${build_tcsdistdir}/${javadocsdir}" />
    <property name="dist_testfiles" value="${build_tcsdistdir}/${testfiles}" />

    <!-- NAME FOR .JAR AND .WAR FILES -->
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="javadoc.jar" value="javadocs.jar"/>
    <property name="component.tests.jar" value="${dist_lib}/${distfilename}_tests.jar"/>
    <property name="component.war" value="${dist_examples}/${distfilename}.war"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>
    <property name="dev_submission.jar" value="${component}_${component_version}_dev_submission.jar"/>
    <property name="design_submission.jar" value="${component}_${component_version}_design_submission.jar"/>
    <property name="dev_dist.jar" value="${component}_${component_version}_dev_dist.jar"/>
    <property name="design_dist.jar" value="${component}_${component_version}_design_dist.jar"/>

    <!-- DOCUMENT PACKAGE -->
    <property name="dist_docpackage" value="${builddir}/doc_package" />
    <property name="docpackage.jar" value="${distfilename}_docs.jar" />
    
		<!-- codertura task definitation -->
		<property name="cobertura.dir" value="${ext_libdir}/cobertura/1.8" />
		<path id="cobertura.classpath">
    	<fileset dir="${cobertura.dir}">
      	  <include name="cobertura.jar" />
        	<include name="lib/**/*.jar" />
    	</fileset>
		</path>
		
		<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
		<property name="cobertura.datafile" value="${testlogdir}/cobertura.ser" />
		<property name="instrumented.dir" value="${builddir}/instrumented" />

    <!-- TCS Dependencies -->
    <property name="base_exception.version" value="2.0"/>
    <property name="base_exception.jar.name" value="base_exception.jar"/>
    <property name="base_exception.path" value="base_exception/${base_exception.version}"/>
    <property name="base_exception.jar" value="${tcs_libdir}/${base_exception.path}/${base_exception.jar.name}"/>
  
    <property name="logging_wrapper.version" value="2.0"/>
    <property name="logging_wrapper.jar.name" value="logging_wrapper.jar"/>
    <property name="logging_wrapper.path" value="logging_wrapper/${logging_wrapper.version}"/>
    <property name="logging_wrapper.jar" value="${tcs_libdir}/${logging_wrapper.path}/${logging_wrapper.jar.name}"/>
  
    <property name="object_formatter.version" value="1.0"/>
    <property name="object_formatter.jar.name" value="object_formatter.jar"/>
    <property name="object_formatter.path" value="object_formatter/${object_formatter.version}"/>
    <property name="object_formatter.jar" value="${tcs_libdir}/${object_formatter.path}/${object_formatter.jar.name}"/>
  
    <property name="typesafe_enum.version" value="1.1"/>
    <property name="typesafe_enum.jar.name" value="typesafe_enum.jar"/>
    <property name="typesafe_enum.path" value="typesafe_enum/${typesafe_enum.version}"/>
    <property name="typesafe_enum.jar" value="${tcs_libdir}/${typesafe_enum.path}/${typesafe_enum.jar.name}"/>
  
    <property name="configuration_manager.version" value="2.1.5"/>
    <property name="configuration_manager.jar.name" value="configuration_manager.jar"/>
    <property name="configuration_manager.path" value="configuration_manager/${configuration_manager.version}"/>
    <property name="configuration_manager.jar" value="${tcs_libdir}/${configuration_manager.path}/${configuration_manager.jar.name}"/>
  
    <property name="configuration_api.version" value="1.0"/>
    <property name="configuration_api.jar.name" value="configuration_api.jar"/>
    <property name="configuration_api.path" value="configuration_api/${configuration_api.version}"/>
    <property name="configuration_api.jar" value="${tcs_libdir}/${configuration_api.path}/${configuration_api.jar.name}"/>
  
    <property name="configuration_persistence.version" value="1.0.1"/>
    <property name="configuration_persistence.jar.name" value="configuration_persistence.jar"/>
    <property name="configuration_persistence.path" value="configuration_persistence/${configuration_persistence.version}"/>
    <property name="configuration_persistence.jar" value="${tcs_libdir}/${configuration_persistence.path}/${configuration_persistence.jar.name}"/>
  
    <property name="search_builder.version" value="1.3.2"/>
    <property name="search_builder.jar.name" value="search_builder.jar"/>
    <property name="search_builder.path" value="search_builder/${search_builder.version}"/>
    <property name="search_builder.jar" value="${tcs_libdir}/${search_builder.path}/${search_builder.jar.name}"/>
  
    <property name="data_validation.version" value="1.1.1"/>
    <property name="data_validation.jar.name" value="data_validation.jar"/>
    <property name="data_validation.path" value="data_validation/${data_validation.version}"/>
    <property name="data_validation.jar" value="${tcs_libdir}/${data_validation.path}/${data_validation.jar.name}"/>
  
    <property name="class_associations.version" value="1.0"/>
    <property name="class_associations.jar.name" value="class_associations.jar"/>
    <property name="class_associations.path" value="class_associations/${class_associations.version}"/>
    <property name="class_associations.jar" value="${tcs_libdir}/${class_associations.path}/${class_associations.jar.name}"/>
  
    <property name="object_factory.version" value="2.1"/>
    <property name="object_factory.jar.name" value="object_factory.jar"/>
    <property name="object_factory.path" value="object_factory/${object_factory.version}"/>
    <property name="object_factory.jar" value="${tcs_libdir}/${object_factory.path}/${object_factory.jar.name}"/>
    
    <property name="db_connection_factory.version" value="1.1"/>
    <property name="db_connection_factory.jar.name" value="db_connection_factory.jar"/>
    <property name="db_connection_factory.path" value="db_connection_factory/${db_connection_factory.version}"/>
    <property name="db_connection_factory.jar" value="${tcs_libdir}/${db_connection_factory.path}/${db_connection_factory.jar.name}"/>
    
    <!-- third party -->
    <!-- Jboss 4.2 EJB3 including hibernate 3.2 JPA-->
	<property name="jboss.dir" value="${ext_libdir}/jboss/4.2" />    
	<path id="jboss.classpath">
	  <fileset dir="${jboss.dir}">
        <include name="jboss-ejb3x.jar" />
        <include name="jboss-j2ee.jar" />
        <include name="jboss-jaxrpc.jar" />
        <include name="jboss-common.jar" />
        <include name="javassist.jar" />
        <include name="jbossall-client.jar" />        
        <include name="ejb3-persistence.jar" />
        <include name="hibernate-annotations.jar" />
        <include name="hibernate-commons-annotations.jar" />
        <include name="hibernate3.jar" />
        <include name="hibernate-entitymanager.jar" />
        <include name="cglib.jar" />
        <include name="antlr.jar" />
        <include name="commons-collections.jar" />
        <include name="commons-logging.jar" />
        <include name="dom4j.jar" />        
	  </fileset>
	</path>
    
    <property name="informix-jdbc.jar" value="${ext_libdir}/informix/ifxjdbc.jar"/>
        
    <!-- 3rd Party Dependencies  -->
    <property name="junit.jar" value="${ext_libdir}/junit/3.8.2/junit.jar"/>

    <!-- Java Locations -->
    <property name="java_1_3_bootclasspath" value="c:\program files\JavaSoft\JRE\1.3.1\lib\rt.jar"/>

    <path id="buildlibs">        
        <!--
        <pathelement location="${base_exception.jar}" />  
        <pathelement location="${logging_wrapper.jar}" />  
        <pathelement location="${object_formatter.jar}" />  
        <pathelement location="${typesafe_enum.jar}" />  
        <pathelement location="${configuration_manager.jar}" />  
        <pathelement location="${configuration_api.jar}" />  
        <pathelement location="${db_connection_factory.jar}" />  
        <pathelement location="${configuration_persistence.jar}" />  
        <pathelement location="${search_builder.jar}" />  
        <pathelement location="${data_validation.jar}" />  
        <pathelement location="${class_associations.jar}" />  
        <pathelement location="${object_factory.jar}" />  
        <pathelement location="${db_connection_factory.jar}" /> 
        -->
        <path refid="jboss.classpath"/>        
        
        <pathelement location="${informix-jdbc.jar}"/>

        <!-- contest/project jars -->
        <pathelement location="${testfiles}/lib/contest.jar"/>
        <pathelement location="${testfiles}/lib/project.jar"/>
        
        <pathelement location="${tcs_libdir}/configuration_manager/2.1.5/configuration_manager.jar"/>
        <pathelement location="${tcs_libdir}/db_connection_factory/1.1/db_connection_factory.jar"/>
        <pathelement location="${tcs_libdir}/configuration_api/1.0/configuration_api.jar"/>
        
        <fileset dir="ejbdemo/ContestManager.jar">
            <include name="**/*.jar"/>
        </fileset>
        
        <pathelement location="${junit.jar}"/>        
        <pathelement location="${testfiles}"/>
        <!--
        <pathelement location="${configmanager.jar}" />
        <pathelement location="${configdir}" />
        <pathelement location="${testfiles}" />
        -->
    </path>

    <path id="test.build.classpath">
        <pathelement location="${build_testclassdir}"/>
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <target name="compile">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true" verbose="${verbose}">
            <classpath refid="buildlibs" />
        </javac>
    </target>

    <target name="compile_targets">
        <!-- test compile against 1.3 -->
        <mkdir dir="${build_targetclassdir}"/>
        <mkdir dir="${javatests}"/>
        <javac srcdir="${javamain}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
	       debug="true"
               verbose="${verbose}"
               target="1.5"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>

        <!-- compile test cases -->
        <javac srcdir="${javatests}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
	       debug="true"
               verbose="${verbose}"
               target="1.5"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>
        <delete dir="${build_targetclassdir}"/>
    </target>

    <target name="compile_tests" depends="compile">
        <mkdir dir="${build_testclassdir}"/>
        <javac srcdir="${javatests}" destdir="${build_testclassdir}" includes="${packagedir}/**" debug="true" verbose="${verbose}">
            <classpath refid="test.build.classpath" />
        </javac>
    </target>

    <target name="test" depends="compile_tests">
        <mkdir dir="${testlogdir}"/>
				<mkdir dir="${instrumented.dir}"/>

				<delete file="${cobertura.datafile}" />

				<cobertura-instrument todir="${instrumented.dir}" datafile="${cobertura.datafile}">
						<!-- all included -->
						<fileset dir="${build_classdir}">
        			<include name="**/*.class" />
    				</fileset>
				</cobertura-instrument>

        <junit fork="true" haltonerror="false">
	
				<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.datafile}" />

						<classpath location="${instrumented.dir}" />
						<classpath location="${build_testclassdir}" />
						<classpath refid="test.build.classpath" />
						<classpath refid="cobertura.classpath" />

            <test name="${package}.AllTests" todir="${testlogdir}">
                <formatter type="plain" usefile="true"/>
                <formatter type="xml" usefile="true"/>
            </test>
            
        </junit>

    </target>

		<target name="coveragereport" depends="test">

				<cobertura-report format="html" destdir="${testlogdir}/coverage/" srcdir="${srcdir}" datafile="${cobertura.datafile}">
    			<fileset dir="${javamain}">
        		<include name="**/*.java" />
    			</fileset>
    			<fileset dir="${javatests}">
        		<include name="**/*.java" />
    			</fileset>
				</cobertura-report>

		</target>

    <target name="reports" depends="test">
        <mkdir dir="${reports}"/>

        <junitreport todir="${reports}">
          <fileset dir="${testlogdir}">
            <include name="*.xml"/>
          </fileset>
          <report format="frames" todir="${reports}"/>
        </junitreport>
        
        <echo>The execution of reports is complete.  Reports are available in /${reports}</echo>
    </target>

    <target name="dist" depends="compile">
        <mkdir dir="${dist_lib}/${component_path}"/>
        <jar jarfile="${component.jar}" basedir="${build_classdir}" />
    </target>

    <target name="dist_tests" depends="compile_tests">
        <mkdir dir="${dist_lib}"/>
        <jar jarfile="${component.tests.jar}" basedir="${build_testclassdir}" />
    </target>

    <target name="javadoc" depends="compile">
        <mkdir dir="${dist_javadocs}" />
        <javadoc packagenames="${package}.*"
            sourcepath="${javamain}"
            classpath="${build_classdir}"
            classpathref="buildlibs"
            destdir="${dist_javadocs}"
            windowtitle="Topcoder Software"
            header="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            footer="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            bottom="&lt;font class=tcoder5&gt;Contact TopCoder Software at &lt;a href='http://software.topcoder.com'&gt;software.topcoder.com&lt;/a&gt;&lt;/font&gt;"
            stylesheetfile="${javadocsdir}/stylesheet.css"
            verbose="${verbose}">
            <tag name="copyright" description="Copyright:" scope="types"/>
		</javadoc>
    </target>

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>

    <target name="deploy" depends="dist">
    </target>

    <target name="main" depends="deploy,test">
    </target>

    <!-- ************************************************************************** -->
    <!-- ************ REMOVE EVERYTHING BELOW HERE FOR THE DISTRIBUTION ************* -->
    <!-- ************************************************************************** -->

    <target name="dist_tcs" depends="clean,dist,javadoc">
        <!-- define tcs distribution format -->
<!-- uncomment if configuration files exist.
        <mkdir dir="${dist_conf}"/>
        <copy todir="${dist_conf}">
            <fileset dir="${configdir}" />
        </copy>
-->

        <mkdir dir="${dist_src}"/>
        <copy todir="${dist_src}">
            <fileset dir="${srcdir}" />
        </copy>

        <copy todir="${dist_docs}" >
            <fileset dir="${docsdir}">
                <include name="${component}_Class_Diagram*"/>
                <include name="${component}_Use_Case_Diagram*"/>
                <include name="${component}_Sequence_Diagram*"/>
                <include name="${component}_Requirements_Specification*"/>
                <include name="${component}_Component_Specification*"/>
                <include name="${component}.zargo"/>
                <include name="${component}.zuml"/>
            </fileset>
        </copy>

        <mkdir dir="${dist_javadocs}"/>
        <copy todir="${dist_javadocs}">
            <fileset dir="${javadocsdir}" />
        </copy>

        <antcall target="package_docs" />

<!-- uncomment if test files exist.
        <mkdir dir="${dist_testfiles}"/>
        <copy todir="${dist_testfiles}">
            <fileset dir="${testfiles}" />
        </copy>
-->
        <copy file="build_dist.xml" tofile="${build_tcsdistdir}/build.xml" />
        <copy file="README" tofile="${build_tcsdistdir}/README" />
        <jar jarfile="${component.dist.jar}" basedir="${build_distdir}" excludes="*.jar"/>
        
        <antcall target="move_to_tcs"/>
    </target>

    <target name="package_docs" depends="javadoc">
        <mkdir dir="${dist_docpackage}" />
    
        <jar jarfile="${dist_docpackage}/${javadoc.jar}" basedir="${build_tcsdistdir}/${javadocsdir}" />
        
        <copy todir="${dist_docpackage}" >
            <fileset dir="${docsdir}">
                <include name="${component}_Class_Diagram*"/>
                <include name="${component}_Use_Case_Diagram*"/>
                <include name="${component}_Sequence_Diagram*"/>
                <include name="${component}_Requirements_Specification.pdf"/>
                <include name="${component}_Component_Specification.pdf"/>
            </fileset>
        </copy>
        
        <jar jarfile="${builddir}/${docpackage.jar}" basedir="${dist_docpackage}" />
    </target>
    
    <target name="move_to_tcs">
        <mkdir dir="${tcs_libdir}/${component_path}"/>
        <mkdir dir="${tcs_libdir}/${component_path}/dist"/>

        <copy file="${component.jar}" todir="${tcs_libdir}/${component_path}"/>
        <copy file="${component.dist.jar}" todir="${tcs_libdir}/${component_path}/dist"/>
    </target>

    <target name="dev_submission">
        <jar jarfile="${dev_submission.jar}"
             basedir="."
             includes="build.xml,1.1_ToReviewers_ReadMe.txt,ejbdemo/**,${configdir}/**,${javamain}/**/*.java,${javatests}/${packagedir}/**,${testlogdir}/**,${testfiles}/**,${docsdir}/**, build.xml, README, FinalFix, FinalFix2"
             excludes="**/Dummy*.java,${javatests}/${packagedir}/AllTests.java,${javatests}/**/stresstests/*,${javatests}/**/failuretests/*,
                       ${javatests}/**/accuracytests/*"
        />
    </target>

    <target name="design_submission">
        <jar jarfile="${design_submission.jar}"
             basedir="."
             includes="${configdir}/**,${javamain}/**,${docsdir}/**,${testfiles}/**"
        />
    </target>

    <target name="dev_dist">
        <!-- copy TCS Dependencies -->
        <!--
        <mkdir dir="${jar_tcs_libdir}/${configmanager.path}"/>
        <copy file="${configmanager.jar}" todir="${jar_tcs_libdir}/${configmanager.path}" />
        -->
        
        <jar jarfile="${dev_dist.jar}"
             basedir="."
             includes="build.xml,
                       ${configdir}/**,
                       ${srcdir}/**,
                       ${docsdir}/**,
                       ${jar_tcs_libdir}/**,
                       ${testfiles}/**"
        />

        <!--
        <delete dir="${jar_tcs_libdir}"/>
        -->
    </target>

    <target name="design_dist">
        <jar jarfile="${design_dist.jar}"
             basedir="."
             includes="build.xml,
                       ${configdir}/**,
                       ${srcdir}/**,
                       ${docsdir}/**,
                       ${jar_tcs_libdir}/**,
                       ${testfiles}/**"
        />
    </target>

    <!-- ************************************************************************** -->
    <!-- ************************ END REMOVE EVERYTHING ***************************** -->
    <!-- ************************************************************************** -->
		

    <property name="tcs_checkstyle_config" value="${ext_libdir}/tcs_checkstyle_config"/>
    <property name="checkstyle.dir" value="${ext_libdir}/checkstyle/4.3"/>
    
    <!-- codertura task definitation -->
    <path id="checkstyle.classpath">
    <fileset dir="${checkstyle.dir}">
     <include name="checkstyle-all-4.3.jar" />
    </fileset>
    </path>
    
    <taskdef resource="checkstyletask.properties" classpathref="checkstyle.classpath" />
    
     <target name="checkstyle" depends="compile">
         <mkdir dir="${testlogdir}"/>
         <checkstyle config="${tcs_checkstyle_config}/tc_checks.xml" classpath="${build_classdir}">
             <fileset dir="src/java/main" includes="**/*.java" />
             <formatter type="plain" toFile="${testlogdir}/checkstyle.txt" />
         </checkstyle>
     </target>
    
     <target name="checkstyle_tests" depends="compile_tests">
         <mkdir dir="${testlogdir}"/>
         <checkstyle config="${tcs_checkstyle_config}/tc_test_checks.xml" classpath="${test.build.classpath}">
             <fileset dir="${javatests}/${packagedir}/" includes="**/*.java"
                      excludes="UnitTests.java, AllTests.java, stresstests/*, failuretests/*, accuracytests/*" />
             <formatter type="plain" toFile="${testlogdir}/checkstyletest.txt" />
         </checkstyle>
     </target>
    
    <!--
   	<property name="jalopy.dir" value="${ext_libdir}/jalopy-ant-0.1-1.5rc3" />
		<path id="jalopy.classpath">
			<fileset dir="${jalopy.dir}">
		      		<include name="*.jar" />
			</fileset>
		</path>
		<taskdef name="jalopy" classname="de.hunsicker.jalopy.plugin.ant.AntPlugin">
			<classpath refid="jalopy.classpath" />
		</taskdef>
		<target name="jalopy">
			<jalopy>
		    	<fileset dir="src" includes="**/*.java"/>
			</jalopy>
		</target>
		-->
</project>
