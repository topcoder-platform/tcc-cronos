<?xml version="1.0"?>

<project name="AJAX UI News" default="dist" basedir=".">

    <property file="/topcoder_global.properties"/>

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="AJAX_UI_News" />
    <property name="package" value="com.topcoder.uinews" />
    <property name="packagedir" value="com/topcoder/uinews" />
    <property name="distfilename" value="ajax_ui_news" />
    <property name="component_version" value="1.0" />
    <property name="component_path" value="${distfilename}/${component_version}" />

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src" />
    <property name="tcs_libdir" value="lib/tcs" />
    <property name="ext_libdir" value="lib" />
    <property name="jar_tcs_libdir" value="lib/tcs" />
    <property name="jar_ext_libdir" value="lib" />
    <property name="docsdir" value="docs" />
    <property name="configdir" value="conf" />
    <property name="testlogdir" value="log" />
    <property name="testfiles" value="test_files" />
    <property name="javadocsdir" value="${docsdir}/javadocs" />
    <property name="webdir" value="web" />
    <property name="reports" value="reports" />

    <property name="javasrc" value="${srcdir}/java" />
    <property name="javamain" value="${javasrc}/main" />
    <property name="javatests" value="${javasrc}/tests" />

    <property name="builddir" value="build" />
    <property name="build_classdir" value="${builddir}/classes" />
    <property name="build_testclassdir" value="${builddir}/testClasses" />
    <property name="build_targetclassdir" value="${builddir}/targetclasses" />
    <property name="build_distdir" value="${builddir}/dist" />
    <property name="build_docsdir" value="${builddir}/${docsdir}" />
    <property name="build_javadocsdir" value="${builddir}/${javadocsdir}" />
    <property name="build_webdir" value="${builddir}/${webdir}" />
    <property name="build_lib" value="${builddir}/lib" />
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}" />

    <!-- EXECUTION TAGS -->
    <property name="debug" value="off" />
    <property name="verbose" value="no" />

    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_conf" value="${build_tcsdistdir}/${configdir}" />
    <property name="dist_lib" value="${build_distdir}/lib/tcs" />
    <property name="dist_src" value="${build_tcsdistdir}/${srcdir}" />
    <property name="dist_docs" value="${build_tcsdistdir}/${docsdir}" />
    <property name="dist_javadocs" value="${build_tcsdistdir}/${javadocsdir}" />
    <property name="dist_testfiles" value="${build_tcsdistdir}/${testfiles}" />
    <property name="dist_coverage" value="${dist_docs}/coverage" />
    <property name="docs_coverage" value="${docsdir}/coverage" />

    <!-- NAME FOR .JAR AND .WAR FILES -->
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="javadoc.jar" value="javadocs.jar"/>
    <property name="component.tests.jar" value="${dist_lib}/${distfilename}_tests.jar"/>
    <property name="component.war" value="${dist_examples}/${distfilename}.war"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>
    <property name="dev_submission.jar" value="${component}_${component_version}_dev_submission.jar"/>
    <property name="design_submission.jar" value="${component}_${component_version}_design_submission.jar"/>
    <property name="dev_dist.jar" value="${component}_${component_version}_dev_dist.jar"/>
    <property name="design_dist.jar" value="${component}_${component_version}_design_dist.jar"/>

    <!-- DOCUMENT PACKAGE -->
    <property name="dist_docpackage" value="${builddir}/doc_package" />
    <property name="docpackage.jar" value="${distfilename}_docs.jar" />
    
		<!-- codertura task definitation -->
		<property name="cobertura.dir" value="${ext_libdir}/cobertura/1.8" />
		<path id="cobertura.classpath">

    	<fileset dir="${cobertura.dir}">
      	  <include name="cobertura.jar" />
        	<include name="lib/**/*.jar" />
    	</fileset>

		</path>
		<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
		<property name="cobertura.datafile" value="${testlogdir}/cobertura.ser" />
		<property name="instrumented.dir" value="${builddir}/instrumented" />

    <!-- TCS Dependencies -->
    <property name="struts_portal.version" value="1.0"/>
    <property name="struts_portal.jar.name" value="struts_portal.jar"/>
    <property name="struts_portal.path" value="struts_portal/${struts_portal.version}"/>
    <property name="struts_portal.jar" value="${tcs_libdir}/${struts_portal.path}/${struts_portal.jar.name}"/>

    <property name="configuration_manager.version" value="2.1.5"/>
    <property name="configuration_manager.jar.name" value="configuration_manager.jar"/>
    <property name="configuration_manager.path" value="configuration_manager/${configuration_manager.version}"/>
    <property name="configuration_manager.jar" value="${tcs_libdir}/${configuration_manager.path}/${configuration_manager.jar.name}"/>

    <property name="base_exception.version" value="2.0"/>
    <property name="base_exception.jar.name" value="base_exception.jar"/>
    <property name="base_exception.path" value="base_exception/${base_exception.version}"/>
    <property name="base_exception.jar" value="${tcs_libdir}/${base_exception.path}/${base_exception.jar.name}"/>

    <property name="object_formatter.version" value="1.0"/>
    <property name="object_formatter.jar.name" value="object_formatter.jar"/>
    <property name="object_formatter.path" value="object_formatter/${object_formatter.version}"/>
    <property name="object_formatter.jar" value="${tcs_libdir}/${object_formatter.path}/${object_formatter.jar.name}"/>

    <property name="document_generator.version" value="2.1"/>
    <property name="document_generator.jar.name" value="document_generator.jar"/>
    <property name="document_generator.path" value="document_generator/${document_generator.version}"/>
    <property name="document_generator.jar" value="${tcs_libdir}/${document_generator.path}/${document_generator.jar.name}"/>

    <property name="logging_wrapper.version" value="2.0"/>
    <property name="logging_wrapper.jar.name" value="logging_wrapper.jar"/>
    <property name="logging_wrapper.path" value="logging_wrapper/${logging_wrapper.version}"/>
    <property name="logging_wrapper.jar" value="${tcs_libdir}/${logging_wrapper.path}/${logging_wrapper.jar.name}"/>

    <property name="object_factory.version" value="2.0.1"/>
    <property name="object_factory.jar.name" value="object_factory.jar"/>
    <property name="object_factory.path" value="object_factory/${object_factory.version}"/>
    <property name="object_factory.jar" value="${tcs_libdir}/${object_factory.path}/${object_factory.jar.name}"/>

    <property name="command_line_utility.version" value="1.0"/>
    <property name="command_line_utility.jar.name" value="command_line_utility.jar"/>
    <property name="command_line_utility.path" value="command_line_utility/${command_line_utility.version}"/>
    <property name="command_line_utility.jar" value="${tcs_libdir}/${command_line_utility.path}/${command_line_utility.jar.name}"/>

    <property name="type_safe_enum.version" value="1.1"/>
    <property name="type_safe_enum.jar.name" value="type_safe_enum.jar"/>
    <property name="type_safe_enum.path" value="type_safe_enum/${type_safe_enum.version}"/>
    <property name="type_safe_enum.jar" value="${tcs_libdir}/${type_safe_enum.path}/${type_safe_enum.jar.name}"/>

    <property name="command_line_utility.version" value="1.0"/>
    <property name="command_line_utility.jar.name" value="command_line_utility.jar"/>
    <property name="command_line_utility.path" value="command_line_utility/${command_line_utility.version}"/>
    <property name="command_line_utility.jar" value="${tcs_libdir}/${command_line_utility.path}/${command_line_utility.jar.name}"/>

    <property name="json_object.version" value="1.0"/>
    <property name="json_object.jar.name" value="json_object.jar"/>
    <property name="json_object.path" value="json_object/${json_object.version}"/>
    <property name="json_object.jar" value="${tcs_libdir}/${json_object.path}/${json_object.jar.name}"/>
    <!-- 3rd Party Dependencies  -->

    <property name="junit.jar" value="${ext_libdir}/junit/3.8.2/junit.jar"/>
    <property name="jsp-api.jar" value="${ext_libdir}/jsp-api/2.0/jsp-api.jar"/>
    <property name="servlet-api.jar" value="${ext_libdir}/j2ee.jar"/>
    <property name="strutstest.jar" value="${ext_libdir}/strutstest/2.1.3/strutstest-2.1.3.jar"/>
	<property name="struts.jar" value="${ext_libdir}/struts/1.2.7/struts.jar" />
    <!-- Properties required for the Cactus tests -->    
    <property name="cactus.home.tomcat5x" value="D:/JavaTools/jakarta-tomcat-5.0.28" />
    <property name="cactus.port" value="8080"/>
    <property name="target.testreports.dir" value="${testlogdir}"/>
    <property name="cactus.jar" location="${ext_libdir}/cactus/1.7.2/j2ee1.3/cactus-1.7.2.jar"/>
    
	  <path id="cactusdeps">
        <pathelement location="${ext_libdir}/cactus/1.7.2/j2ee1.3/aspectjrt-1.2.1.jar"/>
        <pathelement location="${ext_libdir}/cactus/1.7.2/j2ee1.3/commons-httpclient-2.0.2.jar"/>
        <pathelement location="${ext_libdir}/cactus/1.7.2/j2ee1.3/commons-logging-1.0.4.jar"/>
        <pathelement location="${ext_libdir}/cactus/1.7.2/j2ee1.3/httpunit-1.6.jar"/>
        <pathelement location="${ext_libdir}/cactus/1.7.2/j2ee1.3/httpunit-1.6.jar"/>
    </path>
    
    <!-- Define the Cactus tasks -->
    <taskdef resource="cactus.tasks">
        <classpath>
            <pathelement location="${cactus.jar}"/>
            <pathelement location="${ext_libdir}/cactus/1.7.2/j2ee1.3/cargo-0.5.jar"/>
            <pathelement location="${ext_libdir}/cactus/1.7.2/j2ee1.3/cactus-ant-1.7.2.jar"/>
            <path refid="cactusdeps"/>
        </classpath>
    </taskdef>

		<!-- struts lib -->
		<property name="struts.dir" value="${ext_libdir}/struts/1.2.7" />
		<path id="struts.classpath">
    	<fileset dir="${struts.dir}">
        	<include name="lib/**/*.jar" />
    	</fileset>
		</path>

    <!-- Folder used to build the war file (holds several classes files) -->
    <property name="warclasses.dir" value="${builddir}/warclasses" />
        
    <!-- Java Locations -->
    <property name="java_1_3_bootclasspath" value="c:\program files\JavaSoft\JRE\1.3.1\lib\rt.jar"/>

    <path id="buildlibs">
        <pathelement location="${junit.jar}" />
	<pathelement location="${struts.jar}" />
        <pathelement location="${configuration_manager.jar}" />
        <pathelement location="${base_exception.jar}" />
        <pathelement location="${object_formatter.jar}" />
        <pathelement location="${document_generator.jar}" />
        <pathelement location="${logging_wrapper.jar}" />
        <pathelement location="${object_factory.jar}" />
    	  <pathelement location="${command_line_utility.jar}" />
    	  <pathelement location="${type_safe_enum.jar}" />
	<pathelement location="${json_object.jar}" />
	<pathelement location="${struts_portal.jar}" />    
    <pathelement location="${jsp-api.jar}" />
        <pathelement location="${servlet-api.jar}" />
        <pathelement location="${configdir}" />
        <pathelement location="${testfiles}" />
        <path refid="struts.classpath"/>
    </path>

    <path id="test.build.classpath">
        <pathelement location="${build_testclassdir}"/>
        <pathelement location="${build_classdir}"/>
      	<pathelement location="${cactus.jar}"/>
      	<pathelement location="${strutstest.jar}" />
        <path refid="buildlibs"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <target name="compile">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true" verbose="${verbose}">
            <classpath refid="buildlibs" />
        </javac>
    </target>

    <target name="compile_targets">
        <!-- test compile against 1.3 -->
        <mkdir dir="${build_targetclassdir}"/>
        <mkdir dir="${javatests}"/>
        <javac srcdir="${javamain}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
	       debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>

        <!-- compile test cases -->
        <javac srcdir="${javatests}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
	       debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>
        <delete dir="${build_targetclassdir}"/>
    </target>

    <target name="compile_tests" depends="compile">
        <mkdir dir="${build_testclassdir}"/>
        <javac srcdir="${javatests}" destdir="${build_testclassdir}" includes="${packagedir}/**" debug="true" verbose="${verbose}">
            <classpath refid="test.build.classpath" />
        </javac>
    </target>

	<target name="war" depends="compile_tests">
	        <mkdir dir="${testlogdir}"/>
	        <mkdir dir="${instrumented.dir}"/>
	        <mkdir dir="${warclasses.dir}"/>
	        
	        <delete file="${cobertura.datafile}" />
	    
	        <cobertura-instrument todir="${instrumented.dir}" datafile="${cobertura.datafile}">
	        <!-- all included -->
	        <fileset dir="${build_classdir}">
	            <include name="**/*.class" />
	        </fileset>
	        </cobertura-instrument>
	        <copy todir="${warclasses.dir}" overwrite="true">
	            <fileset dir="${build_classdir}"/>
	        </copy>
	        <copy todir="${warclasses.dir}" overwrite="true">
	            <fileset dir="${instrumented.dir}"/>               
	        </copy>
	        
	        <war destfile="${builddir}/${distfilename}.war"	
	        	 basedir="${testfiles}"
	        	 excludes="WEB-INF/**, demo/**"
	             webxml="${testfiles}/WEB-INF/web.xml"> 
	            
	        	<webinf dir="${testfiles}/WEB-INF" excludes="web.xml" />
	            
	        	<classes dir="${warclasses.dir}"/>
	            <classes dir="${build_testclassdir}"/>
	        	<classes dir="${testfiles}" excludes="WEB-INF/**, demo/**" />
	            
	            <lib file="${configuration_manager.jar}" />
	            <lib file="${base_exception.jar}" />
	            <lib file="${object_formatter.jar}" />
	            <lib file="${document_generator.jar}" />
	            <lib file="${logging_wrapper.jar}" />
	            <lib file="${object_factory.jar}" />
	            <lib file="${command_line_utility.jar}" />
	        	  <lib file="${type_safe_enum.jar}" />
	        	  <lib dir="${struts.dir}/lib" />
	        	  <lib file="${strutstest.jar}" />
	            <lib file="${ext_libdir}/cactus/1.7.2/j2ee1.3/httpunit-1.6.jar"/>
		          <lib file="${cobertura.dir}/cobertura.jar" />
	            <lib dir="${cobertura.dir}/lib" />
	        </war>
	    </target>
	
	<target name="war-demo" depends="compile_tests">
		        
		        <war destfile="${builddir}/${distfilename}_demo.war"	
		        	 basedir="${testfiles}/demo"
		        	 excludes="WEB-INF/**"
		             webxml="${testfiles}/demo/WEB-INF/web.xml"> 
		            
		        	<webinf dir="${testfiles}/demo/WEB-INF" excludes="web.xml" />
		            
		        	<classes dir="${build_classdir}"/>
		        	<classes dir="${build_testclassdir}"/>
		        	<classes dir="${testfiles}/demo" excludes="WEB-INF/**" />
		            
	            <lib file="${configuration_manager.jar}" />
	            <lib file="${base_exception.jar}" />
	            <lib file="${object_formatter.jar}" />
	            <lib file="${document_generator.jar}" />
	            <lib file="${logging_wrapper.jar}" />
	            <lib file="${object_factory.jar}" />
	            <lib file="${command_line_utility.jar}" />
	        	  <lib file="${type_safe_enum.jar}" />
	        	  <lib dir="${struts.dir}/lib" />
	        	  <lib file="${strutstest.jar}" />
	            <lib file="${ext_libdir}/cactus/1.7.2/j2ee1.3/httpunit-1.6.jar"/>

		        </war>
		    </target>
	
    <target name="test_prepare" depends="war">
        <cactifywar srcfile="${builddir}/${distfilename}.war"
                    destfile="${builddir}/${distfilename}-test.war"/>
        <mkdir dir="${testlogdir}/tomcat5x"/>       
    </target>
                    	
	<target name="test" depends="test_prepare">

	        <cactus warfile="${builddir}/${distfilename}-test.war" 
	            fork="yes" failureproperty="tests.failed" haltonerror="true">
	        <sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.datafile}" />

	        <classpath location="${instrumented.dir}" />
	            <classpath location="${build_testclassdir}" />
	            <classpath refid="test.build.classpath" />
	            <classpath refid="cobertura.classpath" />
	    	    <classpath refid="cactusdeps"/>

	            <containerset timeout="30000">
	                <tomcat5x if="cactus.home.tomcat5x"
	                    serverxml="${cactus.home.tomcat5x}/conf/server.xml"
	                    dir="${cactus.home.tomcat5x}"
	                    output="${testlogdir}/tomcat5x/tomcat5x.out"
	                    todir="${testlogdir}"
	                    port="${cactus.port}"/>
	            </containerset>
	            <formatter type="brief" usefile="false"/>
	            <formatter type="plain"/>
	            <formatter type="xml"/>
	            <test name="${package}.AllTests" todir="${testlogdir}"/>

		   </cactus>
	    </target>

		<target name="coveragereport" depends="test">

				<cobertura-report format="html" destdir="${testlogdir}/coverage/" srcdir="${srcdir}" datafile="${cobertura.datafile}">
    			<fileset dir="${javamain}">
        		<include name="**/*.java" />
    			</fileset>
    			<fileset dir="${javatests}">
        		<include name="**/*.java" />
    			</fileset>
				</cobertura-report>

		</target>

    <target name="reports" depends="test">
        <mkdir dir="${reports}"/>

        <junitreport todir="${reports}">
          <fileset dir="${testlogdir}">
            <include name="*.xml"/>
          </fileset>
          <report format="frames" todir="${reports}"/>
        </junitreport>
        
        <echo>The execution of reports is complete.  Reports are available in /${reports}</echo>
    </target>

    <target name="dist" depends="compile">
        <mkdir dir="${dist_lib}/${component_path}"/>
        <jar jarfile="${component.jar}" basedir="${build_classdir}" />
    </target>

    <target name="dist_tests" depends="compile_tests">
        <mkdir dir="${dist_lib}"/>
        <jar jarfile="${component.tests.jar}" basedir="${build_testclassdir}" />
    </target>

    <target name="javadoc" depends="compile">
        <mkdir dir="${dist_javadocs}" />
        <javadoc packagenames="${package}.*"
            sourcepath="${javamain}"
            classpath="${build_classdir}"
            classpathref="buildlibs"
            destdir="${dist_javadocs}"
            windowtitle="Topcoder Software"
            header="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            footer="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            bottom="&lt;font class=tcoder5&gt;Contact TopCoder Software at &lt;a href='http://software.topcoder.com'&gt;software.topcoder.com&lt;/a&gt;&lt;/font&gt;"
            stylesheetfile="${javadocsdir}/stylesheet.css"
            verbose="${verbose}">
            <tag name="copyright" description="Copyright:" scope="types"/>
		</javadoc>
    </target>

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>

    <target name="deploy" depends="dist">
    </target>

    <target name="main" depends="deploy,test">
    </target>

</project>
