<?xml version="1.0"?>

<project name="JSF Border Layout" default="complib" basedir=".">

    <property file="../topcoder_global.properties"/>

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="JSF_Border_Layout"/>
    <property name="package" value="com.topcoder.web.ui.jsf.layout.border"/>
    <property name="packagedir" value="com/topcoder/web/ui/jsf/layout/border"/>
    <property name="distfilename" value="jsf_border_layout"/>
    <property name="component_version" value="1.0"/>
    <property name="component_path" value="${distfilename}/${component_version}"/>

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src"/>
    <property name="tcs_libdir" value="lib/tcs"/>
    <property name="ext_libdir" value="lib"/>
    <property name="jar_tcs_libdir" value="lib/tcs"/>
    <property name="jar_ext_libdir" value="lib"/>
    <property name="docsdir" value="docs"/>
    <property name="configdir" value="conf"/>
    <property name="testlogdir" value="log"/>
    <property name="testfiles" value="test_files"/>
    <property name="javadocsdir" value="${docsdir}/javadocs"/>
    <property name="webdir" value="web"/>
    <property name="reports" value="reports"/>

    <property name="javasrc" value="${srcdir}/java"/>
    <property name="javamain" value="${javasrc}/main"/>
    <property name="javatests" value="${javasrc}/tests"/>


    <property name="builddir" value="build"/>
    <property name="build_classdir" value="${builddir}/classes"/>
    <property name="build_testclassdir" value="${builddir}/testClasses"/>
    <property name="build_targetclassdir" value="${builddir}/targetclasses"/>
    <property name="build_distdir" value="${builddir}/dist"/>
    <property name="build_docsdir" value="${builddir}/${docsdir}"/>
    <property name="build_javadocsdir" value="${builddir}/${javadocsdir}"/>
    <property name="build_webdir" value="${builddir}/${webdir}"/>
    <property name="build_lib" value="${builddir}/lib"/>
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}"/>
    <property name="build_examples" value="${builddir}/examples"/>

    <!-- Java Sun Creator -->
    <property name="rave.home" value="C:/Progra~1/Sun/Creator"/>
    <property name="designsrc" value="${javasrc}/designtime"/>
    <property name="build_generatedir" value="${builddir}/generate"/>
    <property name="build_designdir" value="${builddir}/design"/>
    <property name="build_configdir" value="${builddir}/${configdir}"/>
    <!-- END -->

    <!-- EXECUTION TAGS -->
    <property name="debug" value="off"/>
    <property name="verbose" value="no"/>


    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_conf" value="${build_tcsdistdir}/${configdir}"/>
    <property name="dist_lib" value="${build_distdir}/lib/tcs"/>
    <property name="dist_src" value="${build_tcsdistdir}/${srcdir}"/>
    <property name="dist_docs" value="${build_tcsdistdir}/${docsdir}"/>
    <property name="dist_javadocs" value="${build_tcsdistdir}/${javadocsdir}"/>
    <property name="dist_testfiles" value="${build_tcsdistdir}/${testfiles}"/>

    <!-- NAME FOR .JAR AND .WAR FILES -->
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="javadoc.jar" value="${builddir}/javadocs.jar"/>
    <property name="component.tests.jar" value="${dist_lib}/${distfilename}_tests.jar"/>
    <property name="component.war" value="${build_distdir}/${distfilename}.war"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>
    <property name="dev_submission.jar" value="${component}_${component_version}_dev_submission.jar"/>
    <property name="design_submission.jar" value="${component}_${component_version}_design_submission.jar"/>
    <property name="dev_dist.jar" value="${component}_${component_version}_dev_dist.jar"/>
    <property name="design_dist.jar" value="${component}_${component_version}_design_dist.jar"/>

    <!-- Java Sun Creator -->
    <property name="commons-beanutils.jar"
              value="${rave.home}/modules/autoload/ext/commons-beanutils.jar"/>
    <property name="commons-collections.jar"
              value="${rave.home}/modules/autoload/ext/commons-collections.jar"/>
    <property name="commons-digester.jar"
              value="${rave.home}/modules/autoload/ext/commons-digester.jar"/>
    <property name="commons-logging.jar"
              value="${rave.home}/modules/autoload/ext/commons-logging.jar"/>
    <property name="designtime.jar" value="${rave.home}/modules/autoload/ext/designtime.jar"/>
    <property name="jsf-api.jar" value="${rave.home}/modules/autoload/ext/jsf-api.jar"/>
    <property name="jsf-impl.jar" value="${rave.home}/modules/autoload/ext/jsf-impl.jar"/>
    <property name="jsfcl.jar" value="${rave.home}/modules/autoload/ext/jsfcl.jar"/>
    <property name="jsfcl-dt.jar" value="${rave.home}/modules/autoload/ext/jsfcl-dt.jar"/>
    <property name="jsfmetadata.jar" value="${rave.home}/modules/autoload/jsfmetadata.jar"/>
    <property name="jsp-api.jar" value="${rave.home}/modules/autoload/ext/jsp-api.jar"/>
    <property name="rowset.jar" value="${rave.home}/lib/ext/rowset.jar"/>
    <property name="servlet-api.jar" value="${rave.home}/modules/autoload/ext/servlet-api.jar"/>
    <property name="sqlx.jar" value="${rave.home}/lib/ext/sqlx.jar"/>

    <!--cactus required libraries-->
    <property name="aspectjrt.jar" location="${ext_libdir}/cactus/1.7.1/j2ee1.3/aspectjrt-1.2.1.jar"/>
    <property name="cactus.jar" location="${ext_libdir}/cactus/1.7.1/j2ee1.3/cactus-1.7.1.jar"/>
    <property name="cactus.ant.jar" location="${ext_libdir}/cactus/1.7.1/j2ee1.3/cactus-ant-1.7.1.jar"/>
    <property name="cargo.jar" location="${ext_libdir}/cactus/1.7.1/j2ee1.3/cargo-0.5.jar"/>
    <property name="commons.httpclient.jar" location="${ext_libdir}/cactus/1.7.1/j2ee1.3/commons-httpclient-2.0.2.jar"/>
    <property name="commons.logging.jar" location="${ext_libdir}/cactus/1.7.1/j2ee1.3/commons-logging-1.0.4.jar"/>
    <property name="httpunit.jar" location="${ext_libdir}/cactus/1.7.1/j2ee1.3/httpunit-1.6.jar"/>
    <property name="junit.jar" location="${ext_libdir}/cactus/1.7.1/j2ee1.3/junit-3.8.1.jar"/>
    <property name="nekohtml.jar" location="${ext_libdir}/cactus/1.7.1/j2ee1.3/nekohtml-0.9.1.jar"/>
    <property name="tidy.jar" location="${ext_libdir}/Tidy.jar"/>

    <!-- TCS Dependencies -->
    <!--
    <property name="configmanager.version" value="2.1.3"/>
    <property name="configmanager.jar.name" value="configuration_manager.jar"/>
    <property name="configmanager.path" value="configuration_manager/${configmanager.version}"/>
    <property name="configmanager.jar" value="${tcs_libdir}/${configmanager.path}/${configmanager.jar.name}"/>
    -->

    <!--Change this property to a valid Tomcat 5.x home dir to run tests in server environment-->
    <property name="cactus.home.tomcat5x" value="C:/Program Files/Apache Software Foundation/Tomcat 5.0"/>


    <!--cactus classpath-->
    <path id="cactus.classpath">
        <path refid="test.build.classpath"/>
        <pathelement location="${aspectjrt.jar}"/>
        <pathelement location="${cactus.jar}"/>
        <pathelement location="${cactus.ant.jar}"/>
        <pathelement location="${cargo.jar}"/>
        <pathelement location="${commons.httpclient.jar}"/>
        <pathelement location="${commons.logging.jar}"/>
        <pathelement location="${junit.jar}"/>
    </path>

    <!--cactus taskdefs-->
    <taskdef resource="cactus.tasks" classpathref="cactus.classpath"/>

    <!-- Java Locations -->
    <property name="java_1_3_bootclasspath" value="c:\program files\JavaSoft\JRE\1.3.1\lib\rt.jar"/>

    <!-- Java Sun Creator -->
    <path id="jsf.classpath">
        <pathelement location="${jsf-api.jar}"/>
        <pathelement location="${jsp-api.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-collections.jar}"/>
        <pathelement location="${commons-digester.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${jsf-impl.jar}"/>
        <pathelement location="${jsfmetadata.jar}"/>
        <pathelement location="${jsfcl.jar}"/>
        <pathelement location="${jsfcl-dt.jar}"/>
        <pathelement location="${designtime.jar}"/>
        <!--needed to test PropertyEditor as it needs a superclass from that-->
        <pathelement location="${rave.home}/lib/openide.jar"/>
    </path>

    <path id="buildlibs">
        <!--
        <pathelement location="${junit.jar}" />
        <pathelement location="${configmanager.jar}" />
        <pathelement location="${configdir}" />
        <pathelement location="${testfiles}" />
        -->
        <path refid="jsf.classpath"/>
    </path>

    <path id="test.build.classpath">
        <pathelement location="${build_testclassdir}"/>
        <pathelement location="${build_classdir}"/>
        <pathelement location="${build_designdir}"/>
        <path refid="buildlibs"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <target name="compile" description="compiles the runtime source">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true"
               verbose="${verbose}">
            <classpath refid="buildlibs"/>
        </javac>

        <filter token="title" value="${component} - ${component_version}"/>
        <filter token="package" value="${package}"/>
        <filter token="version" value="${component_version}"/>
        <filter token="project-artifact" value="${component}"/>
        <filter token="taglib-uri" value="http://www.topcoder.com/${component}"/>

        <mkdir dir="${build_configdir}"/>
        <copy todir="${build_configdir}" filtering="on">
            <fileset dir="${configdir}"/>
        </copy>
    </target>

    <target name="compile_targets">
        <!-- test compile against 1.3 -->
        <mkdir dir="${build_targetclassdir}"/>
        <mkdir dir="${javatests}"/>
        <javac srcdir="${javamain}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
               debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
            >
            <classpath refid="buildlibs"/>
        </javac>

        <!-- compile test cases -->
        <javac srcdir="${javatests}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
               debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
            >
            <classpath refid="buildlibs"/>
        </javac>
        <delete dir="${build_targetclassdir}"/>
    </target>


     <target name="compile_tests" depends="compile,design,demo-webapp"
            description="compiles the test sources into a cactified war file">

        <!--compile the testcases-->
        <mkdir dir="${build_testclassdir}"/>
        <javac destdir="${build_testclassdir}" debug="true">
            <src path="${javatests}"/>
            <classpath>
                <path refid="cactus.classpath"/>
                <pathelement location="${httpunit.jar}"/>
                <pathelement location="${build_examples}"/>
            </classpath>
        </javac>

        <!-- Cactify the web-app archive -->
        <cactifywar srcfile="${component.war}"
                    destfile="${build_distdir}/${distfilename}-cactified.war">
            <classes dir="${build_testclassdir}"/>
            <lib file="${httpunit.jar}"/>
            <servletredirector/>
            <fileset dir="${basedir}/test_files/cactus-testfiles/web"/>
        </cactifywar>
    </target>

   <target name="test" depends="compile_tests" description="runs the test inside the configured Tomcat instance">
        <mkdir dir="${testlogdir}"/>
        <!-- Run the tests -->
        <cactus warfile="${build_distdir}/${distfilename}-cactified.war"
                fork="yes" failureproperty="tests.failed" haltonerror="true">

            <classpath>
                <path refid="test.build.classpath"/>
                <path refid="cactus.classpath"/>
                <!--<pathelement location="${clover.jar}"/>-->
                <pathelement location="${tidy.jar}"/>
                <pathelement location="${httpunit.jar}"/>
                <pathelement location="${build_testclassdir}"/>
            </classpath>

            <containerset>
                <tomcat5x if="cactus.home.tomcat5x"
                          dir="${cactus.home.tomcat5x}" port="12388"
                          output="${testlogdir}/tomcat5x.out"
                          todir="${testlogdir}"/>
            </containerset>
            <formatter type="brief" usefile="true"/>
            <formatter type="xml" usefile="true"/>
            <formatter type="brief" usefile="false"/>

            <test name="${package}.AllTests"/>
        </cactus>
    </target>

    <target name="reports" depends="test" description="creates HTML reports from the test XML logs">
        <mkdir dir="${reports}"/>

        <junitreport todir="${reports}">
            <fileset dir="${testlogdir}">
                <include name="*.xml"/>
            </fileset>
            <report format="frames" todir="${reports}"/>
        </junitreport>
        <echo>The execution of reports is complete. Reports are available in /${reports}</echo>
    </target>

    <target name="dist" depends="compile">
        <mkdir dir="${dist_lib}/${component_path}"/>
        <jar jarfile="${component.jar}" basedir="${build_classdir}"/>
    </target>

    <target name="dist_tests" depends="compile_tests">
        <mkdir dir="${dist_lib}"/>
        <jar jarfile="${component.tests.jar}" basedir="${build_testclassdir}"/>
    </target>

    <target name="javadoc" depends="compile" description="builds the javadoc for the source">
        <mkdir dir="${dist_javadocs}"/>
        <javadoc packagenames="${package}.*"
                 destdir="${dist_javadocs}"
                 windowtitle="Topcoder Software"
                 header="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
                 footer="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
                 bottom="&lt;font class=tcoder5&gt;Contact TopCoder Software at &lt;a href='http://www.topcodersoftware.com'&gt;www.topcodersoftware.com&lt;/a&gt;&lt;/font&gt;"
                 stylesheetfile="${javadocsdir}/stylesheet.css"
                 verbose="${verbose}">
            <tag name="copyright" description="Copyright:" scope="types"/>
            <sourcepath>
                <pathelement path="${javamain}"/>
                <pathelement path="${designsrc}"/>
            </sourcepath>
            <classpath>
                <path refid="buildlibs"/>
                <pathelement path="${build_designdir}"/>
            </classpath>
        </javadoc>
    </target>

    <target name="clean" description="deletes al files that were generated during build">
        <delete dir="${builddir}"/>
    </target>


    <target name="deploy" depends="dist">
    </target>

    <target name="main" depends="deploy,test">
    </target>

    <!-- Java Sun Creator -->
    <target name="rt-jar"
            depends="compile"
            description="Create runtime jar">
        <mkdir dir="${builddir}/lib"/>

        <copy todir="${builddir}/classes/META-INF">
            <fileset dir="${build_configdir}">
                <include name="faces-config.xml"/>
                <include name="*.tld"/>
            </fileset>
        </copy>

        <jar jarfile="${builddir}/lib/${component}.jar"
             basedir="${builddir}/classes"
             manifest="${build_configdir}/manifest-rt.mf"/>
    </target>

    <target name="generate" depends="rt-jar"
            description="Generate BeanInfoBase design time support classes">
        <mkdir dir="${build_generatedir}"/>

        <java classname="com.sun.rave.jsfmeta.generators.Main"
              failonerror="true"
              fork="true">
            <arg line="-d ${build_generatedir}"/>
            <arg line="-f jar:file:${jsf-impl.jar}!/com/sun/faces/standard-html-renderkit.xml"/>
            <arg line="-f jar:file:${jsfmetadata.jar}!/com/sun/rave/jsfmeta/standard-html-renderkit-overlay.xml"/>
            <arg line="-x"/>
            <arg line="-f file:${build_configdir}/faces-config.xml"/>
            <arg line="-f file:${build_configdir}/sun-faces-config.xml"/>
            <arg line="--cpBeanInfoBase"/>
            <classpath refid="jsf.classpath"/>
        </java>
    </target>


    <target name="design"
            depends="generate"
            description="Compile design time support classes">
        <mkdir dir="${build_designdir}"/>

        <!-- Compile all design time classes -->
        <javac srcdir="${build_generatedir}:${designsrc}"
               destdir="${build_designdir}"
               debug="true"
               verbose="${verbose}">
            <classpath refid="runtime.classpath"/>
        </javac>

        <!-- Copy non-Java Sources -->
        <copy todir="${build_designdir}">
            <fileset dir="${designsrc}">
                <exclude name="**/CVS/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/.nbattrs"/>
            </fileset>
            <fileset dir="${build_generatedir}">
                <exclude name="**/CVS/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/.nbattrs"/>
            </fileset>
        </copy>
    </target>

    <target name="dt-jar" depends="design"
            description="Create design time jar file">
        <mkdir dir="${builddir}/lib"/>
        <jar jarfile="${builddir}/lib/${component}-dt.jar"
             basedir="${builddir}/design"/>
    </target>

    <target name="complib" depends="rt-jar, dt-jar, javadoc"
            description="Create library package, AKA a complib">
        <mkdir dir="${builddir}/complib"/>
        <!-- Runtime and any designtime jars -->
        <copy todir="${builddir}/complib">
            <fileset dir="${builddir}/lib">
                <include name="${component}.jar"/>
                <include name="${component}-dt.jar"/>
            </fileset>
        </copy>

        <!-- Javadoc -->
        <zip destfile="${builddir}/complib/${component}-doc.zip"
             basedir="${dist_javadocs}"/>

        <!-- Source files -->
        <zip destfile="${builddir}/complib/${component}-src.zip">
            <fileset dir="${javamain}">
                <include name="${packagedir}/**"/>
            </fileset>
        </zip>

        <!-- Build the complib itself -->
        <delete file="${build_distdir}/${component}-${component_version}.complib"/>
        <jar jarfile="${build_distdir}/${component}-${component_version}.complib"
             basedir="${builddir}/complib"
             manifest="${build_configdir}/manifest-complib.mf"/>
    </target>

    <target name="demo-webapp" description="Builds a web application that demonstrates the component" depends="rt-jar">
        <mkdir dir="${build_examples}"/>
        <mkdir dir="${build_distdir}"/>
        <javac srcdir="${basedir}/test_files/demoWebapp/src"
               destdir="${build_examples}"
               debug="true"
               verbose="${verbose}">
            <classpath>
                <path refid="runtime.classpath"/>
                <fileset dir="${builddir}/lib" includes="${component}.jar"/>
            </classpath>
        </javac>
        <war warfile="${component.war}" webxml="${basedir}/test_files/demoWebApp/web.xml">
            <classes dir="${build_examples}"/>
            <lib file="${jsf-api.jar}"/>
            <lib file="${commons-beanutils.jar}"/>
            <lib file="${commons-collections.jar}"/>
            <lib file="${commons-digester.jar}"/>
            <lib file="${commons-logging.jar}"/>
            <lib file="${jsf-impl.jar}"/>
            <lib file="${jsfmetadata.jar}"/>
            <lib file="${jsfcl.jar}"/>
            <lib file="${jsfcl-dt.jar}"/>
            <lib file="${rave.home}/modules/autoload/ext/jstl.jar"/>
            <lib file="${rave.home}/SunAppServer8/lib/appserv-jstl.jar"/>

            <lib file="${builddir}/lib/${component}.jar"/>
            <fileset dir="${basedir}/test_files/demoWebapp/web"/>
        </war>

    </target>

</project>
