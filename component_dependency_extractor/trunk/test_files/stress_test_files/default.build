<?xml version="1.0"?>
<project name="NORM Issue Entities" default="compile" basedir=".">
  <tstamp property="build.date" pattern="dd-MM-yyyy" verbose="true"/>
  <sysinfo verbose="true"/>

  <property name="main_project_folder" value="Hyperion.Common.Entities.Issues" />
  <property name="component" value="NORM Issue Entities" />
  <property name="distfilename" value="NORM_Issue_Entities" />
  <property name="namespace" value="Hyperion\Common\Entities" />
  <property name="namespace_file" value="Hyperion.Common.Entities.Issues" />

  <property name="component_version" value="2.0.0" />

  <property name="copyright" value="Copyright (c) 2008, TopCoder, Inc. All rights reserved." />

  <!--  REFERENCE TO NUNIT -->
  <property name="Nunit" value="D:\study\NUnit-2.2.8-net-2.0\bin\nunit.framework.dll"/>
  <property name="NunitConsole" value="D:\study\NUnit-2.2.8-net-2.0\bin\nunit-console.exe"/>
  <property name="NDoc" value="C:\Program Files\NDoc 1.3\bin\net\1.1\NDocConsole.exe"/>

  <!--  REFERENCE TO NCOVER -->
  <property name="NCoverHome" value="C:\Program Files\NCover"/>
  <property name="NCoverConsole" value="${NCoverHome}\NCover.Console.exe"/>
  <property name="NCoverStyle" value="${NCoverHome}\CoverageReport.xsl"/>

  <property name="debug" value="true"/>
  <property name="verbose" value="true" />
  <property name="component_path" value="${distfilename}\${component_version}" />

  <!-- directories -->
  <property name="builddir" value="build" />
  <property name="configdir" value="conf" />
  <property name="libdir" value="lib" />
  <property name="testlogdir" value="log" />
  <property name="testfiles" value="test_files" />
  <property name="tcs" value="..\tcs"/>

  <!-- Base directory for all third party components. -->
  <property name="ext_bin" value="${tcs}\bin"/>

  <!-- Base directory for all TCS components. -->
  <property name="tcs_bin" value="${ext_bin}\tcs"/>

  <!-- NUNIT's output needs to go back to the root these next two properties should correspond -->
  <property name="build_classdir" value="${builddir}\classes" />
  <property name="root_from_build_classdir" value="..\.." />
  <property name="TestOutputXml" value="${testlogdir}\${namespace_file}.Test.dll-results.xml"/>
  <property name="TestOutputText" value="${testlogdir}\${namespace_file}.Test.dll-results.log"/>

  <!-- NCover's output properties -->
  <property name="CoverageOutputXml" value="${testlogdir}\${namespace_file}.Test.dll-coverage.xml"/>
  <property name="CoverageOutputStyleSheet" value="${testlogdir}\coverage.xsl"/>
  <property name="CoverageNunitXml" value="${testlogdir}\${namespace_file}.Test.dll-coverage-unit.xml"/>
  <property name="CoverageLogFile" value="${testlogdir}\NCover.log.txt"/>

  <!-- Include the global system settings.  The settings in this file will override any settings for the same properties
         included above this line, so if the global file is correct there is no need to edit this file. 
  <include buildfile="../../topcoder_global.build" failonerror="false" />
  -->

  <!-- 3rd party dependencies -->
  <property name="System.Core.dll" value="c:\Program Files\Reference Assemblies\Microsoft\Framework\v3.5\System.Core.dll" />
  <property name="System.Data.DataSetExtensions.dll"
            value="c:\Program Files\Reference Assemblies\Microsoft\Framework\v3.5\System.Data.DataSetExtensions.dll" />

  <!-- TopCoder dependencies -->
  <property name="logging_wrapper.dll" value="${tcs_bin}\logging_wrapper\3.0\TopCoder.LoggingWrapper.dll" />
  <property name="TopCoder.Util.DataValidator.dll" value="${tcs_bin}\Data_Validation\1.0\TopCoder.Util.DataValidator.dll" />
  <property name="ConfigurationManager.dll" value="${tcs_bin}\Configuration_Manager\2.0.1\TopCoder.Util.ConfigurationManager.dll"/>
  <property name="ExceptionManager.dll" value="${tcs_bin}\Exception_Manager\1.0.1\TopCoder.Util.ExceptionManager.dll" />
  <property name="SelfDocumentingException.dll" value="${tcs_bin}\Self-Documenting_Exception\1.0.1\TopCoder.Util.ExceptionManager.SDE.dll" />

  <!--   ****************************************************  -->
  <property name="build_testclassdir" value="${builddir}\testClasses\" />
  <property name="build_distdir" value="${builddir}\dist" />
  <property name="build_tcsdistdir" value="${build_distdir}\${distfilename}-${component_version}" />
  <property name="build_docsdir" value="${builddir}\docs" />
  <property name="build_docpackage" value="${builddir}\doc_package" />
  <property name="testdocsresult_dir" value="${build_docsdir}\testResults" />

  <property name="build_xmldocsdir" value="${build_docsdir}\xmldoc\" />
  <property name="build_msdndir" value="${build_docsdir}\msdn" />

  <property name="msdnfile" value="msdndocs.zip" />
  <property name="docpackagefile" value="${distfilename}_docs.zip" />

  <property name="component_src" value="${main_project_folder}" />
  <property name="stored_procedures_src" value="${component_src}.StoredProcedures" />
  <property name="developer_test_src" value="${component_src}.DeveloperTests" />
  <property name="accuracy_test_src" value="${component_src}.AccuracyTests" />
  <property name="failure_test_src" value="${component_src}.FailureTests" />
  <property name="stress_test_src" value="${component_src}.StressTests" />
  <property name="dotnetsrc" value="." />
  <property name="dotnetmain" value="${dotnetsrc}\${component_src}" />
  <property name="dotnettests" value="${dotnetsrc}\${developer_test_src}" />
  <property name="accuracytests" value="${dotnetsrc}\${accuracy_test_src}" />
  <property name="failuretests" value="${dotnetsrc}\${failure_test_src}" />
  <property name="stresstests" value="${dotnetsrc}\${stress_test_src}" />
  <property name="docsdir" value="docs" />

  <!-- Component distribution structure -->
  <property name="dist_conf" value="${build_tcsdistdir}\conf" />
  <property name="dist_test_files" value="${build_tcsdistdir}\test_files" />
  <property name="dist_bin" value="${build_distdir}\bin" />
  <property name="dist_examples" value="${build_tcsdistdir}\examples" />
  <property name="dist_src" value="${build_tcsdistdir}\${main_project_folder}" />
  <property name="dist_stored_procedures_src" value="${build_tcsdistdir}\${main_project_folder}.stored_procedures" />
  <property name="dist_developer_test_src" value="${build_tcsdistdir}\${main_project_folder}.developer_tests" />
  <property name="dist_accuracy_test_src" value="${build_tcsdistdir}\${main_project_folder}.accuracy_tests" />
  <property name="dist_failure_tests_src" value="${build_tcsdistdir}\${main_project_folder}.failure_tests" />
  <property name="dist_stress_tests_src" value="${build_tcsdistdir}\${main_project_folder}.stress_tests" />
  <property name="dist_docs" value="${build_tcsdistdir}\docs" />
  <property name="test_results" value="${dist_docs}\test_results" />
  <property name="msdn_docs" value="${dist_docs}\msdn_docs" />
  <property name="xml_docs" value="${dist_docs}\xml" />
  <property name="source_xml_docs" value="${xml_docs}\source" />
  <property name="test_xml_docs" value="${xml_docs}\tests" />
  <property name="component.zip" value="${dist_bin}\${component_path}\${distfilename}.zip"/>
  <property name="component_version_name.zip" value="${distfilename}-${component_version}.zip"/>
  <property name="component.dist.zip" value="${build_distdir}\${component_version_name.zip}"/>

  <property name="design_dist.zip" value="${distfilename}_${component_version}_design_dist.zip"/>
  <property name="dev_dist.zip" value="${distfilename}_${component_version}_dev_dist.zip"/>

  <property name="docs_coverage" value="${docsdir}\coverage" />
  <property name="dist_coverage" value="${build_tcsdistdir}\docs\coverage" />

  <!-- builds -->
  <property name="design_submission.zip" value="${distfilename}_${component_version}_design_submission.zip"/>
  <property name="dev_submission.zip" value="${distfilename}_${component_version}_dev_submission.zip"/>

  <property name="entities_dll" value="${build_classdir}\${namespace_file}.dll"/>
  <property name="sp_dll" value="${build_classdir}\${namespace_file}.StoredProcedures.dll" />


  <target name="dist_docs">
    <mkdir dir="${source_xml_docs}"/>
    <mkdir dir="${test_xml_docs}"/>
    <mkdir dir="${test_results}"/>
    <mkdir dir="${msdn_docs}"/>
    <mkdir dir="${build_msdndir}"/>

    <copy file="${build_docsdir}\${namespace_file}.xml" todir="${source_xml_docs}"/>
    <copy file="${build_docsdir}\${namespace_file}.StoredProcedures.xml" todir="${source_xml_docs}"/>
    <copy file="${build_docsdir}\${namespace_file}.DeveloperTest.xml" todir="${test_xml_docs}"/>
    <copy file="${build_docsdir}\${namespace_file}.AccuracyTest.xml" todir="${test_xml_docs}"/>
    <copy file="${build_docsdir}\${namespace_file}.FailureTest.xml" todir="${test_xml_docs}"/>
    <copy file="${build_docsdir}\${namespace_file}.StressTest.xml" todir="${test_xml_docs}"/>

    <copy todir="${test_results}">
      <fileset basedir="${testdocsresult_dir}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/*.xml"/>
      </fileset>
    </copy>
    <copy todir="${msdn_docs}">
      <fileset basedir="${build_msdndir}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/*.chm"/>
      </fileset>
    </copy>

    <copy file="${build_msdndir}\${distfilename}.chm" todir="${dist_docs}"/>
  </target>

  <target name="compile" >
    <mkdir dir="${build_classdir}"/>
    <mkdir dir="${build_docsdir}"/>

    <csc target="library" output="${build_classdir}\${namespace_file}.dll"
         doc="${build_classdir}\${namespace_file}.xml" >
      <sources>
        <include name="${dotnetmain}\**.cs"/>
      </sources>
      <references>
        <include name="${logging_wrapper.dll}"/>
        <include name="${ConfigurationManager.dll}"/>
        <include name="${TopCoder.Util.DataValidator.dll}"/>
        <include name="${ExceptionManager.dll}"/>
        <include name="${SelfDocumentingException.dll}"/>
        <include name="${System.Data.DataSetExtensions.dll}"/>
        <include name="${System.Core.dll}"/>
      </references>
    </csc>

    <csc target="library" output="${build_classdir}\${namespace_file}.StoredProcedures.dll" 
         doc="${build_classdir}\${namespace_file}.StoredProcedures.xml" >
      <sources>
        <include name="${dotnetmain}.StoredProcedures\**.cs"/>
      </sources>
    </csc>
    <copy file="${build_classdir}\${namespace_file}.xml" todir="${build_docsdir}" />
    <copy file="${build_classdir}\${namespace_file}.StoredProcedures.xml" todir="${build_docsdir}" />
  </target>

  <target name="clean">
    <mkdir dir="${builddir}"/>
    <mkdir dir="${dist_docs}"/>
    <delete verbose="${verbose}">
      <fileset defaultexcludes="false" >
        <include name="${builddir}/**/**"/>
        <include name="*.zip"/>
        <include name="${dist_docs}/**.zip"/>
      </fileset>
    </delete>
  </target>

  <target name="compile_tests" depends="compile">
    <mkdir dir="${build_testclassdir}"/>

    <echo message="Please make sure that Nunit 2.0 is installed."/>
    <echo message="The NUnit property is currently pointing to: ${Nunit}."/>
    <echo message="If this is incorrect please adjust the Nunit property to point to the correct location."/>

    <echo message="Compiling Developer Tests" />
    <csc target="library" doc="${build_classdir}\${namespace_file}.DeveloperTest.xml"
                          output="${build_classdir}\${namespace_file}.DeveloperTest.dll"
                          failonerror="true" debug="true">
      <sources>
        <include name="${dotnettests}\**.cs" />
      </sources>

      <references>
        <include name="${Nunit}"/>
        <include name="${entities_dll}"/>
	<include name="${sp_dll}"/>
        <include name="${logging_wrapper.dll}"/>
        <include name="${ConfigurationManager.dll}"/>
        <include name="${TopCoder.Util.DataValidator.dll}"/>
        <include name="${ExceptionManager.dll}"/>
        <include name="${SelfDocumentingException.dll}"/>
        <include name="${System.Data.DataSetExtensions.dll}"/>
        <include name="${System.Core.dll}"/>
      </references>
    </csc>
    <copy file="${build_classdir}\${namespace_file}.DeveloperTest.xml" todir="${build_docsdir}" />

    <echo message="Compiling Accuracy Tests" />
    <csc target="library" doc="${build_classdir}\${namespace_file}.AccuracyTest.xml"
                          output="${build_classdir}\${namespace_file}.AccuracyTest.dll"
                          failonerror="true" debug="true">
      <sources>
        <include name="${accuracytests}\**.cs" />
      </sources>
      <references>
        <include name="${Nunit}"/>
        <include name="${logging_wrapper.dll}"/>
        <include name="${ConfigurationManager.dll}"/>
        <include name="${TopCoder.Util.DataValidator.dll}"/>
        <include name="${ExceptionManager.dll}"/>
        <include name="${SelfDocumentingException.dll}"/>
        <include name="${System.Data.DataSetExtensions.dll}"/>
        <include name="${System.Core.dll}"/>
        <include name="${build_classdir}\${namespace_file}.dll"/>
        <include name="${build_classdir}\${namespace_file}.StoredProcedures.dll"/>
      </references>
    </csc>
    <copy file="${build_classdir}\${namespace_file}.AccuracyTest.xml" todir="${build_docsdir}" />

    <echo message="Compiling Failure Tests" />
    <csc target="library" doc="${build_classdir}\${namespace_file}.FailureTest.xml"
                          output="${build_classdir}\${namespace_file}.FailureTest.dll"
                          failonerror="true" debug="true">
      <sources>
        <include name="${failuretests}\**.cs" />
      </sources>
      <references>
        <include name="${Nunit}"/>
        <include name="${logging_wrapper.dll}"/>
        <include name="${ConfigurationManager.dll}"/>
        <include name="${TopCoder.Util.DataValidator.dll}"/>
        <include name="${ExceptionManager.dll}"/>
        <include name="${SelfDocumentingException.dll}"/>
        <include name="${System.Data.DataSetExtensions.dll}"/>
        <include name="${System.Core.dll}"/>
        <include name="${build_classdir}\${namespace_file}.dll"/>
        <include name="${build_classdir}\${namespace_file}.dll"/>
        <include name="${build_classdir}\${namespace_file}.StoredProcedures.dll"/>
      </references>
    </csc>
    <copy file="${build_classdir}\${namespace_file}.FailureTest.xml" todir="${build_docsdir}" />

    <echo message="Compiling Stress Tests" />
    <csc target="library" doc="${build_classdir}\${namespace_file}.StressTest.xml"
                          output="${build_classdir}\${namespace_file}.StressTest.dll"
                          failonerror="true" debug="true">
      <sources>
        <include name="${stresstests}\**.cs" />
      </sources>
      <references>
        <include name="${Nunit}"/>
        <include name="${logging_wrapper.dll}"/>
        <include name="${ConfigurationManager.dll}"/>
        <include name="${TopCoder.Util.DataValidator.dll}"/>
        <include name="${ExceptionManager.dll}"/>
        <include name="${SelfDocumentingException.dll}"/>
        <include name="${System.Data.DataSetExtensions.dll}"/>
        <include name="${System.Core.dll}"/>
        <include name="${build_classdir}\${namespace_file}.dll"/>
        <include name="${build_classdir}\${namespace_file}.StoredProcedures.dll"/>
      </references>
    </csc>
    <copy file="${build_classdir}\${namespace_file}.StressTest.xml" todir="${build_docsdir}" />
  </target>

  <target name="copy_dependencies">
    <mkdir dir="${build_classdir}" />

    <copy file="${ConfigurationManager.dll}" todir="${build_classdir}" />
    <copy file="${logging_wrapper.dll}" todir="${build_classdir}" />
    <copy file="${TopCoder.Util.DataValidator.dll}" todir="${build_classdir}" />
    <copy file="${ExceptionManager.dll}" todir="${build_classdir}" />
    <copy file="${SelfDocumentingException.dll}" todir="${build_classdir}" />
    <copy file="${System.Data.DataSetExtensions.dll}" todir="${build_classdir}" />
    <copy file="${System.Core.dll}" todir="${build_classdir}" />
    <copy file="${Nunit}" todir="${build_classdir}" />
  </target>

  <target name="test" depends="compile_tests,copy_dependencies">
    <mkdir dir="${testlogdir}"/>

    <echo message="Please make sure that nunit-console is in your path."/>
    <echo message="This file can be found in the NUnit bin directory."/>

    <nunit2 verbose="true">
      <formatter type="Plain" usefile="true" outputdir="${testlogdir}" extension=".log"/>
      <test assemblyname="${build_classdir}\${namespace_file}.StressTest.dll"/>
      <test assemblyname="${build_classdir}\${namespace_file}.FailureTest.dll"/>
      <test assemblyname="${build_classdir}\${namespace_file}.DeveloperTest.dll"/>
      <test assemblyname="${build_classdir}\${namespace_file}.AccuracyTest.dll"/>
    </nunit2>
  </target>


  <target name="dist" depends="compile_tests">
    <mkdir dir="${dist_bin}/${component_path}"/>

    <zip zipfile="${component.zip}">
      <fileset basedir="${build_classdir}" defaultexcludes="true">
      	<include name="${namespace_file}.dll" />
      	<include name="${namespace_file}.StoredProcedures.dll" />
      </fileset>
    </zip>
  </target>

  <target name="generate_docs" depends="msdn" />

  <target name="deploy" depends="dist">
  </target>

  <target name="main" depends="deploy,test">
  </target>

  <target name="nunitreport" depends="test">
    <!-- By default the report is in english, format is noframes by default -->
    <mkdir dir="${testdocsresult_dir}"/>
    <nunit2report format="frames" opendesc="yes"  todir="${testdocsresult_dir}"  >
      <fileset>
        <include name="${TestOutputXml}" />
      </fileset>
      <summaries>
        <include name="${build_docsdir}\${namespace_file}.Test.xml" />
      </summaries>
    </nunit2report>

    <echo message="NUnit frame report generated."/>
  </target>

  <target name="ncoverreport" description="Code coverage test run." depends="compile_tests">
    <echo message="Starting NUnit code coverage run..."/>
    <exec program="${NCoverConsole}"
          commandline="&quot;${NunitConsole}&quot; ${build_classdir}\${namespace_file}.DeveloperTest.dll /xml=${CoverageNunitXml} //l ${CoverageLogFile} //x ${CoverageOutputXml} //ea ${namespace_file}.CoverageExcludeAttribute"
          workingdir="." failonerror="true" verbose="true">
    </exec>

    <!-- copy stylesheet -->
    <copy file="${NCoverStyle}" tofile="${CoverageOutputStyleSheet}" />

    <echo message="NCover report generated."/>
  </target>

  <target name="msdn" depends="compile_tests,copy_dependencies">
    <mkdir dir="${build_msdndir}"/>
    <echo message="Requires Microsoft's HTML Help Compiler (hhc.exe) is in your path."/>
    <ndoc verbose="true">
      <assemblies>
        <include name="${build_classdir}\${namespace_file}.DeveloperTest.dll"/>
        <include name="${build_classdir}\${namespace_file}.AccuracyTest.dll"/>
        <include name="${build_classdir}\${namespace_file}.FailureTest.dll"/>
        <include name="${build_classdir}\${namespace_file}.StressTest.dll"/>
      </assemblies>
      <summaries >
        <include name="${build_classdir}\${namespace_file}.DeveloperTest.xml"/>
        <include name="${build_classdir}\${namespace_file}.AccuracyTest.xml"/>
        <include name="${build_classdir}\${namespace_file}.FailureTest.xml"/>
        <include name="${build_classdir}\${namespace_file}.StressTest.xml"/>
      </summaries>
      <documenters>
        <documenter name="MSDN">
          <property name="OutputDirectory" value="${build_msdndir}" />
          <property name="HtmlHelpName" value="${distfilename}" />
          <property name="HtmlHelpCompilerFilename" value="hhc.exe" />
          <property name="IncludeFavorites" value="False" />
          <property name="Title" value="${component}" />
          <property name="SplitTOCs" value="False" />
          <property name="DefaulTOC" value="" />
          <property name="ShowVisualBasic" value="False" />
          <property name="ShowMissingSummaries" value="False" />
          <property name="ShowMissingRemarks" value="False" />
          <property name="ShowMissingParams" value="False" />
          <property name="ShowMissingReturns" value="False" />
          <property name="ShowMissingValues" value="False" />
          <property name="DocumentInternals" value="False" />
          <property name="DocumentProtected" value="False" />
          <property name="DocumentPrivates" value="False" />
          <property name="DocumentEmptyNamespaces" value="False" />
          <property name="IncludeAssemblyVersion" value="True" />
          <property name="CopyrightText" value="${copyright}" />
          <property name="CopyrightHref" value="" />
          <property name="AutoDocumentConstructors" value="True" />
        </documenter>
      </documenters>
    </ndoc>
  </target>


  <!-- ************************************************************************** -->
  <!-- ************ REMOVE EVERYTHING BELOW HERE FOR THE DISTRIBUTION ************* -->
  <!-- ************************************************************************** -->
  <target name="design_dist">
    <zip zipfile="${design_dist.zip}">
      <fileset defaultexcludes="true">
        <include name="*.sln" />
        <include name="README.txt" />
        <include name="default.build"/>
        <include name="${docsdir}\**" />
        <include name="${configdir}\**" />
        <include name="${libdir}\**" />
        <include name="${main_project_folder}*\**" />

        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </zip>
  </target>

  <target name="dev_dist">
    <zip zipfile="${dev_dist.zip}">
      <fileset defaultexcludes="true">
        <include name="*.sln" />
        <include name="README.txt" />
        <include name="default.build"/>
        <include name="${docsdir}\**" />
        <include name="${configdir}\**" />
        <include name="${libdir}\**" />
        <include name="${main_project_folder}*\**" />

        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </zip>
  </target>

  <target name="design_submission" >
    <zip zipfile="${design_submission.zip}"   >
      <fileset defaultexcludes="true">
        <include name="*.sln" />
        <include name="${configdir}/**"/>
        <include name="${main_project_folder}*\**" />

        <include name="${docsdir}/**"/>
        <include name="${testfiles}/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </zip>
  </target>

  <target name="dev_submission" depends="test">
    <zip zipfile="${dev_submission.zip}">
      <fileset defaultexcludes="true">
        <include name="${configdir}/**"/>
        <include name="${main_project_folder}*\**" />

        <include name="${docsdir}/**" />
        <include name="${testfiles}/**"/>
        <include name="${testlogdir}/**" />
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
      </fileset>
    </zip>
  </target>

  <target name="dist_tcs" depends="create_dist">
    <mkdir dir="${tcs_bin}" />
    <mkdir dir="${tcs_bin}\${distfilename}" />
    <mkdir dir="${tcs_bin}\${distfilename}\${component_version}" />
    <mkdir dir="${tcs_bin}\${distfilename}\${component_version}\dist" />
    <copy file="${component.dist.zip}" todir="${tcs_bin}\${component_path}\dist" />
    <copy file="${build_classdir}\${namespace_file}.dll" todir="${tcs_bin}\${component_path}" />
    <copy file="${build_classdir}\${namespace_file}.StoredProcedures.dll" todir="${tcs_bin}\${component_path}" />
  </target>

  <target name="package_docs" depends="msdn">
    <mkdir dir="${build_docpackage}" />

    <zip zipfile="${build_docpackage}\${msdnfile}">
      <fileset basedir="${build_msdndir}" defaultexcludes="true">
        <include name="**/*" />
        <exclude name="**/*.chm" />
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </zip>

    <copy todir="${build_docpackage}">
      <fileset basedir="${docsdir}">
        <include name="${component}_Class_Diagram*"/>
        <include name="${component}_Use_Case_Diagram*"/>
        <include name="${component}_Sequence_Diagram*"/>
        <include name="${component}_Requirements_Specification.pdf"/>
        <include name="${component}_Component_Specification.pdf"/>
      </fileset>
    </copy>

    <zip zipfile="${builddir}\${docpackagefile}">
      <fileset basedir="${build_docpackage}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </zip>
  </target>

  <target name="create_dist" depends="generate_docs,dist,dist_docs,package_docs">
    <!-- define tcs distribution format -->
    <mkdir dir="${dist_conf}"/>
    <mkdir dir="${dist_src}"/>
    <mkdir dir="${dist_stored_procedures_src}"/>
    <mkdir dir="${dist_test_files}"/>

    <mkdir dir="${dist_coverage}"/>
    <mkdir dir="${docs_coverage}"/>

    <copy todir="${dist_coverage}">
      <fileset basedir="${testlogdir}" defaultexcludes="true">
        <include name="${namespace_file}*-coverage*.xml" />
        <include name="coverage.xsl"  />
        <include name="NCover.log.txt" />
      </fileset>
    </copy>

    <copy todir="${docs_coverage}">
      <fileset basedir="${testlogdir}" defaultexcludes="true">
        <include name="${namespace_file}*-coverage*.xml" />
        <include name="coverage.xsl"  />
        <include name="NCover.log.txt" />
      </fileset>
    </copy>

    <copy todir="${build_tcsdistdir}">
      <fileset basedir="." defaultexcludes="true">
        <include name="*.sln" />
        <include name="README.txt" />
      </fileset>
    </copy>

    <copy todir="${dist_src}">
      <fileset basedir="${component_src}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </copy>

    <copy todir="${dist_stored_procedures_src}">
      <fileset basedir="${stored_procedures_src}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </copy>
    
    <copy todir="${dist_developer_test_src}">
      <fileset basedir="${developer_test_src}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </copy>

    <copy todir="${dist_accuracy_test_src}">
      <fileset basedir="${accuracy_test_src}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </copy>

    <copy todir="${dist_failure_tests_src}">
      <fileset basedir="${failure_test_src}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </copy>

    <copy todir="${dist_stress_tests_src}">
      <fileset basedir="${stress_test_src}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </copy>

    <copy todir="${dist_conf}">
      <fileset basedir="${configdir}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </copy>
    <copy todir="${dist_test_files}">
      <fileset basedir="${testfiles}" defaultexcludes="true">
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </copy>

    <copy todir="${dist_docs}">
      <fileset basedir="${docsdir}" defaultexcludes="true">
        <include name="${component}_Class_Diagram*"/>
        <include name="${component}_Use_Case_Diagram*"/>
        <include name="${component}_Sequence_Diagram*"/>
        <include name="${component}_Requirements_Specification*"/>
        <include name="${component}_Component_Specification*"/>
        <include name="${component}.zargo"/>
        <include name="${component}.zuml"/>
        <include name="${component}.tcuml"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </copy>

    <copy file="default_dist.build" tofile="${build_tcsdistdir}/default.build" failonerror="false" />
    <copy file="${component.zip}" tofile="${build_distdir}/${distfilename}.zip" failonerror="true" />

    <zip zipfile="${component.dist.zip}">
      <fileset basedir="${build_distdir}" defaultexcludes="true">
      	<include name="${distfilename}.zip" />
        <exclude name="${component_version_name.zip}"/>
        <include name="**/*"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/obj/**"/>
        <exclude name="**/bin/**"/>
      </fileset>
    </zip>
  </target>

  <!-- ************************************************************************** -->
  <!-- ******************** END REMOVE EVERYTHING ******************************* -->
  <!-- ************************************************************************** -->
</project>