<?xml version="1.0"?>

<project name="XMI Documenter" default="dist" basedir=".">

    <property file="../topcoder_global.properties"/>

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="XMI_Documenter"/>
    <property name="package" value="com.topcoder.xmi.util.xmidocumenter"/>
    <property name="packagedir" value="com/topcoder/xmi/util/xmidocumenter"/>
    <property name="distfilename" value="xmi_documenter"/>
    <property name="component_version" value="1.0"/>
    <property name="component_path" value="${distfilename}/${component_version}"/>

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src"/>
    <property name="tcs_libdir" value="lib/tcs"/>
    <property name="ext_libdir" value="lib"/>
    <property name="jar_tcs_libdir" value="lib/tcs"/>
    <property name="jar_ext_libdir" value="lib"/>
    <property name="docsdir" value="docs"/>
    <property name="configdir" value="conf"/>
    <property name="testlogdir" value="log"/>
    <property name="testfiles" value="test_files"/>
    <property name="javadocsdir" value="${docsdir}/javadocs"/>
    <property name="webdir" value="web"/>
    <property name="reports" value="reports"/>

    <property name="javasrc" value="${srcdir}/java"/>
    <property name="javamain" value="${javasrc}/main"/>
    <property name="javatests" value="${javasrc}/tests"/>

    <property name="builddir" value="build"/>
    <property name="build_classdir" value="${builddir}/classes"/>
    <property name="build_testclassdir" value="${builddir}/testClasses"/>
    <property name="build_targetclassdir" value="${builddir}/targetclasses"/>
    <property name="build_distdir" value="${builddir}/dist"/>
    <property name="build_docsdir" value="${builddir}/${docsdir}"/>
    <property name="build_javadocsdir" value="${builddir}/${javadocsdir}"/>
    <property name="build_webdir" value="${builddir}/${webdir}"/>
    <property name="build_lib" value="${builddir}/lib"/>
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}"/>

    <!-- EXECUTION TAGS -->
    <property name="debug" value="off"/>
    <property name="verbose" value="no"/>

    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_conf" value="${build_tcsdistdir}/${configdir}"/>
    <property name="dist_lib" value="${build_distdir}/lib/tcs"/>
    <property name="dist_src" value="${build_tcsdistdir}/${srcdir}"/>
    <property name="dist_docs" value="${build_tcsdistdir}/${docsdir}"/>
    <property name="dist_javadocs" value="${build_tcsdistdir}/${javadocsdir}"/>
    <property name="dist_testfiles" value="${build_tcsdistdir}/${testfiles}"/>

    <!-- NAME FOR .JAR AND .WAR FILES -->
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="javadoc.jar" value="javadocs.jar"/>
    <property name="component.tests.jar" value="${dist_lib}/${distfilename}_tests.jar"/>
    <property name="component.war" value="${dist_examples}/${distfilename}.war"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>
    <property name="dev_submission.jar" value="${component}_${component_version}_dev_submission.jar"/>
    <property name="design_submission.jar" value="${component}_${component_version}_design_submission.jar"/>
    <property name="dev_dist.jar" value="${component}_${component_version}_dev_dist.jar"/>
    <property name="design_dist.jar" value="${component}_${component_version}_design_dist.jar"/>

    <!-- DOCUMENT PACKAGE -->
    <property name="dist_docpackage" value="${builddir}/doc_package"/>
    <property name="docpackage.jar" value="${distfilename}_docs.jar"/>

    <!-- TCS Dependencies -->
    <property name="guid_generator.version" value="1.0"/>
    <property name="guid_generator.jar.name" value="guid_generator.jar"/>
    <property name="guid_generator.path" value="guid_generator/${guid_generator.version}"/>
    <property name="guid_generator.jar" value="${tcs_libdir}/${guid_generator.path}/${guid_generator.jar.name}"/>

    <property name="base_exception.version" value="1.0"/>
    <property name="base_exception.jar.name" value="base_exception.jar"/>
    <property name="base_exception.path" value="base_exception/${base_exception.version}"/>
    <property name="base_exception.jar" value="${tcs_libdir}/${base_exception.path}/${base_exception.jar.name}"/>

    <!-- 3rd Party Dependencies  -->
    <property name="junit.jar" value="${ext_libdir}/junit/3.8.1/junit.jar"/>
    <property name="xmlunit.jar" value="${ext_libdir}/xmlunit/1.0/xmlunit1.0.jar"/>
    <property name="serializer.jar" value="${ext_libdir}/xalan/2.7.0/serializer.jar"/>
    <property name="xml-apis.jar" value="${ext_libdir}/xalan/2.7.0/xml-apis.jar"/>
    <property name="xercesImpl.jar" value="${ext_libdir}/xalan/2.7.0/xercesImpl.jar"/>
    <property name="xalan.jar" value="${ext_libdir}/xalan/2.7.0/xalan.jar"/>
    <property name="xsltc.jar" value="${ext_libdir}/xalan/2.7.0/xsltc.jar"/>

    <!-- Java Locations -->
    <property name="java_1_3_bootclasspath" value="c:\program files\JavaSoft\JRE\1.3.1\lib\rt.jar"/>

    <path id="buildlibs">
        <pathelement location="${junit.jar}"/>
        <pathelement location="${guid_generator.jar}"/>
        <pathelement location="${base_exception.jar}"/>
        <pathelement location="${configdir}"/>
        <pathelement location="${testfiles}"/>
    </path>

    <path id="test.build.classpath">
        <pathelement location="${build_testclassdir}"/>
        <pathelement location="${build_classdir}"/>
        <pathelement location="${xmlunit.jar}"/>
        <path refid="buildlibs"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <target name="compile">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true"
               verbose="${verbose}">
            <compilerarg compiler="javac1.4" line="-Xbootclasspath/p:${xml-apis.jar}"/>
            <classpath refid="buildlibs"/>
        </javac>
    </target>


    <target name="compile_targets">
        <!-- test compile against 1.3 -->
        <mkdir dir="${build_targetclassdir}"/>
        <mkdir dir="${javatests}"/>
        <javac srcdir="${javamain}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
               debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
            >
            <classpath refid="buildlibs"/>
        </javac>

        <!-- compile test cases -->
        <javac srcdir="${javatests}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
               debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
            >
            <classpath refid="buildlibs"/>
        </javac>
        <delete dir="${build_targetclassdir}"/>
    </target>

    <target name="compile_tests" depends="compile">
        <mkdir dir="${build_testclassdir}"/>
        <javac srcdir="${javatests}" destdir="${build_testclassdir}" includes="${packagedir}/**" debug="true"
               verbose="${verbose}">
            <compilerarg compiler="javac1.4" line="-Xbootclasspath/p:${xml-apis.jar}"/>
            <classpath refid="test.build.classpath"/>
        </javac>
    </target>

    <!--//checks whether external jaxp is needed depending on JDK version-->
    <condition property="needsExternalJaxp13">
        <not>
            <contains string="${java.version}" substring="1.5"/>
        </not>
    </condition>

    <target name="test1.4" depends="compile_tests" if="needsExternalJaxp13">
        <mkdir dir="${testlogdir}"/>
        <junit fork="true" haltonerror="false">
            <jvmarg line="-Xbootclasspath/p:${xml-apis.jar}"/>
            <jvmarg line="-Xbootclasspath/p:${xercesImpl.jar}"/>
            <jvmarg line="-Xbootclasspath/p:${serializer.jar}"/>
            <jvmarg line="-Xbootclasspath/p:${xalan.jar}"/>
            <jvmarg line="-Xbootclasspath/p:${xsltc.jar}"/>
            <classpath refid="test.build.classpath"/>
            <test name="${package}.AllTests" todir="${testlogdir}">
                <formatter type="plain" usefile="true"/>
                <formatter type="plain" usefile="false"/>
                <formatter type="xml" usefile="true"/>
            </test>
        </junit>
    </target>

    <target name="test1.5" depends="compile_tests" unless="needsExternalJaxp13">
        <mkdir dir="${testlogdir}"/>
        <junit fork="true" haltonerror="false">
            <classpath refid="test.build.classpath"/>
            <test name="${package}.AllTests" todir="${testlogdir}">
                <formatter type="plain" usefile="true"/>
                <formatter type="plain" usefile="false"/>
                <formatter type="xml" usefile="true"/>
            </test>
        </junit>
    </target>
    
    <target name="test" depends="compile_tests,test1.4,test1.5">
        <!--This target is empty as the actual target is -->
        <!--in the depends list, both test1.4 and test1.5 are -->
        <!--tried but oly one of them matches, -->
        <!--depending on whether the property -->
        <!--needsExternalJaxp13 is true or false-->
    </target>

    <target name="startdemo" depends="compile_tests">
        <mkdir dir="${testlogdir}"/>
        <java fork="true" output="${testlogdir}/demoApplication.log"
              classname="com.topcoder.xmi.util.xmidocumenter.XMIDocumenterUIDemo">
            <classpath refid="test.build.classpath"/>
            <jvmarg line="-Xbootclasspath/p:${xml-apis.jar}"/>
            <jvmarg line="-Xbootclasspath/p:${xercesImpl.jar}"/>
            <jvmarg line="-Xbootclasspath/p:${serializer.jar}"/>
            <jvmarg line="-Xbootclasspath/p:${xalan.jar}"/>
            <jvmarg line="-Xbootclasspath/p:${xsltc.jar}"/>
        </java>
        <echo>the demo application has been started and should appear in a second</echo>
    </target>

    <target name="reports" depends="test">
        <mkdir dir="${reports}"/>

        <junitreport todir="${reports}">
            <fileset dir="${testlogdir}">
                <include name="*.xml"/>
            </fileset>
            <report format="frames" todir="${reports}"/>
        </junitreport>

        <echo>The execution of reports is complete. Reports are available in /${reports}</echo>
    </target>

    <target name="dist" depends="compile">
        <mkdir dir="${dist_lib}/${component_path}"/>
        <jar jarfile="${component.jar}" basedir="${build_classdir}"/>
    </target>

    <target name="dist_tests" depends="compile_tests">
        <mkdir dir="${dist_lib}"/>
        <jar jarfile="${component.tests.jar}" basedir="${build_testclassdir}"/>
    </target>

    <target name="javadoc" depends="compile">
        <mkdir dir="${dist_javadocs}"/>
        <javadoc packagenames="${package}.*"
                 sourcepath="${javamain}"
                 classpath="${build_classdir}"
                 classpathref="buildlibs"
                 destdir="${dist_javadocs}"
                 windowtitle="Topcoder Software"
                 header="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
                 footer="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
                 bottom="&lt;font class=tcoder5&gt;Contact TopCoder Software at &lt;a href='http://www.topcodersoftware.com'&gt;www.topcodersoftware.com&lt;/a&gt;&lt;/font&gt;"
                 stylesheetfile="${javadocsdir}/stylesheet.css"
                 verbose="${verbose}">
            <tag name="copyright" description="Copyright:" scope="types"/>
            <arg line="-J-Xbootclasspath/p:${xml-apis.jar}"/>
            <arg line="-J-Xbootclasspath/p:${xercesImpl.jar}"/>
            <arg line="-J-Xbootclasspath/p:${serializer.jar}"/>
            <arg line="-J-Xbootclasspath/p:${xalan.jar}"/>
            <arg line="-J-Xbootclasspath/p:${xsltc.jar}"/>
        </javadoc>
    </target>

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>

    <target name="deploy" depends="dist">
    </target>

    <target name="main" depends="deploy,test">
    </target>

</project>
