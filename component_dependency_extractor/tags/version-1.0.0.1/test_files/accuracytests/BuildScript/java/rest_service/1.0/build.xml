<?xml version="1.0"?>

<project name="REST Service" default="dist" basedir=".">

    <property file="../topcoder_global.properties"/>

    <!-- COMPONENT PARAMETERS -->
    <property name="component" value="REST_Service" />
    <property name="package" value="com.topcoder.restservice" />
    <property name="packagedir" value="com/topcoder/restservice" />
    <property name="distfilename" value="rest_service" />
    <property name="component_version" value="1.0" />
    <property name="component_path" value="${distfilename}/${component_version}" />

    <!-- DIRECTORY SETUP -->
    <property name="srcdir" value="src" />
    <property name="tcs_libdir" value="lib/tcs" />
    <property name="ext_libdir" value="lib" />
    <property name="jar_tcs_libdir" value="lib/tcs" />
    <property name="jar_ext_libdir" value="lib" />
    <property name="docsdir" value="docs" />
    <property name="configdir" value="conf" />
    <property name="testlogdir" value="log" />
    <property name="testfiles" value="test_files" />
    <property name="javadocsdir" value="${docsdir}/javadocs" />
    <property name="webdir" value="web" />
    <property name="reports" value="reports" />

    <property name="javasrc" value="${srcdir}/java" />
    <property name="javamain" value="${javasrc}/main" />
    <property name="javatests" value="${javasrc}/tests" />

    <property name="builddir" value="build" />
    <property name="build_classdir" value="${builddir}/classes" />
    <property name="build_testclassdir" value="${builddir}/testClasses" />
    <property name="build_targetclassdir" value="${builddir}/targetclasses" />
    <property name="build_distdir" value="${builddir}/dist" />
    <property name="build_docsdir" value="${builddir}/${docsdir}" />
    <property name="build_javadocsdir" value="${builddir}/${javadocsdir}" />
    <property name="build_webdir" value="${builddir}/${webdir}" />
    <property name="build_lib" value="${builddir}/lib" />
    <property name="build_tcsdistdir" value="${build_distdir}/${distfilename}-${component_version}" />

    <!-- EXECUTION TAGS -->
    <property name="debug" value="off" />
    <property name="verbose" value="no" />

    <!-- COMPONENT DISTRIBUTION STRUCTURE -->
    <property name="dist_conf" value="${build_tcsdistdir}/${configdir}" />
    <property name="dist_lib" value="${build_distdir}/lib/tcs" />
    <property name="dist_src" value="${build_tcsdistdir}/${srcdir}" />
    <property name="dist_docs" value="${build_tcsdistdir}/${docsdir}" />
    <property name="dist_javadocs" value="${build_tcsdistdir}/${javadocsdir}" />
    <property name="dist_testfiles" value="${build_tcsdistdir}/${testfiles}" />

    <!-- NAME FOR .JAR AND .WAR FILES -->
    <property name="component.jar" value="${dist_lib}/${component_path}/${distfilename}.jar"/>
    <property name="javadoc.jar" value="javadocs.jar"/>
    <property name="component.tests.jar" value="${dist_lib}/${distfilename}_tests.jar"/>
    <property name="component.war" value="${build_distdir}/${distfilename}.war"/>
    <property name="component.dist.jar" value="${build_distdir}/${distfilename}-${component_version}.jar"/>
    <property name="dev_submission.jar" value="${component}_${component_version}_dev_submission.jar"/>
    <property name="design_submission.jar" value="${component}_${component_version}_design_submission.jar"/>
    <property name="dev_dist.jar" value="${component}_${component_version}_dev_dist.jar"/>
    <property name="design_dist.jar" value="${component}_${component_version}_design_dist.jar"/>

    <!-- DOCUMENT PACKAGE -->
    <property name="dist_docpackage" value="${builddir}/doc_package" />
    <property name="docpackage.jar" value="${distfilename}_docs.jar" />
    
    <!-- TCS Dependencies -->
    <property name="configmanager.version" value="2.1.3"/>
    <property name="configmanager.jar.name" value="configuration_manager.jar"/>
    <property name="configmanager.path" value="configuration_manager/${configmanager.version}"/>
    <property name="configmanager.jar" value="${tcs_libdir}/${configmanager.path}/${configmanager.jar.name}"/>

    <!-- 3rd Party Dependencies  -->
    <property name="junit.jar" value="${ext_libdir}/junit/3.8.1/junit.jar"/>
    <property name="servlet.jar" value="${ext_libdir}/tomcat/4.1/servlet.jar"/>
    <property name="aspectjrt.jar" value="${ext_libdir}/cactus/1.6.1/aspectjrt-1.1.1.jar"/>
    <property name="cactus.jar" value="${ext_libdir}/cactus/1.6.1/cactus-1.6.1.jar"/>
    <property name="cactus-ant.jar" value="${ext_libdir}/cactus/1.6.1/cactus-ant-1.6.1.jar"/>
    <property name="commons-httpclient.jar" value="${ext_libdir}/cactus/1.6.1/commons-httpclient-2.0.jar"/>
    <property name="commons-logging.jar" value="${ext_libdir}/cactus/1.6.1/commons-logging-1.0.3.jar"/>

    <!-- Java Locations -->
    <property name="java_1_3_bootclasspath" value="c:\program files\JavaSoft\JRE\1.3.1\lib\rt.jar"/>

    <!--Change this property to a valid Tomcat 4.x home dir to run tests in server environment-->
    <property name="cactus.home.tomcat4x" value="C:/Program Files/Apache Group/Tomcat 4.1"/>
    
    <!--cactus taskdefs-->
    <taskdef resource="cactus.tasks" classpathref="buildlibs"/>
    
    <path id="buildlibs">
        <pathelement location="${junit.jar}" />
        <pathelement location="${servlet.jar}" />
        <pathelement location="${aspectjrt.jar}" />
        <pathelement location="${cactus.jar}" />
        <pathelement location="${cactus-ant.jar}" />
        <pathelement location="${commons-httpclient.jar}" />
        <pathelement location="${commons-logging.jar}" />
        <pathelement location="${configmanager.jar}" />
        <pathelement location="${configdir}" />
        <pathelement location="${testfiles}" />
        <pathelement location="." />
    </path>

    <path id="test.build.classpath">
        <pathelement location="${build_testclassdir}"/>
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <path id="runtime.classpath">
        <pathelement location="${build_classdir}"/>
        <path refid="buildlibs"/>
    </path>

    <target name="compile">
        <mkdir dir="${build_classdir}"/>
        <javac srcdir="${javamain}" destdir="${build_classdir}" includes="${packagedir}/**" debug="true" verbose="${verbose}">
            <classpath refid="buildlibs" />
        </javac>
    </target>

    <target name="compile_targets">
        <!-- test compile against 1.3 -->
        <mkdir dir="${build_targetclassdir}"/>
        <mkdir dir="${javatests}"/>
        <javac srcdir="${javamain}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
	       debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>

        <!-- compile test cases -->
        <javac srcdir="${javatests}"
               destdir="${build_targetclassdir}"
               includes="${packagedir}/**"
	       debug="true"
               verbose="${verbose}"
               target="1.3"
               bootclasspath="${java_1_3_bootclasspath}"
               extdirs=""
               >
            <classpath refid="buildlibs" />
        </javac>
        <delete dir="${build_targetclassdir}"/>
    </target>

    <target name="compile_tests" depends="compile,webapp">
        <mkdir dir="${build_testclassdir}"/>
        <javac srcdir="${javatests}" destdir="${build_testclassdir}" includes="${packagedir}/**" debug="true" verbose="${verbose}">
            <classpath refid="test.build.classpath" />
        </javac>
        
        <!-- Cactify the web-app archive, adding the stress tests -->
        <cactifywar srcfile="${component.war}"
                    destfile="${build_distdir}/${distfilename}-cactified.war">
            <classes dir="${build_testclassdir}">
                <include name="com/topcoder/restservice/stresstests/*"/>
            </classes>
            <classes dir="${configdir}"/>
            <classes dir="${testfiles}">
                <include name="stress/Request_Body.xml"/>
                <include name="stress/Stress_REST_Service_Config.xml"/>
            </classes>
            <servletredirector/>
        </cactifywar>
    </target>

    <target name="test" depends="compile_tests">
        <mkdir dir="${testlogdir}"/>
        
        <!-- Run all tests except stress -->
        <junit fork="true" haltonerror="false">
            <classpath refid="test.build.classpath"/>
            <test name="${package}.AllTests" todir="${testlogdir}">
                <formatter type="plain" usefile="true"/>
                <formatter type="xml" usefile="true"/>
            </test>
        </junit>
        
        <!-- Run the stress tests -->
        <cactus warfile="${build_distdir}/${distfilename}-cactified.war"
                fork="yes" failureproperty="tests.failed" haltonerror="true">

            <classpath>
                <path refid="test.build.classpath"/>
                <pathelement location="${httpunit.jar}"/>
                <pathelement location="${build_testclassdir}"/>
            </classpath>

            <containerset>
                <tomcat4x if="cactus.home.tomcat4x"
                          dir="${cactus.home.tomcat4x}" port="12388"
                          output="${testlogdir}/tomcat4x.out"
                          todir="${testlogdir}"/>
            </containerset>
            <formatter type="brief" usefile="true"/>
            <formatter type="xml" usefile="true"/>
            <formatter type="brief" usefile="false"/>

            <test name="${package}.stresstests.StressTests"/>
        </cactus>
    </target>

    <target name="reports" depends="test">
        <mkdir dir="${reports}"/>

        <junitreport todir="${reports}">
          <fileset dir="${testlogdir}">
            <include name="*.xml"/>
          </fileset>
          <report format="frames" todir="${reports}"/>
        </junitreport>
        
        <echo>The execution of reports is complete.  Reports are available in /${reports}</echo>
    </target>

    <target name="dist" depends="compile">
        <mkdir dir="${dist_lib}/${component_path}"/>
        <jar jarfile="${component.jar}" basedir="${build_classdir}" />
    </target>

    <target name="dist_tests" depends="compile_tests">
        <mkdir dir="${dist_lib}"/>
        <jar jarfile="${component.tests.jar}" basedir="${build_testclassdir}" />
    </target>

    <target name="javadoc" depends="compile">
        <mkdir dir="${dist_javadocs}" />
        <javadoc packagenames="${package}.*"
            sourcepath="${javamain}"
            classpath="${build_classdir}"
            classpathref="buildlibs"
            destdir="${dist_javadocs}"
            windowtitle="Topcoder Software"
            header="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            footer="&lt;table border=0 cellpadding=0 cellspacing=2&gt;&lt;tr&gt;&lt;td&gt;&lt;font class=tcoder2&gt;&#091; &lt;/font&gt;&lt;font class=tcoder1&gt;TOP&lt;/font&gt;&lt;font class=tcoder2&gt;CODER &lt;/font&gt;&lt;font class=tcoder2&gt;&#093;&lt;/font&gt;&lt;/td&gt;&lt;td&gt;&lt;font class=tcoder4&gt;&#153;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=tcoder3 align=center&gt;&lt;font class=tcoder3&gt;SOFTWARE&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"
            bottom="&lt;font class=tcoder5&gt;Contact TopCoder Software at &lt;a href='http://www.topcodersoftware.com'&gt;www.topcodersoftware.com&lt;/a&gt;&lt;/font&gt;"
            stylesheetfile="${javadocsdir}/stylesheet.css"
            verbose="${verbose}">
            <tag name="copyright" description="Copyright:" scope="types"/>
		</javadoc>
    </target>

    <target name="clean">
        <delete dir="${builddir}"/>
    </target>

    <target name="deploy" depends="dist">
    </target>

    <target name="main" depends="deploy,test">
    </target>
    
    <target name="webapp" description="Builds a web application for the component" depends="dist">
        <mkdir dir="${build_distdir}"/>
        <war warfile="${component.war}" webxml="${basedir}/test_files/stress/web.xml">
            <lib file="${component.jar}"/>
            <lib file="${configmanager.jar}"/>
        </war>
    </target>

</project>
