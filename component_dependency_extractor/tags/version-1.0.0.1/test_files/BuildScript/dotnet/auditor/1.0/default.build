<?xml version="1.0"?>
<project name="Auditor" default="compile" basedir=".">
       
    <tstamp property="build.date" pattern="dd-MM-yyyy" verbose="true"/>
    <sysinfo verbose="true"/>

    <property name="component" value="Auditor" />
    <property name="distfilename" value="auditor" />
    <property name="namespace" value="TopCoder\Audit\Tracker" />
    <property name="namespace_file" value="TopCoder.Audit.Tracker" />

    <property name="component_version" value="1.0" />

    <!--  REFERENCE TO NUNIT -->
    <property name="Nunit" value="D:\NUnit\bin\nunit.framework.dll"/>
    <property name="NDoc" value="D:\NDoc\bin\.net-1.1\NDocConsole.exe"/>


    <!--  REFERENCE TO NUNIT -->

    <property name="copyright" value="Copyright (c) 2004, TopCoder, Inc. All rights reserved" />
	
	
    <property name="debug" value="true"/>
    <property name="verbose" value="true" />
    <property name="component_path" value="${distfilename}\${component_version}" />    

    <!-- directories -->
    <property name="builddir" value="build" />
    <property name="configdir" value="conf" />
    <property name="testlogdir" value="log" />
    <property name="testfiles" value="test_files" />
    <property name="tcs" value="..\tcs"/>
    <property name="ext_bin" value="${tcs}\bin"/>
    <property name="tcs_bin" value="${ext_bin}\tcs"/>
    
    

    <!-- NUNIT's output needs to go back to the root these next two properties should correspond -->
    <property name="build_classdir" value="${builddir}\classes" />
    <property name="root_from_build_classdir" value="..\.." />
    <property name="TestOutputXml" value="${testlogdir}\${namespace_file}.Test.dll-results.xml"/>
    <property name="TestOutputText" value="${testlogdir}\${namespace_file}.Test.dll-results.txt"/>

    
    
    <!-- 3rd party -->
    <!--
    <property name="log4net" value="${ext_bin}\log4net.dll" />
    -->
    
    <!-- ZIPS -->
    <property name="logging_wrapper.dll" value="${tcs_bin}\logging_wrapper\1.0\TopCoder.LoggingWrapper.dll"/>
    <property name="config_manager.dll" value="${tcs_bin}\configuration_manager\1.1\TopCoder.Util.ConfigurationManager.dll"/>
    <property name="connection_factory.dll" value="${tcs_bin}\connection_factory\1.0\TopCoder.Data.ConnectionFactory.dll"/>
    <property name="user_profile.dll" value="${tcs_bin}\user_profile\1.0\TopCoder.User.Profile.dll"/>
    
    <!--   ****************************************************  -->
    
    <property name="build_testclassdir" value="${builddir}\testClasses\" />
    <property name="build_distdir" value="${builddir}\dist" />
    <property name="build_tcsdistdir" value="${build_distdir}\${distfilename}-${component_version}" />
    <property name="build_docsdir" value="${builddir}\docs" />
    <property name="testdocsresult_dir" value="${build_docsdir}\testResults" />
    
    <property name="build_xmldocsdir" value="${build_docsdir}\xmldoc\" />
    <property name="build_javadocsdir" value="${build_docsdir}\javadocs" />
    <property name="build_msdndir" value="${build_docsdir}\msdn" />


    <property name="srcdir" value="src" />
    <property name="dotnetsrc" value="${srcdir}\csharp" />
    <property name="dotnetmain" value="${dotnetsrc}\main\${namespace}" />
    <property name="dotnettests" value="${dotnetsrc}\tests\${namespace}" />
    <property name="docsdir" value="docs" />
    
    

    <!-- Component distribution structure -->
    <property name="dist_conf" value="${build_tcsdistdir}\conf" />
    <property name="dist_test_files" value="${build_tcsdistdir}\test_files" />
    <property name="dist_bin" value="${build_distdir}\bin" />
    <property name="dist_examples" value="${build_tcsdistdir}\examples" />
    <property name="dist_src" value="${build_tcsdistdir}\src" />
    <property name="dist_docs" value="${build_tcsdistdir}\docs" />
    <property name="test_results" value="${dist_docs}\test_results" />
    <property name="java_docs" value="${dist_docs}\java_docs" />
    <property name="xml_docs" value="${dist_docs}\xml" />
    <property name="source_xml_docs" value="${xml_docs}\source" />
    <property name="test_xml_docs" value="${xml_docs}\tests" />
    <property name="component.zip" value="${dist_bin}\${component_path}\${distfilename}.zip"/>
    <property name="component_version_name.zip" value="${distfilename}-${component_version}.zip"/>
    <property name="component.dist.zip" value="${build_distdir}\${component_version_name.zip}"/>


    <property name="design_dist.zip" value="${distfilename}_${component_version}_design_dist.zip"/>
    <property name="dev_dist.zip" value="${distfilename}_${component_version}_dev_dist.zip"/>
    
    <!-- builds -->
    <property name="design_submission.zip" value="${distfilename}_${component_version}_design_submission.zip"/>
    <property name="dev_submission.zip" value="${distfilename}_${component_version}_dev_submission.zip"/>



    <target name="dist_docs">
        
        <mkdir dir="${source_xml_docs}"/>
        <mkdir dir="${test_xml_docs}"/>
        <mkdir dir="${test_results}"/>
        <mkdir dir="${java_docs}"/>
        <mkdir dir="${build_javadocsdir}"/>
        
        <copy file="${build_docsdir}\${namespace_file}.xml" todir="${source_xml_docs}"/>
        <copy file="${build_docsdir}\${namespace_file}.Test.xml" todir="${test_xml_docs}"/>
        
        <copy todir="${test_results}">
            <fileset basedir="${testdocsresult_dir}" defaultexcludes="true">
                <includes name="**/*"/>
                <excludes name="**/*.xml"/>
            </fileset>
        </copy>
        <copy todir="${java_docs}">
            <fileset basedir="${build_javadocsdir}" defaultexcludes="true">
                <includes name="**/*"/>
                <excludes name="**/*.xml"/>
            </fileset>
        </copy>

        <copy file="${build_msdndir}\${distfilename}.chm" todir="${dist_docs}"/>

    </target>

	<target name="compile" >
	    <mkdir dir="${build_classdir}"/>
	    <mkdir dir="${build_docsdir}"/>
		<csc target="library" output="${build_classdir}\${namespace_file}.dll" doc="${build_classdir}\${namespace_file}.xml" >
			<sources>
				<includes name="${dotnetmain}\**.cs"/>
			</sources>
			<references>
			    <includes name="${logging_wrapper.dll}"/>
			    <includes name="${config_manager.dll}"/>
			    <includes name="${connection_factory.dll}"/>
			    <includes name="${user_profile.dll}"/>
			    <!--- references
			        <includes name="${log4net}"/>
			    -->
			</references>

		</csc>
		<copy file="${build_classdir}\${namespace_file}.xml" todir="${build_docsdir}" />
	</target>
	
    <target name="clean">
        <mkdir dir="${builddir}"/>
        <mkdir dir="${dist_docs}"/>
		<delete verbose="${verbose}"> 
	        <fileset defaultexcludes="false" >
	            <includes name="${builddir}/**/**"/>
	            <includes name="*.zip"/>
	            <includes name="${dist_docs}/**.zip"/>
	        </fileset>
		</delete>
    </target>

    <target name="compile_tests" depends="compile">
        <mkdir dir="${build_testclassdir}"/> 
        <echo message="Please make sure that Nunit 2.0 is installed."/>
        <echo message="The NUnit property is currently pointing to: ${Nunit}."/>
        <echo message="If this is incorrect please adjust the Nunit property to point to the correct location."/>
        <csc target="library" doc="${build_classdir}\${namespace_file}.Test.xml" output="${build_classdir}\${namespace_file}.Test.dll" failonerror="true"  >
            <sources>
                <includes name="${dotnettests}\**.cs" />
            </sources>
            <references>
    		    <includes name="${build_classdir}\${namespace_file}.dll"/>
			    <includes name="${Nunit}"/>
			    <includes name="${logging_wrapper.dll}"/>
			    <includes name="${config_manager.dll}"/>
			    <includes name="${connection_factory.dll}"/>
			    <includes name="${user_profile.dll}"/>
			    
			    <!-- third party -->
			    <!--
			        <includes name="${log4net}"/>
			    -->
			</references>
        </csc>
        <copy file="${build_classdir}\${namespace_file}.Test.xml" todir="${build_docsdir}" />
    </target>
    
    <target name="test" depends="compile_tests">
        <mkdir dir="${testlogdir}"/>
        <!-- reference for log 4net
        <copy file="${log4net}" todir="${build_classdir}" />  
        -->
		<copy file="${logging_wrapper.dll}" todir="${build_classdir}" />
		<copy file="${config_manager.dll}" todir="${build_classdir}"/>
		<copy file="${connection_factory.dll}" todir="${build_classdir}"/>
		<copy file="${user_profile.dll}" todir="${build_classdir}"/>
        
        <echo message="Please make sure that nunit-console is in your path."/>
        <echo message="This file can be found in the NUnit bin directory."/>

        <nunit2 verbose="true"> 
            <formatter type="Xml" usefile="true" outputdir="${testlogdir}" extension=".xml"/> 
            <formatter type="Plain" usefile="true" outputdir="${testlogdir}" extension=".txt"/> 
            <test assemblyname="${build_classdir}\${namespace_file}.Test.dll"/> 
        </nunit2> 
        
        <!--
            <echo message="nunit-console /assembly:${build_classdir}\${namespace_file}.Test.dll /xml:${root_from_build_classdir}\${TestOutput}"/>
            <exec program="nunit-console" commandline="/assembly:${build_classdir}\${namespace_file}.Test.dll /xml:${root_from_build_classdir}\${testlogdir}\${namespace_file}.TestResult.xml" />
        -->
    </target>


    <target name="dist" depends="compile_tests">
        <mkdir dir="${dist_bin}/${component_path}"/>
        <!--<copy file="${build_classdir}\${namespace_file}.dll" todir="${dist_bin}" />-->

        <zip zipfile="${component.zip}">
            <fileset basedir="${build_classdir}" defaultexcludes="true">
                <includes name="**/*.dll"/>
                <excludes name="**/*Test.dll"/>
            </fileset>
        </zip>

    </target>

    
    
    <target name="generate_docs" depends="javadoc,msdn" /> 

  

    <target name="deploy" depends="dist">
    </target>

    <target name="main" depends="deploy,test">
    </target>


	<target name="nunitreport" depends="test">
		<!-- By default the report is in english, format is noframes by default -->
		<mkdir dir="${testdocsresult_dir}"/>
		<nunit2report format="frames" opendesc="yes"  todir="${testdocsresult_dir}"  >
			<fileset>
				<includes name="${TestOutputXml}" />
			</fileset>
			<summaries>
				<includes name="${build_docsdir}\${namespace_file}.Test.xml" />
			</summaries> 
		</nunit2report>

		<echo message="NUnit frame report generated."/>
	</target>

    <target name="javadoc" depends="compile_tests">
        <mkdir dir="${build_javadocsdir}"/>
        <echo message="Please make sure that NDoc is installed."/>
        <echo message="The NDoc console executable variable is currently pointing to: ${NDoc}."/>


        <exec program="${NDoc}" verbose="true" workingdir="." commandline="-verbose -documenter=JavaDoc -Title=${component} 
                        -OutputDirectory=${build_javadocsdir} 
                        ${build_classdir}\${namespace_file}.dll,${build_classdir}\${namespace_file}.xml
                        ${build_classdir}\${namespace_file}.Test.dll,${build_classdir}\${namespace_file}.Test.xml" />
        

    </target>
    <target name="msdn" depends="compile_tests">
        <mkdir dir="${build_msdndir}"/>
        <echo message="Requires Microsoft's HTML Help Compiler (hhc.exe) is in your path."/>
        <ndoc >
            <assemblies>
                <includes name="${build_classdir}\${namespace_file}.dll"/>
                <includes name="${build_classdir}\${namespace_file}.Test.dll"/>
            </assemblies>
            <summaries >
                <includes name="${build_classdir}\${namespace_file}.xml "/>
                <includes name="${build_classdir}\${namespace_file}.Test.xml"/>
            </summaries>
            <documenters>
                <documenter name="MSDN">
                    <property name="OutputDirectory" value="${build_msdndir}" />
                    <property name="HtmlHelpName" value="${distfilename}" />
                    <property name="HtmlHelpCompilerFilename" value="hhc.exe" />
                    <property name="IncludeFavorites" value="False" />
                    <property name="Title" value="${component}" />
                    <property name="SplitTOCs" value="False" />
                    <property name="DefaulTOC" value="" />
                    <property name="ShowVisualBasic" value="False" />
                    <property name="ShowMissingSummaries" value="False" />
                    <property name="ShowMissingRemarks" value="False" />
                    <property name="ShowMissingParams" value="False" />
                    <property name="ShowMissingReturns" value="False" />
                    <property name="ShowMissingValues" value="False" />
                    <property name="DocumentInternals" value="False" />
                    <property name="DocumentProtected" value="False" />
                    <property name="DocumentPrivates" value="False" />
                    <property name="DocumentEmptyNamespaces" value="False" />
                    <property name="IncludeAssemblyVersion" value="True" />
                    <property name="CopyrightText" value="${copyright}" />
                    <property name="CopyrightHref" value="" />
                    <property name="AutoDocumentConstructors" value="True" />
                 </documenter>
            </documenters> 
        </ndoc>
    </target>

</project>
