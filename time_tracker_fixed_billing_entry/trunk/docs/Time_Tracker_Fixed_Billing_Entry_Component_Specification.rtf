{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f46\fswiss\fcharset238\fprq2 Arial CE;}{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}
{\f50\fswiss\fcharset162\fprq2 Arial Tur;}{\f51\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f52\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fswiss\fcharset163\fprq2 Arial (Vietnamese);}
{\f56\fmodern\fcharset238\fprq1 Courier New CE;}{\f57\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f59\fmodern\fcharset161\fprq1 Courier New Greek;}{\f60\fmodern\fcharset162\fprq1 Courier New Tur;}{\f61\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f62\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f63\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f64\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid860108\rsid2837002
\rsid5643327\rsid7240504\rsid14692026}{\*\generator Microsoft Word 11.0.5604;}{\info{\author TCSDESIGNER}{\operator TCSDESIGNER}{\creatim\yr2007\mo3\dy14\hr23}{\revtim\yr2007\mo3\dy14\hr23\min46}{\version5}{\edmins13}{\nofpages11}{\nofwords3690}
{\nofchars21037}{\*\company CPPI}{\nofcharsws24678}{\vern24689}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale110\nolnhtadjtbl\rsidroot860108 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\ql \li283\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx1003\faauto\rin0\lin283\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f1\fs28\ul\insrsid2837002 Time Tracker Fixed Billing Entry version 3.1 Component Specification
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\tx77\faauto\rin0\lin0\itap0 {\b\f1\insrsid2837002 1.Design
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 
The Time Tracker Fixed Billing Entry custom component is part of the Time Tracker application.  It provides an abstraction of Fixed Billing Entries.  This component handles the persistence and other business logic required by the application.
\par 
\par The design i
s separated into 2 layers of management: The topmost layer are the Manager classes, which provide the functionality needed to update, retrieve and search from the data store.  Batch operations are also available in the Manager classes.  The next layer are
 the DAOs, which interact directly with the data store.  There is also a sublayer, called the FilterFactory layer, which are responsible for building search filters which can be used to build the search filter.
\par 
\par There is an additional J2EE layer on top of t
he component.  This layer is composed of a SessionBean and a BusinessDelegate.  The SessionBean is stateless, and supports local interfaces.  The BusinessDelegate doubles as a service locator, and looks up the Session Bean upon construction, delegating al
l similar method calls to the SessionBean.  This layer is responsible for transactions, allowing a J2EE container to manage transactions for the component.
\par 
\par }{\i\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx720\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 1.1Design Patterns 
\par }{\f1\insrsid2837002 
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\i\f1\fs20\insrsid2837002 The Strategy Pattern.}{\i\f1\fs20\insrsid2837002  The DAO classes such as FixedBillingEntryDAO and FixedBi
llingStatusDAO are strategies for persisting and retrieving information from a data store.}{\f1\insrsid2837002 
\par }{\b\i\f1\fs20\insrsid2837002 The Facade Pattern.}{\i\f1\fs20\insrsid2837002  The manager classes [FixedBillingEntryManager, FixedBillingStatusManager]  encapsulate subsystem DAOs and other components to provide a unified A
PI that makes it easier to manage the entries.
\par }{\b\i\f1\fs20\insrsid2837002 The Factory Pattern.}{\i\f1\fs20\insrsid2837002  The Factory pattern is used in the FilterFactory layer to create search filters.  The FixedBillingEntryFilterFactory and FixedBillingStatusFilterFactory employ this pattern.}{
\f1\insrsid2837002 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\b\i\f1\fs20\insrsid2837002 The Business Delegate Pattern.}{\i\f1\fs20\insrsid2837002 
 The Business Delegate pattern is used with the FixedBillingEntryDelegate and FixedBillingStatusDelegate classes.
\par }{\b\i\f1\fs20\insrsid2837002 The Service Locator Pattern. }{\i\f1\fs20\insrsid2837002 The above-mentioned classes also double as Service Locators. }{\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 1.2Industry Standards 
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\i\f1\fs20\insrsid2837002 JDBC 3.0
\par EJB 2.1
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 1.3Required Algorithms
\par }\pard \ql \li720\ri0\sb120\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 There were no algorithms required and the component is straightforward enough.  We will discuss the database schema, and the method of searching in this section.

\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\insrsid2837002 
\par }\pard \ql \fi-360\li742\ri0\nowidctlpar\tx382\tx742\faauto\rin0\lin742\itap0 {\i\f1\fs18\insrsid2837002 1.3.1 }{\i\f1\fs20\insrsid2837002 Data Mapping}{\f1\insrsid2837002 
\par }\pard \ql \li720\ri0\nowidctlpar\tx670\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 This section will deal with mapping the di
fferent values in the beans to their respective columns. The developer is responsible for generating the necessary SQL to insert/retrieve the data in the beans from the appropriate columns.  The SQL will require some simple table joins at the most.  Pleas
e refer to the ERD diagrams for more information [see TimeTrackerFixedBillingEntry_ERD.jpg].
\par 
\par }{\f1\fs20\ul\insrsid2837002 1.3.1.1 FixedBillingEntry Class and fix_bill_entry Table}{\f1\fs20\insrsid2837002 
\par }\pard \ql \fi-360\li1440\ri0\nowidctlpar\tx670\tx1440\faauto\rin0\lin1440\itap0 {\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column fix_bill_entry_id maps to the id property in the TimeTrackerBean base class.  }{\i\f1\fs20\insrsid2837002 

\par }\pard \ql \li1080\ri0\nowidctlpar\tx670\faauto\rin0\lin1080\itap0 {\i\f1\fs20\insrsid2837002 \tab Note: The id generator is used to create a new id when a new record is inserted.
\par }{\f1\fs20\insrsid2837002 
\par }\pard \ql \fi-360\li1440\ri0\nowidctlpar\tx670\tx1440\faauto\rin0\lin1440\itap0 {\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column company_id maps to the companyId property in the BaseEntry superclass.
\par }\pard \ql \fi-360\li1440\ri0\nowidctlpar\faauto\rin0\lin1440\itap0 {\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column fix_bill_type_id does not map to anything [it was clarified in the forums that it was not needed]
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column fix_bill_status_id maps to the FixedBillingStatus property in the FixedBillingEntry class.\tab 
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column description maps to the description property in the FixedBillingEntry class.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column entry_date maps to the entryDate property in the BaseEntry superclass.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column amount maps to the amount property in the FixedBillingEntry class.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column creation_date maps to the creationDate property in the TimeTrackerBean base class.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column creation_user maps to the creationUser property in the TimeTrackerBean base class.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column modification_date maps to the modificationDate property in the TimeTrackerBean base class.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column modification_user maps to the modificationUser property in the TimeTrackerBean base class.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column invoice_id maps to the invoice id property in the FixedBillingEntry class.
\par }\pard \ql \li720\ri0\nowidctlpar\tx670\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 \tab }{\b\f1\fs20\insrsid2837002 
\par }{\f1\fs20\insrsid2837002 \tab 
\par }{\f1\fs20\ul\insrsid2837002 1.3.1.2 FixedBillingStatus Class and fix_bill_status Table
\par }\pard \ql \fi-360\li1440\ri0\nowidctlpar\tx670\tx1440\faauto\rin0\lin1440\itap0 {\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column fix_bill_status_id maps to the id property in the TimeTrackerBean base class.  
\par }\pard \ql \li1080\ri0\nowidctlpar\tx670\faauto\rin0\lin1080\itap0 {\i\f1\fs20\insrsid2837002 \tab Note: The id generator is used to create a new id when a new record is inserted.
\par }{\f1\fs20\insrsid2837002 
\par }\pard \ql \fi-360\li1440\ri0\nowidctlpar\tx670\tx1440\faauto\rin0\lin1440\itap0 {\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column description maps to the description property in the FixedBillingStatus class.  
\par }\pard \ql \fi-360\li1440\ri0\nowidctlpar\faauto\rin0\lin1440\itap0 {\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column creation_date maps to the creationDate property in the TimeTrackerBean base class.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column creation_user maps to the creationUser property in the TimeTrackerBean base class.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column modification_date maps to the modificationDate property in the TimeTrackerBean base class.
\par }{\f3\fs20\insrsid2837002 \'b7\tab }{\f1\fs20\insrsid2837002 Column modification_user maps to the modificationUser property in the TimeTrackerBean base class.
\par }\pard \ql \li720\ri0\nowidctlpar\tx670\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 
\par 
\par }\pard \ql \li368\ri0\nowidctlpar\faauto\rin0\lin368\itap0 {\i\f1\fs20\insrsid2837002 1.3.2 Searching
\par }\pard \ql \li1440\ri0\nowidctlpar\faauto\rin0\lin1440\itap0 {\i\f1\fs20\insrsid2837002 \tab \tab }{\f1\fs20\insrsid2837002 
\par }\pard \ql \li1134\ri0\sb57\nowidctlpar\faauto\rin0\lin1134\itap0 {\f1\fs20\insrsid2837002 
Searching is executed in this component by using the Search Builder component and the FilterFactory layer.  First off, the developer needs to develop a search query off which to base the search on.  The search query will retrieve all the necessary attrib
utes, and join with the tables of any possible criterion.  Once a query has been defined, in the constructor, the appropriate FilterFactory will be initialized with the column names used in the query.  This FilterFactory can then be returned by the approp
riate getFilterFactory method.
\par 
\par The user may then use the Factory to build the search filters.  Once the filters are provided back to the DAO implementation, it may use the DatabaseSearchStrategy to build the search.  The DatabaseSearchStrategy will then ad
d the necessary WHERE clauses to constrain the search to the search criterion specified in the Filters.
\par 
\par }{\b\f1\fs20\insrsid2837002 Example:
\par }{\f1\fs20\insrsid2837002 
\par The following query may be used as the context for searching the FixedBillingEntries(we reduce the retrieved data to only the id, but developer may modify it to retrieve all relevant fields):
\par \tab }{\f2\fs20\insrsid2837002 SELECT 
\par \tab \tab fix_bill_entry_id
\par \tab FROM
\par \tab \tab fix_bill_entry
\par \tab INNER JOIN
\par \tab \tab fb_reject_reason
\par \tab \tab ON\tab 
\par \tab \tab fix_bill_entry.fix_bill_entry_id = fb_reject_reason.fix_bill_entry_id
\par }{\f1\fs20\insrsid2837002 \tab }{\f2\fs20\insrsid2837002 WHERE
\par }{\f1\fs20\insrsid2837002 
\par From this context, the Search Builder can then add the different WHERE clauses, depending on the filter that was provided.  For example, if a filter for the description was created using createCreationDateFilter, then the Search Builder would add:
\par \tab }{\f2\fs20\insrsid2837002 WHERE (continued from above)
\par \tab \tab fix_bill_entry.creation_date = [value of filter]
\par }{\f1\fs20\insrsid2837002 
\par To accomplish this, in the constructor of the DAO, the FilterFactory must be configured according to the context query that was used.  In this example, the mapped value for the CREATION_DATE_COLUMN_NAME should be "fix_bill_entry.creation_date".  
\par 
\par Finally, note that this may be optimized by adding a GROUP BY clause to group the results by ids (this is especially important if a reject reason filter is not specified, since it would retu
rn multiple rows for each reject reason in a given filter).  The GROUP BY clause may be manually added by calling the buildSearchContext method, and adding the GROUP BY clause after the buildSearchContext has been completed.  This will need to be done in 
a private inner subclass of SearchStrategy.
\par }\pard \ql \li368\ri0\nowidctlpar\faauto\rin0\lin368\itap0 {\i\f1\fs20\insrsid2837002 
\par 1.3.3 Auditing
\par \tab }{\f1\fs20\insrsid2837002 The method implementation notes contain the audit header information that should be used when performing the audit.  The following clarifies how to create AuditDetail objects to add to the AuditHe
ader.  When creating a new entry (audit header action type is CREATE), then the oldValue for each detail is null.  When deleting an entry (audit header action type is DELETE), then the newValue for each detail is null.  When updating an entry, the old val
ue is retrieved from the datastore to populate the AuditDetail's old value. }{\i\f1\fs20\insrsid2837002 
\par 
\par 1.3.4 Batch Operations
\par \tab }{\f1\fs20\insrsid860108 The DbDAO classes have a useBatching variable assigned to them.  If this is true, then t}{\f1\fs20\insrsid2837002 he developer should use the }{\i\f1\fs20\insrsid2837002 addBatch }{\f1\fs20\insrsid2837002 
method with PreparedStatements when performing batch operations.  All batch methods in the DAO should be atomic, and so if a BatchUpdateException occurs, then the entire batch must be rolled-back, to ensure consistency between different JDBC drivers.}{
\f1\fs20\insrsid860108    Note that batching is not required for DELETE statements, since an IN clause may be used for that.}{\f1\fs20\insrsid2837002 
\par 
\par }{\i\f1\fs20\insrsid2837002 1.3.5 Configuration via Object Factory
\par \tab }{\f1\fs20\insrsid2837002 The component relies on the Object Factory for configuration.  A sample configuration file has been provided in the docs directory.  Initializing the Manager classes simply consists of calling the }{
\i\f1\fs20\insrsid2837002 createObject}{\f1\fs20\insrsid2837002  method with the appropriate class argument.
\par 
\par }\pard \ql \li1134\ri0\sb57\nowidctlpar\faauto\rin0\lin1134\itap0 {\f1\fs16\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 1.4Component Class Overview
\par \tab Package com.topcoder.time.tracker.entry.fixedbilling
\par \tab FixedBillingEntryManager (interface)
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 \tab 
This interface represents the API that may be used in order to manipulate the various details involving a Time Tracker Fixed Billing Entry.  CRUDE and search methods are provided to manage the Time Entries inside a persistent store.  There are also method
s for the manipulation of RejectReasons associated with the FixedBillingEntry.
\par 
\par }{\b\f1\fs20\insrsid2837002 FixedBillingEntryDAO (interface)
\par }{\f1\fs20\insrsid2837002 \tab This is an interface definition for the DAO that is responsible for handling the retrieval, storage, and searching of Ti
me Tracker FixedBillingEntry data from a persistent store.  It is also responsible for generating ids for any entities within it's scope, whenever an id is required.
\par 
\par }{\b\f1\fs20\insrsid2837002 FixedBillingEntryFilterFactory (interface)
\par }{\f1\fs20\insrsid2837002 \tab This interface defines a factory that is capa
ble of creating search filters used for searching through Time Tracker FixedBillingEntries.  It offers a convenient way of specifying search criteria to use.  The factory is capable of producing filters that conform to a specific schema, and is associated
 with the FixedBillingEntryManager that supports the given schema.}{\b\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 
\par \tab BaseFilterFactory (interface)
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 \tab This is a base FilterFactory interface that provides filter creation methods that may be used for filters of any Time Tracker Bean.  It encapsulates filters 
for the common functionality - namely, the creation and modification date and user.}{\b\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab 
\par \tab FixedBillingEntryRejectReasonDAO (interface)
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 \tab }{\f1\fs20\insrsid2837002 This is an interface definition for the DAO that is responsible for handling the association between Time Tracker FixedBill
ingEntries and the Reject Reasons.  Simple CRUDE methods are specified.
\par 
\par }{\b\f1\fs20\insrsid2837002 FixedBillingStatusManager (interface)
\par }{\f1\fs20\insrsid2837002 \tab This interface represents the API that may be used in order to manipulate the various details involving a FixedBillingStatus.  CRUDE and search 
methods are provided to manage the FixedBillingStatuses inside a persistent store.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab FixedBillingStatusDAO (interface)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 \tab \tab }{\f1\fs20\insrsid2837002 
This is an interface definition for the DAO that is responsible for handling the retrieval, storage,and searching of FixedBillingStatus
 data from a persistent store.  It is also responsible for generating ids for any entities within it's scope, whenever an id is required.
\par }{\b\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab FixedBillingStatusFilterFactory (interface)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 \tab \tab }{\f1\fs20\insrsid2837002 This interface defines a factory that is capable of creating search fi
lters used for searching through FixedBillingStatuses.  It offers a convenient way of specifying search criteria to use.  The factory is capable of producing filters that conform to a specific schema, and is associated with the FixedBillingStatusManager t
hat supports the given schema.
\par }{\b\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab StringMatchType
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 \tab \tab }{\f1\fs20\insrsid2837002 
This is an enum that is used by the FilterFactories for those methods when a String criterion is specified.  This gives the user a convenient way of specifying the method of matching the Strings.
\par }{\b\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab FixedBillingEntry
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 \tab \tab }{\f1\fs20\insrsid2837002 
This is the main data class of the component, and includes getters and setters to access the various properties of a Fixed Billing Entry,   A Fixed Billing Entry is an amount of money spent by a Project Manager for a specific Project and client.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab FixedBillingStatus
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 \tab \tab }{\f1\fs20\insrsid2837002 
This is a bean that represents a FixedBillingEntryStatus, which represents a possible state that a FixedBillingEntry can have in the context of the Time Tracker system.
\par }{\f1\fs20\insrsid14692026 
\par }{\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab FixedBillingManagerImpl
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 \tab \tab }{\f1\fs20\insrsid2837002 This is a default impleme
ntation of the FixedBillingEntryManager interface.  it utilizes instances of the FixedBillingEntryDAO in order to fulfill the necessary CRUDE and search operations defined for the Time Tracker FixedBillingEntries.  It also uses FixedBillingEntryRejectReas
onDAO to associate any RejectReasons with the FixedBillingEntries.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab FixedBillingStatusManagerImpl
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 \tab \tab }{\f1\fs20\insrsid2837002 
This is a default implementation of the FixedBillingStatusManager interface.  it utilizes instances of the FixedBillingStatusDAO in order to fulfill the necessary CRUDE and search operations defined for the Time Tracker FixedBillingStatuses.
\par }{\f1\fs20\insrsid14692026 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0\pararsid14692026 {\b\f1\fs20\insrsid14692026 \tab ManagerFactory
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid14692026 {\b\f1\fs20\insrsid14692026 \tab \tab }{\f1\fs20\insrsid14692026\charrsid14692026 This is a class that acts as a factory for the managers, and may be used}{
\f1\fs20\insrsid14692026  }{\f1\fs20\insrsid14692026\charrsid14692026 to easily access the manager class for various purposes.  It uses lazy instantiation}{\f1\fs20\insrsid14692026  }{\f1\fs20\insrsid14692026\charrsid14692026 
to create the managers.  Instantiation is done through the}{\f1\fs20\insrsid14692026  }{\f1\fs20\insrsid14692026\charrsid14692026 Object Factory.
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid14692026 
\par }{\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab Package com.topcoder.time.tracker.entry.fixedbilling.db
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 BaseDAO
\par }{\f1\fs20\insrsid2837002 \tab This is a base DAO class that encapsulates the common elements that may be found within a DAO such as the connection details, id generator, search strategy and audit manager.
\par 
\par }{\b\f1\fs20\insrsid2837002 DbFixedBillingEntryDAO
\par }{\f1\fs20\insrsid2837002 \tab This is an implementation of the FixedBillingEntryDAO interface that utilizes a database with the schema provided in the Requirements Section of Time Tracker Fixed Billing  Entry 3.1.  
\par }{\b\f1\fs20\insrsid2837002 
\par DbFixedBillingStatusDAO
\par }{\f1\fs20\insrsid2837002 \tab This is an implementation of the FixedBillingStatusDAO interface that utilizes a database with the schema provided in the Requirements Section of Time Tracker Fixed Billing  Entry 3.1.
\par 
\par 
\par }{\b\f1\fs20\insrsid2837002 DbFixedBillingEntryRejectReasonDAO
\par }{\f1\fs20\insrsid2837002 \tab This is an implementation of the DbFixedBillingEntryRejectReasonDAO interface that utilizes a database with the schema provided in the Requirements Section of Time Tracker Fixed Billing  Entry 3.1.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab Package com.topcoder.time.tracker.entry.fixedbilling.filterfactory
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 
\par  MappedBaseFilterFactory
\par }{\f1\fs20\insrsid2837002 \tab This is an implementation of the BaseFilterFactory that may be used to build filters.
\par }{\b\f1\fs20\insrsid2837002 
\par  MappedFixedBillingStatusFilterFactory
\par }{\f1\fs20\insrsid2837002 \tab This is an implementation of the FixedBillingStatusFilterFactory that may be used to build filters.
\par }{\b\f1\fs20\insrsid2837002 
\par  MappedFixedBillingEntryFilterFactory
\par }{\f1\fs20\insrsid2837002 \tab This is an implementation of the FixedBillingEntryFilterFactory that may be used to build filters.
\par }{\b\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 \tab Package com.topcoder.time.tracker.entry.fixedbilling.filterfactory
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 
\par FixedBillingEntryManagerDelegate
\par }{\f1\fs20\insrsid2837002 \tab This is a Business Delegate/Service Locator that may be used within a J2EE applic
ation.  It is responsible for looking up the local interface of the SessionBean for FixedBillingEntryManager, and delegating any calls to the bean.
\par }{\b\f1\fs20\insrsid2837002 
\par FixedBillingStatusManagerDelegate
\par }{\f1\fs20\insrsid2837002 \tab This is a Business Delegate/Service Locator that may be used wi
thin a J2EE application.  It is responsible for looking up the local interface of the SessionBean for FixedBillingStatusManager, and delegating any calls to the bean.
\par 
\par }{\b\f1\fs20\insrsid2837002 FixedBillingEntrySessionBean
\par }{\f1\fs20\insrsid2837002 \tab This is a Stateless SessionBean that is used to provided b
usiness services to manage FixedBillingEntries within the Time Tracker Application. It contains the same methods as FixedBillingEntryManager, and delegates to an instance of FixedBillingEntryManager.
\par 
\par }{\b\f1\fs20\insrsid2837002 FixedBillingStatusSessionBean
\par }{\f1\fs20\insrsid2837002 \tab This is a Stateless Sess
ionBean that is used to provided business services to manage FixedBillingStatuses within the Time Tracker Application. It contains the same methods as FixedBillingStatusManager, and delegates to an instance of FixedBillingStatusManager.}{
\b\f1\fs20\insrsid2837002 
\par 
\par FixedBillingEntryManagerLocal
\par \tab }{\f1\fs20\insrsid2837002 Local interface for FixedBillingEntryManager.  It contains exactly the same methods
\par as FixedBillingEntryManager interface.
\par 
\par }{\b\f1\fs20\insrsid2837002 FixedBillingStatusManagerLocal
\par \tab }{\f1\fs20\insrsid2837002 Local interface for FixedBillingStatusManager.  It contains exactly the same methods
\par as FixedBillingStatusManager interface.
\par 
\par }{\b\f1\fs20\insrsid2837002 FixedBillingEntryManagerLocalHome}{\f1\fs20\insrsid2837002 
\par \tab LocalHome interface for the FixedBillingEntryManager.  It contains only a single no-param create method that produces an instance of the local interface.  it is used to obtain a handle to the Stateless SessionBean.
\par 
\par }{\b\f1\fs20\insrsid2837002 FixedBillingStatusManagerLocalHome}{\f1\fs20\insrsid2837002 
\par \tab LocalHome interface for the FixedBillingStatusManager.  It contains only a single no-param create method that produces an instance of the local interface.  it is used to obtain a handle to the Stateless SessionBean.}{\b\f1\fs20\insrsid2837002 
\par 
\par }\pard \ql \li1140\ri0\nowidctlpar\faauto\rin0\lin1140\itap0 {\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 1.5Component Exception Definitions
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 DataAccessException 
\par }{\f1\fs20\insrsid2837002 \tab This exception is thrown when a problem occurs while this component is interacting with the persistent store.  It is thrown by all the DAO and Manager interfaces (and their respective implementations).
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\insrsid2837002 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 UnrecognizedEntityException
\par }{\f1\fs20\insrsid2837002 \tab This exception is thrown when interacting with the data store and an entity cannot be recognized.  It may be thrown when an entity with
\par a specified identifier cannot be found.  It is thrown by all the Manager and DAO interfaces (and their implementations).
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\insrsid2837002 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 InvalidCompanyException
\par }{\f1\fs20\insrsid2837002 \tab This exception is thrown when there is an attempt to relate a Time Tracker entities to a FixedBillingEntry whose
 companies do not match.  For example, adding a RejectReason to a FixedBillingEntry when their companies are different.
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid5643327 {\b\f1\fs20\insrsid5643327 
\par ConfigurationException
\par }{\f1\fs20\insrsid5643327 \tab }{\f1\fs20\insrsid5643327\charrsid5643327 This exception is thrown when there are problems with configuration.
\par }{\f1\fs20\insrsid5643327 
\par }{\b\f1\fs20\insrsid5643327 InvalidFilterException
\par }{\f1\fs20\insrsid5643327 \tab }{\f1\fs20\insrsid5643327\charrsid5643327 This exception is thrown when there is request to perform a search with filters that cannot be recognized}{\f1\fs20\insrsid5643327  }{\f1\fs20\insrsid5643327\charrsid5643327 
by the given DAO or Manager class.
\par }{\b\f1\fs20\insrsid5643327 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid2837002 {\b\f1\fs20\insrsid2837002 BatchOperationException
\par }{\f1\fs20\insrsid2837002 \tab }{\f1\fs20\insrsid2837002\charrsid2837002 This exception is thrown during batch operations where one or more of the elements in the batch failed to}{\f1\fs20\insrsid2837002  }{\f1\fs20\insrsid2837002\charrsid2837002 
be processed properly.  It will contain an array of causes: each element that managed to be processed successfully}{\f1\fs20\insrsid2837002  }{\f1\fs20\insrsid2837002\charrsid2837002 will have a null for the }{\f1\fs20\insrsid2837002 c}{
\f1\fs20\insrsid2837002\charrsid2837002 orresponding element in the causes array, and each element that failed to be processed}{\f1\fs20\insrsid2837002  will }{\f1\fs20\insrsid2837002\charrsid2837002 have an Exception detai
ling the reason for failure in the causes array.}{\b\f1\fs20\insrsid2837002\charrsid2837002 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid5643327 {\b\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\insrsid5643327 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 1.6Thread Safety
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\insrsid2837002 
\par }\pard \ql \li735\ri0\sa120\nowidctlpar\faauto\rin0\lin735\itap0 {\f1\fs20\insrsid2837002 This component is not completely thread-safe, The Bean i
nstances are not thread safe, and it is expected to be used concurrently only for read-only access.  Otherwise, each thread is expected to work with its own instance.
\par The Manager classes are required to be thread safe, and achieves this via the thread safety of the implementations of the DAO Layer, and the FilterFactory Layer.  
\par The DAOLayer is made thread safe through the use of transactions, and is achieved with the transaction level of READ_COMMITTED.
\par The FilterFactory layer is thread-safe by virtue of being immutable.
\par }\pard \ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\tx77\faauto\rin0\lin0\itap0 {\b\f1\insrsid2837002 2.Environment Requirements\tab \tab 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 2.1Environment
\par }\pard \ql \li735\ri0\sa57\nowidctlpar\faauto\rin0\lin735\itap0 {\f1\fs20\insrsid2837002 Java 1.4
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 2.2TopCoder Software Components
\par }\pard \ql \li720\ri0\sa57\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\insrsid2837002 DB Connection Factory 1.0}{\f1\fs20\insrsid2837002  \endash  for creating the DB connections.  The Connection Factory may be configured 
to retrieve connections from the JBoss TXDataSource if desired.}{\f1\insrsid2837002 
\par }{\b\f1\fs20\insrsid2837002 Base Exception 1.0}{\f1\fs20\insrsid2837002  \endash  base class for custom exception is taken from it}{\f1\insrsid2837002 
\par }{\b\f1\fs20\insrsid2837002 Object Factory 2.0}{\b\f1\fs20\insrsid7240504 .1}{\f1\fs20\insrsid2837002  \endash  is indirectly used to configure the component.
\par }{\b\f1\fs20\insrsid2837002 ID Generator 3.0}{\f1\fs20\insrsid2837002  \endash  for generating IDs in the persistence implementation.
\par }{\b\f1\fs20\insrsid2837002 TypeSafe Enum 1.0}{\f1\fs20\insrsid2837002  \endash  is used for the StringMatchType enum.}{\b\f1\fs20\insrsid2837002 
\par Search Builder 1.3.1}{\f1\fs20\insrsid2837002  \endash  is used to perform the searches
\par }{\b\f1\fs20\insrsid2837002 JNDI Context Utility 1.0 - }{\f1\fs20\insrsid2837002 is used by the business delegates to look up the home interface of the session bean.}{\b\f1\fs20\insrsid2837002 
\par ConfigManager 2.1.5 }{\f1\fs20\insrsid2837002 \endash  was not used because it relies on Object Factory for configuration.}{\b\f1\fs20\insrsid2837002 
\par Time Tracker Audit 3.1}{\f1\fs20\insrsid2837002  \endash  is used to perform the optional audit.
\par }{\b\f1\fs20\insrsid2837002 Time Tracker Base Entry 3.1}{\f1\fs20\insrsid2837002  \endash  is used to provide the base entry class.
\par }{\b\f1\fs20\insrsid2837002 Time Tracker Reject Reason 3.1}{\f1\fs20\insrsid2837002  \endash  is used to retrieve the RejectReason information.}{\b\f1\fs20\insrsid2837002 
\par Time Tracker Common 3.1}{\f1\fs20\insrsid2837002  \endash  is used to provide the TimeTrackerBean base class.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 2.3Third Party Components
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 None
\par }\pard \ql \li720\ri0\sb120\sa60\sl240\slmult0\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\i\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\tx77\faauto\rin0\lin0\itap0 {\b\f1\insrsid2837002 3.Installation and Configuration
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 3.1Package Names
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 com.topcoder.time.tracker.entry.fixedbilling
\par com.topcoder.time.tracker.entry.fixedbilling.db
\par com.topcoder.time.tracker.entry.fixedbilling.filterfactory
\par com.topcoder.time.tracker.entry.fixedbilling.j2ee
\par 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 3.2Configuration Parameters
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 This component relies on Object Factory 2.0 for configuration that i
s based from a file.  See the sample configuration file (docs/Time_Tracker_Fixed_Billing_Entry_Object_Factory_Sample_Config.xml) provided on how to configure Object Factory to do this.
\par 
\par For the j2ee portion, the following config parameters are used by all business delegates:
\par 
\par }{\b\f1\fs20\ul\insrsid2837002 For FixedBillingEntryManagerDelegate and FixedBillingStatusManagerDelegate:
\par 
\par }{\b\f1\fs20\insrsid2837002 Property Name: }{\i\f1\fs20\insrsid2837002 contextName}{\f1\fs20\insrsid2837002 
\par }{\b\f1\fs20\insrsid2837002 Property Description: }{\f1\fs20\insrsid2837002 This is the context name used to retrieve the home object of the respective session bean.  If not specified, then the default context provided by JNDIUtils is used.
\par }{\b\f1\fs20\insrsid2837002 Is Required: }{\i\f1\fs20\insrsid2837002 Optional}{\b\i\f1\fs20\ul\insrsid2837002 
\par }{\b\f1\fs20\ul\insrsid2837002 
\par }{\f1\fs20\insrsid2837002 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 3.3Dependencies Configuration
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 All the dependencies are to be configured according to their component specifications.
\par 
\par Do note that the default configuration for Search Builder is desired to be able to build the search string correctly.
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\i\f1\fs20\cf2\insrsid2837002 
\par }\pard \ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\tx77\faauto\rin0\lin0\itap0 {\b\f1\insrsid2837002 4.Usage Notes
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 4.1Required steps to test the component
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 Extract the component distribution.
\par Follow Dependencies Configuration.
\par Execute \lquote ant test\rquote  within the directory that the distribution was extracted to.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 4.2Required steps to use the component
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid2837002 Configure the dependency components. 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\nowidctlpar\tx0\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid2837002 4.3 Demo
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid2837002 
\par We will assume here that everything is configured properly.  Try/catch clauses have been removed to enhance clarity.
\par }{\i\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf11\insrsid2837002 // Create a FixedBillingEntryManagerDelegate
\par }{\f1\fs20\cf9\insrsid2837002 FixedBillingEntryManager entryManager = new FixedBillingEntryManagerDelegate("applicationNamespace");
\par }{\f1\fs20\insrsid2837002 
\par }{\b\f1\fs20\cf11\insrsid2837002 //  4.3.1 Creating a new Entry}{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf9\insrsid2837002 FixedBillingEntry newEntry = new FixedBillingEntry();
\par newEntry.setCompanyId(tcCompanyId);
\par newEntry.setDescription("Dinner");
\par newEntry.setEntryDate(new Date());
\par newEntry.setStatus(pendingStatus);
\par }{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf11\insrsid2837002 // Register the entry with the manager, with auditing.}{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf9\insrsid2837002 entryManager.createFixedBillingEntry(newEntry, true);
\par }{\f1\fs20\insrsid2837002 
\par }{\b\f1\fs20\cf11\insrsid2837002 // 4.3.2 Changing the Entry Details}{\f1\fs20\insrsid2837002 
\par 
\par }{\f1\fs20\cf11\insrsid2837002 // Retrieve an entry from the manager
\par }{\f1\fs20\cf9\insrsid2837002 FixedBillingEntry changingEntry = entryManager.getFixedBillingEntry(entryIdToChange);
\par }{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf11\insrsid2837002 // Update the entry details.}{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf9\insrsid2837002 changingEntry.setDescription("Purchase Replacement Parts");
\par changingEntry.setStatus(rejectedStatus);
\par }{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf11\insrsid2837002 // Update the entry in the manager}{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf9\insrsid2837002 entryManager.updateFixedBillingEntry(changingEntry);
\par 
\par }{\f1\fs20\cf11\insrsid2837002 // Add a RejectReason to the Entry
\par }{\f1\fs20\cf9\insrsid2837002 entryManager.addRejectReasonToEntry(changingEntry, rejectReasonId);
\par }{\f1\fs20\insrsid2837002 
\par }{\b\f1\fs20\cf11\insrsid2837002 // 4.3.3 Search for a group of Entries with "Purchase" in the description and status of "pending" and delete them.  The delete operation should be atomic.
\par }{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf11\insrsid2837002 // Define the search criteria.
\par }{\f1\fs20\cf9\insrsid2837002 FixedBillingEntryFilterFactory filterFactory = entryManager.getFixedBillingEntryFilterFactory();
\par List criteria = new ArrayList();
\par criteria.add(filterFactory.createDescriptionFilter("Purchase", StringMatchType.SUBSTRING));
\par criteria.add(filterFactory.createStatusFilter(pendingStatus));
\par }{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf11\insrsid2837002 // Create a search filter that aggregates the criteria.
\par }{\f1\fs20\cf9\insrsid2837002 Filter searchFilter = new AndFilter(criteria);}{\f1\fs20\insrsid2837002 
\par 
\par }{\f1\fs20\cf11\insrsid2837002 // Perform the actual search.}{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf9\insrsid2837002 FixedBillingEntry[] matchingEntries = entryManager.searchFixedBillingEntries(searchFilter);
\par }{\f1\fs20\insrsid2837002 
\par }{\f1\fs20\cf11\insrsid2837002 // Delete the users; auditing is performed.
\par }{\f1\fs20\cf9\insrsid2837002 entryManager.deleteFixedBillingEntries(matchingEntries, true);
\par }{\f1\fs20\insrsid2837002 
\par }{\b\f1\fs20\cf11\insrsid2837002 // 4.3.4 Retrieve all Reject Reasons for a specific entry and delete them; The operation should be non-atomic.
\par }{\f1\fs20\cf11\insrsid2837002 
\par }{\f1\fs20\cf9\insrsid2837002 long[] rejectReasonIds = entryManager.getAllRejectReasonsForEntry(targetEntryId);}{\f1\fs20\cf11\insrsid2837002 
\par 
\par // A for loop will be used to feed the rejectReasonIds singularly.  The application container will take care of rolling back any failed transactions.
\par }{\f1\fs20\cf9\insrsid2837002 for (int x = 0; x < rejectReasonIds.length; x++) \{
\par }{\f1\fs20\cf11\insrsid2837002 \tab }{\f1\fs20\cf9\insrsid2837002 entryManager.removeRejectReasonFromEntry(targetEntryId, rejectReasonIds[x]);
\par \}}{\f1\fs20\cf11\insrsid2837002 
\par }{\b\f1\fs20\cf11\insrsid2837002 
\par // 4.3.5 Create a new FixedBillingStatus
\par 
\par }{\f1\fs20\cf11\insrsid2837002 // Create a FixedBillingStatusManagerDelegate
\par }{\f1\fs20\cf9\insrsid2837002 FixedBillingStatusManager statusManager = new FixedBillingStatusManagerDelegate("applicationNamespace");
\par 
\par }{\f1\fs20\cf11\insrsid2837002 // Define a Status
\par }{\f1\fs20\cf9\insrsid2837002 FixedBillingStatus status = new FixedBillingStatus();
\par status.setDescription("Tentative Approved");
\par status.setCreationUser("TCUSER");
\par status.setModificationUser("TCUSER");
\par 
\par }{\f1\fs20\cf11\insrsid2837002 // Create the status in the manager.
\par }{\f1\fs20\cf9\insrsid2837002 statusManager.createFixedBillingStatus(status);
\par 
\par }{\f1\fs20\cf11\insrsid2837002 // A slight mistake was made in the description; Change it.}{\f1\fs20\cf9\insrsid2837002 
\par status.setDescription("Tentative Approval");
\par 
\par }{\f1\fs20\cf11\insrsid2837002 // Update the status in the manager.
\par }{\f1\fs20\cf9\insrsid2837002 statusManager.updateFixedBillingStatus(status);
\par 
\par }{\f1\fs20\cf11\insrsid2837002 // Verify the status exists by searching for it.
\par }{\f1\fs20\cf9\insrsid2837002 FixedBillingStatusFilterFactory statusFilterFactory = statusManager.createFixedBillingStatusFilterFactory();
\par 
\par FixedBillingStatus[] statusResults = statusManager.searchFixedBillingStatuses(statusFilterFactory.createDescriptionFilter("Tentative Approval", StringMatchType.EXACT_MATCH));
\par 
\par }{\b\f1\fs20\cf11\insrsid2837002 // 4.3.6 Batch operations (delete is already shown in 4.3.3)
\par 
\par }{\f1\fs20\cf11\insrsid2837002 //  Batch create (we assume entriesToCreate has already been defined)
\par }{\f1\fs20\cf9\insrsid2837002 entryManager.createFixedBillingEntries(entriesToCreate, true);}{\f1\fs20\cf11\insrsid2837002 
\par 
\par // Retrieve a set of entries, change the description and update them (we assume entryIdsToRetrieve is already defined).
\par }{\f1\fs20\cf9\insrsid2837002 FixedBillingEntry[] entriesToUpdate = entryManager.getFixedBillingEntries(entryIdsToRetrieve, true);
\par for (int x = 0; x< entriesToUpdate.length; x++) \{
\par     entriesToUpdate[x].setDescription("Board and Lodging");
\par \}}{\f1\fs20\cf11\insrsid2837002 
\par 
\par 
\par // Perform the batch update
\par }{\f1\fs20\cf9\insrsid2837002 entryManager.updateFixedBillingEntries(entriesToUpdate, true);}{\f1\fs20\cf11\insrsid2837002 
\par 
\par }{\f1\fs20\cf9\insrsid2837002 
\par 
\par 
\par }{\f1\fs20\insrsid2837002 
\par }\pard \ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\tx77\faauto\rin0\lin0\itap0 {\b\f1\insrsid2837002 5.Future Enhancements
\par }\pard \ql \li750\ri0\sa120\nowidctlpar\faauto\rin0\lin750\itap0 {\f1\fs20\insrsid2837002 Provide implementations for different RDBMS.  
\par }}