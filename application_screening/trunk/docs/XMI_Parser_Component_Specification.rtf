{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1049{\fonttbl{\f0\froman\fcharset204\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset204\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset204\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}
{\f16\fswiss\fcharset134\fprq2{\*\panose 020b0604020202020204}Arial Unicode MS{\*\falt Times New Roman};}{\f17\fswiss\fcharset204\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f18\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}??{\*\falt SimSun};}{\f189\froman\fcharset0\fprq2 Times New Roman;}{\f187\froman\fcharset238\fprq2 Times New Roman CE;}{\f190\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f191\froman\fcharset162\fprq2 Times New Roman Tur;}{\f192\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f195\fswiss\fcharset0\fprq2 Arial;}{\f193\fswiss\fcharset238\fprq2 Arial CE;}{\f196\fswiss\fcharset161\fprq2 Arial Greek;}
{\f197\fswiss\fcharset162\fprq2 Arial Tur;}{\f198\fswiss\fcharset186\fprq2 Arial Baltic;}{\f201\fmodern\fcharset0\fprq1 Courier New;}{\f199\fmodern\fcharset238\fprq1 Courier New CE;}{\f202\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f203\fmodern\fcharset162\fprq1 Courier New Tur;}{\f204\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f291\fswiss\fcharset0\fprq2 Verdana;}{\f289\fswiss\fcharset238\fprq2 Verdana CE;}{\f292\fswiss\fcharset161\fprq2 Verdana Greek;}
{\f293\fswiss\fcharset162\fprq2 Verdana Tur;}{\f294\fswiss\fcharset186\fprq2 Verdana Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\upr{\stylesheet{
\widctlpar\adjustright \cgrid \snext0 Normal;}{\s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid \sbasedon1 \snext0 heading 2;}{\s3\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl2\outlinelevel2\adjustright \i\fs20\cgrid \sbasedon1 \snext0 heading 3;}{
\s4\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl3\outlinelevel3\adjustright \fs20\cgrid \sbasedon1 \snext0 heading 4;}{\s5\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\ls1\ilvl4\outlinelevel4\adjustright \fs22\cgrid 
\sbasedon0 \snext0 heading 5;}{\s6\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\ls1\ilvl5\outlinelevel5\adjustright \i\fs22\cgrid \sbasedon0 \snext0 heading 6;}{\s7\sb240\sa60\sl240\slmult0\nowidctlpar
\jclisttab\tx0\ls1\ilvl6\outlinelevel6\adjustright \fs20\cgrid \sbasedon0 \snext0 heading 7;}{\s8\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\ls1\ilvl7\outlinelevel7\adjustright \i\fs20\cgrid \sbasedon0 \snext0 heading 8;}{
\s9\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\ls1\ilvl8\outlinelevel8\adjustright \b\i\fs18\cgrid \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \ul\cf2 \sbasedon10 Hyperlink;}{
\s16\sa120\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext16 Body Text;}{\s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid \sbasedon0 \snext16 \sautoupd InfoBlue;}{\*\cs18 \additive \fs20 \sbasedon10 HTML Code;}{\*\cs19 \additive 
\cf2 \sbasedon10 m1;}{\*\cs20 \additive \cf13 \sbasedon10 t1;}{\*\cs21 \additive \b\f2\ulnone\cf6\animtext0 \sbasedon10 b1;}{\s22\sb100\sa100\widctlpar\adjustright \cgrid \sbasedon0 \snext22 Normal (Web);}{\s23\li720\widctlpar\adjustright \fs20\cgrid 
\sbasedon0 \snext23 Body Text 2;}}{\*\ud\uc0{\stylesheet{\widctlpar\adjustright \cgrid \snext0 Normal;}{\s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\cgrid \sbasedon0 \snext0 heading 1;}{
\s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid \sbasedon1 \snext0 heading 2;}{\s3\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl2\outlinelevel2\adjustright \i\fs20\cgrid 
\sbasedon1 \snext0 heading 3;}{\s4\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl3\outlinelevel3\adjustright \fs20\cgrid \sbasedon1 \snext0 heading 4;}{\s5\sb240\sa60\sl240\slmult0\nowidctlpar
\jclisttab\tx0\ls1\ilvl4\outlinelevel4\adjustright \fs22\cgrid \sbasedon0 \snext0 heading 5;}{\s6\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\ls1\ilvl5\outlinelevel5\adjustright \i\fs22\cgrid \sbasedon0 \snext0 heading 6;}{
\s7\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\ls1\ilvl6\outlinelevel6\adjustright \fs20\cgrid \sbasedon0 \snext0 heading 7;}{\s8\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\ls1\ilvl7\outlinelevel7\adjustright \i\fs20\cgrid 
\sbasedon0 \snext0 heading 8;}{\s9\sb240\sa60\sl240\slmult0\nowidctlpar\jclisttab\tx0\ls1\ilvl8\outlinelevel8\adjustright \b\i\fs18\cgrid \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \ul\cf2 \sbasedon10 
Hyperlink;}{\s16\sa120\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext16 Body Text;}{\s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid \sbasedon0 \snext16 \sautoupd InfoBlue;}{\*\cs18 \additive \fs20 \sbasedon10 HTML Code;}{\*
\cs19 \additive \cf2 \sbasedon10 m1;}{\*\cs20 \additive \cf13 \sbasedon10 t1;}{\*\cs21 \additive \b\f2\ulnone\cf6\animtext0 \sbasedon10 b1;}{\s22\sb100\sa100\widctlpar\adjustright \cgrid \sbasedon0 \snext22 Normal (Web);}{\s23\li720\widctlpar\adjustright 
\fs20\cgrid \sbasedon0 \snext23 Body Text 2;}}}}{\*\listtable{\list\listtemplateid-985754512{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\s1\jclisttab\tx360 }{\listlevel
\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'03\'00.\'01;}{\levelnumbers\'01\'03;}\s2\jclisttab\tx0 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'05\'00.\'01.\'02;}{\levelnumbers\'01\'03\'05;}\s3\jclisttab\tx0 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\s4\jclisttab\tx0 }{\listlevel
\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers\'01\'03\'05\'07\'09;}\s5\jclisttab\tx0 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\s6\jclisttab\tx0 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers
\'01\'03\'05\'07\'09\'0b\'0d;}\s7\jclisttab\tx0 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'0f\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\s8\jclisttab\tx0 }
{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\s9\jclisttab\tx0 }{\listname ;}\listid-5}
{\list\listtemplateid-45820018{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520
\jclisttab\tx2520 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960\jclisttab\tx3960 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680 }
{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840 }{\listname ;}\listid515114324}
{\list\listtemplateid780937816{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520
\jclisttab\tx2520 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960\jclisttab\tx3960 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680 }
{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840 }{\listname ;}\listid707996584}
{\list\listtemplateid-160384884{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\f3\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listlevel\levelnfc4\leveljc0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520
\jclisttab\tx2520 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960\jclisttab\tx3960 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680 }
{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840 }{\listname ;}\listid806357716}
{\list\listtemplateid932329388{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\f3\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listlevel\levelnfc23\leveljc0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1800\jclisttab\tx1800 }{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3929 ?};}{\levelnumbers;}
\f14\fbias0 \fi-360\li2520\jclisttab\tx2520 }{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\f3\fbias0 \fi-360\li3240\jclisttab\tx3240 }{\listlevel\levelnfc23\leveljc0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3960\jclisttab\tx3960 }{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'01{\uc1\u-3929 ?};}{\levelnumbers;}\f14\fbias0 \fi-360\li4680\jclisttab\tx4680 }{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01{\uc1\u-3913 ?};}{\levelnumbers;}\f3\fbias0 \fi-360\li5400
\jclisttab\tx5400 }{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li6120\jclisttab\tx6120 }{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'01{\uc1\u-3929 ?};}{\levelnumbers;}\f14\fbias0 \fi-360\li6840\jclisttab\tx6840 }{\listname ;}\listid876431865}{\list\listtemplateid808758312{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800 }{\listlevel
\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960\jclisttab\tx3960 }{\listlevel\levelnfc2\leveljc2
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}
\fi-360\li5400\jclisttab\tx5400 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840 }{\listname ;}\listid1086880549}{\list\listtemplateid255499306{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li1080\jclisttab\tx1080 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800 }{\listlevel\levelnfc2
\leveljc2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers
\'01;}\fi-360\li3240\jclisttab\tx3240 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960\jclisttab\tx3960 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400
\jclisttab\tx5400 }{\listlevel\levelnfc4\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\fi-360\li6120\jclisttab\tx6120 }{\listlevel\levelnfc2\leveljc2\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840 }{\listname ;}\listid1622490517}}{\*\listoverridetable{\listoverride\listid-5\listoverridecount9{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls1}{\listoverride\listid806357716\listoverridecount9{\lfolevel\levelstartat0}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel
\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}{\lfolevel\listoverridestartat
\levelstartat1}{\lfolevel\listoverridestartat\levelstartat1}\ls2}{\listoverride\listid876431865\listoverridecount9{\lfolevel\levelstartat0}{\lfolevel\levelstartat0}{\lfolevel\levelstartat0}{\lfolevel\levelstartat0}{\lfolevel\levelstartat0}{\lfolevel
\levelstartat0}{\lfolevel\levelstartat0}{\lfolevel\levelstartat0}{\lfolevel\levelstartat0}\ls3}{\listoverride\listid515114324\listoverridecount0\ls4}{\listoverride\listid1622490517\listoverridecount0\ls5}{\listoverride\listid1086880549
\listoverridecount0\ls6}{\listoverride\listid707996584\listoverridecount0\ls7}}{\info{\title XMI Parser 1.0 Component Specification}{\author Chao Yang}{\operator Nick}{\creatim\yr2005\mo2\dy27\hr18\min50}{\revtim\yr2006\mo2\dy4\hr11\min7}
{\printim\yr2005\mo3\dy1\hr1\min27}{\version19}{\edmins101}{\nofpages13}{\nofwords3607}{\nofchars20560}{\*\company CS.ZJU}{\nofcharsws25249}{\vern89}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectlinegrid360\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang
{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9
\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx720\outlinelevel0\adjustright \b\cgrid {\fs28\ul \hich\af1\dbch\af16\loch\f1 XMI Parser 1.0 Component Specification
\par }\pard\plain \s16\li720\sa120\widctlpar\adjustright \fs20\cgrid {
\par {\listtext\pard\plain\s1 \b\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 1.\tab}}\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\cgrid {\hich\af1\dbch\af16\loch\f1 Design
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {\f1 
An XMI file contains several UML diagrams - Use Case, Class, Sequence, Collaboration, State, and Deployment and elements like Association, Actor, and Use Case etc. Each diagram (e.g. with the tag UML:Diagram) 
is a node which contains references to the elements (e.g. UML:UseCase). These elements are nodes themselves which in turn contain references to their diagrams.
\par }\pard\plain \s16\qj\li720\sa120\widctlpar\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 The XMI Parser Component provides the ability to determine the UML elements that make up an XMI \hich\af1\dbch\af18\loch\f1 format of a Poseidon UML model.

\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {\f1 
The parser can accept a File, Stream or a String as a source of XMI. It uses callback methods on handlers to de-couple parsing and processing. The handlers can be configured with the help of TopCoder Configuration Manager Co
mponent. The default namespace contains the configuration for the default handling provided with the component. The component makes it possible to plug-in specific custom handlers for each node or handlers for a set of nodes by specifying configuration pr
o
perties in a different namespace (as standard Java properties) and passing this namespace to the constructor. In the constructor, the parser registers the handlers for the nodes from the configuration in an internal map. The parser creates only one instan
ce of a particular handler.}{
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {\tab }{\hich\af1\dbch\af18\loch\f1 The handlers can also be managed programmatically.\tab 
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 The default handler handles set of required nodes (UML diagrams/elements). It provides the following functionality \endash 
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 1.\tab}}\pard\plain \s16\fi-360\li1080\sa120\widctlpar\jclisttab\tx1080\ls5\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 
Builds the collection of diagrams as data objects. Each dia\hich\af1\dbch\af18\loch\f1 gram in turn contains objects for the elements. For example, there is a collection of Class diagrams. Each Class diagram contains a set of Classes.
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 2.\tab}\hich\af1\dbch\af18\loch\f1 Provides API to access the diagrams of a certain type.
\par }\pard \s16\sa120\widctlpar\adjustright {
\par }\pard \s16\li720\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 The initial version of the API would contain
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 a.\tab}}\pard \s16\fi-360\li1080\sa120\widctlpar\jclisttab\tx1080\ls6\adjustright {\hich\af1\dbch\af18\loch\f1 Method \hich\af1\dbch\af18\loch\f1 
giving a list of diagrams as data objects of a given type;
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 b.\tab}\hich\af1\dbch\af18\loch\f1 Method giving a list of diagram names of a given type;
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 c.\tab}\hich\af1\dbch\af18\loch\f1 Method that gives a list of concrete use cases in a given Use Case diagram;
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 d.\tab}\hich\af1\dbch\af18\loch\f1 Method that gives a list of abstract use cases in a given Use Case\hich\af1\dbch\af18\loch\f1  diagram;
\par {\listtext\pard\plain\s16 \fs20\cf2\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 e.\tab}}{\cf2 \hich\af1\dbch\af18\loch\f1 Method to extract information about use case diagram actors;}{
\par {\listtext\pard\plain\s16 \fs20\cf2\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 f.\tab}}{\cf2 \hich\af1\dbch\af18\loch\f1 
Method to extract information about activity diagram: set of initial states, set of final states, set of transitions for each state etc.}{
\par }\pard \s16\sa120\widctlpar\adjustright {
\par }\pard \s16\li720\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 The configuration property names match the UML \hich\af1\dbch\af18\loch\f1 
diagram/element type names in XMI. The parser executes methods on the handler associated with node name. So, handling depends on the presence/absence of the properties in configuration. This would make processing of XMI extensible to include new elements/
\hich\af1\dbch\af18\loch\f1 d\hich\af1\dbch\af18\loch\f1 
iagrams. For new element/diagram types or for new handlers, it would be only necessary to add configuration properties and handlers and there would be no need to modify parts of the parser component.
\par 
\par \hich\af1\dbch\af18\loch\f1 For example, in the \lquote default.parser\rquote  namespace, handler\hich\af1\dbch\af18\loch\f1 s.properties defines,
\par \hich\af1\dbch\af18\loch\f1 UseCase=DefaultHandler
\par \hich\af1\dbch\af18\loch\f1 Association=DefaultHandler
\par \hich\af1\dbch\af18\loch\f1 UseCaseDiagram=DefaultHandler
\par 
\par \hich\af1\dbch\af18\loch\f1 If specific handlers are required, a different namespace for e.g. \lquote specific.parser\rquote  namespace contains,
\par \hich\af1\dbch\af18\loch\f1 UseCase=UseCaseHandler
\par \hich\af1\dbch\af18\loch\f1 Association=AssocHandler
\par \hich\af1\dbch\af18\loch\f1 U\hich\af1\dbch\af18\loch\f1 seCaseDiagram=UseCaseDiagramHandler
\par 
\par \hich\af1\dbch\af18\loch\f1 The namespace is set in the constructor of the parser. So, the namespace represents a set of handlers to be involved in processing. 
\par \hich\af1\dbch\af18\loch\f1 The Parser would first get all the nodes with the name \lquote UML:Diagram\rquote (Java API provides\hich\af1\dbch\af18\loch\f1 
 convenient way of doing this). This is because, considering the structure of XMI, there will be less overhead, in later linking the other elements to the existing diagrams than the other way round. After processing them(described in detail in the next pa
\hich\af1\dbch\af18\loch\f1 r\hich\af1\dbch\af18\loch\f1 
agraph), it gets the node UML:Namespace of UML:Model which contains the different element types as child nodes. For each node, it then checks for a responsible handler(details later) in the handlerRegister. The diagram/element type name will be the key in
\hich\af1\dbch\af18\loch\f1  \hich\af1\dbch\af18\loch\f1 register, with the value being the qualified class name of the handler. If it cannot find an entry, it ignores.
\par }\pard \s16\sa120\widctlpar\adjustright {\tab 
\par }\pard \s16\li720\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 When XMIParser encounters a UML:Diagram node, it gets the <UML:GraphElement.semanticModel> that is }{\b\i\ul \hich\af1\dbch\af18\loch\f1 directly}{\b \hich\af1\dbch\af18\loch\f1  }
{\hich\af1\dbch\af18\loch\f1 under this Diagram node. It then g\hich\af1\dbch\af18\loch\f1 ets the <UML:SimpleSemanticModelElement> under this node and gets the value of \lquote typeInfo\rquote 
 attribute. This value tells what the diagram type is. This is also matches the constant string in UMLDiagramTypes class. The parser then looks for the key in handler\hich\af1\dbch\af18\loch\f1 R\hich\af1\dbch\af18\loch\f1 
egister with the same name and gets the handler name if present. It looks if this handler is already available in the handlerMap. If yes, it uses it , else it instantiates the handler. It creates an entry in the handlerMap where the key is the qualified h
\hich\af1\dbch\af18\loch\f1 a\hich\af1\dbch\af18\loch\f1 
ndler name and the value is the handler object. From then onwards, whenever the parser encounters that particular diagram type, it gets the handler from the map and executes the handleNode passing the current <UML:Diagram> node and the type of diagram (ty
\hich\af1\dbch\af18\loch\f1 p\hich\af1\dbch\af18\loch\f1 eInfo attribute) to it.
\par \hich\af1\dbch\af18\loch\f1 
When the parser encounters an element node, which is the child nodes in the <UML:Namespace> of <UML:Model> node, it gets the node name which also matches the constants in UMLElementTypes class. It follows the same procedure of acqui
\hich\af1\dbch\af18\loch\f1 ring the handler object, adding to handlerMap etc. It then invokes the handleNode with the node and the element type.
\par }{\f1\cf2 The parser should also handle <UML:ActivityGraph> element and its registered sub-elements to collect information on activity diagram states and transitions. Handling is performed in the similar way as for <UML:Namespace> and <UML:Model>.
\par }{\hich\af1\dbch\af18\loch\f1 The parser also has a method getHandler (<node type>) for clients to access such handlers and do any additional operations. The clients can access this hand\hich\af1\dbch\af18\loch\f1 ler from the parser (e.g. getHandler (
\lquote Diagram\rquote )) and retrieve additional information through the API provided by the handler.
\par 
\par }{\b \hich\af1\dbch\af18\loch\f1 Default Handler}{\hich\af1\dbch\af18\loch\f1 :
\par }\pard\plain \qj\li720\widctlpar\adjustright \cgrid {\fs20 \hich\af1\dbch\af18\loch\f1 This handler needs to maintain state because methods for each diagram/element are invoked by the parser at diff\hich\af1\dbch\af18\loch\f1 
erent times. The handler builds a data structure to store information regarding the diagrams in the model. The API uses this data structure to return information regarding the diagrams/elements.
\par }\pard\plain \s22\qj\li720\sb100\sa100\widctlpar\adjustright \cgrid {\fs20 \hich\af1\dbch\af18\loch\f1 The handleNode checks the type of element/diagram passed to i\hich\af1\dbch\af18\loch\f1 
t which is the second argument. It then invokes the method create<element/diagramType> using reflection. In the default implementation, if the node name is 'UseCaseDiagram', it calls the createUseCaseDiagram() method. If the node name is 'UseCase', it cal
\hich\af1\dbch\af18\loch\f1 l\hich\af1\dbch\af18\loch\f1 s the createUseCase(). Extensions or new implementations can follow the same process for handling additional types.
\par \hich\af1\dbch\af18\loch\f1 In createUseCaseDiagram(), it creates a UMLUseCaseDiagram data object and fills the information like diagram name, id, type and description.\hich\af1\dbch\af18\loch\f1 
 The type will be the same as the current node type which also matches a constant value in UMLDiagramTypes class.  Then it gets all the <UML:UseCase>\~
 child nodes. For each, UseCase node, it adds an entry in the elementsMap of UMLUseCaseDiagram, where the\hich\af1\dbch\af18\loch\f1  \hich\af1\dbch\af18\loch\f1 key is the id\~
 the node and the value is null. The UMLUseCaseDiagram object is added to the 'diagrams' list.
\par \hich\af1\dbch\af18\loch\f1 In createUseCase() method, get the id of the node passed( which the node corresponding to the UseCase). Build the UMLUseCase object and fill the de\hich\af1\dbch\af18\loch\f1 
tails. Get the diagrams from 'diagrams' list which are of type UMLUseCaseDiagram. From the elementsMap of this diagram object, match the key to the id of the element node. Add this UMLUseCase object to the elementsMap with that key. This way by end of pro
\hich\af1\dbch\af18\loch\f1 c\hich\af1\dbch\af18\loch\f1 essing the elementsMap will contain all UseCase elements. Because the XMIParser first processes all diagrams before the elements, there should be no scope of elements not finding a suitable diagram.

\par }{\fs20\cf2 \hich\af1\dbch\af18\loch\f1 Parsing of activity diagram information and information o\hich\af1\dbch\af18\loch\f1 
n use case diagram actors requires several additional private methods in the default handler: createActor, createActivityDiagram, createStateMachine_top, createStateMachine_transitions. Implementation of this methods are similar to the previously describe
\hich\af1\dbch\af18\loch\f1 d\hich\af1\dbch\af18\loch\f1  one, please refer to method docs for more details.
\par }\pard\plain \s16\li720\sa120\widctlpar\adjustright \fs20\cgrid {\b \hich\af1\dbch\af18\loch\f1 Data Objects}{\hich\af1\dbch\af18\loch\f1 :
\par \hich\af1\dbch\af18\loch\f1 For the current requirements, the following data objects will be supported by the default handler.
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 1.\tab}}\pard \s16\fi-360\li1080\sa120\widctlpar\jclisttab\tx1080\ls7\adjustright {\hich\af1\dbch\af18\loch\f1 UMLDiagram (Superclass of all diagrams)
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 2.\tab}\hich\af1\dbch\af18\loch\f1 UMLClassDiagram
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 3.\tab}\hich\af1\dbch\af18\loch\f1 UMLUseCaseDiagram
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 4.\tab}\hich\af1\dbch\af18\loch\f1 UMLStateDiagram
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 5.\tab}\hich\af1\dbch\af18\loch\f1 U\hich\af1\dbch\af18\loch\f1 MLActivityDiagram
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 6.\tab}\hich\af1\dbch\af18\loch\f1 UMLCollaborationDiagram
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 7.\tab}\hich\af1\dbch\af18\loch\f1 UMLSequenceDiagram
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 8.\tab}\hich\af1\dbch\af18\loch\f1 UMLComponentDiagram
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 9.\tab}\hich\af1\dbch\af18\loch\f1 UMLElement (Superclass of all elements)
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 10.\tab}\hich\af1\dbch\af18\loch\f1 UMLUseCase ( * composed by UMLUseCaseDiagram)
\par {\listtext\pard\plain\s16 \fs20\cf2\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 11.\tab}}{\cf2 \hich\af1\dbch\af18\loch\f1 UMLActor}{
\par {\listtext\pard\plain\s16 \fs20\cf2\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 12.\tab}}{\cf2 \hich\af1\dbch\af18\loch\f1 UMLState}{
\par {\listtext\pard\plain\s16 \fs20\cf2\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 13.\tab}}{\cf2 \hich\af1\dbch\af18\loch\f1 UMLTransition}{
\par }\pard \s16\sa120\widctlpar\adjustright {\tab \tab 
\par }\pard \s16\li720\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 Each object contains attributes and operations specifi\hich\af1\dbch\af18\loch\f1 
c to that type of element. For e.g., UMLClass may contain a collection of its attributes, methods and accessors for these.
\par 
\par }{\b \hich\af1\dbch\af18\loch\f1 Exception Handling}{\hich\af1\dbch\af18\loch\f1 :
\par \hich\af1\dbch\af18\loch\f1 When a handler is declared in the configuration for a particular UML diagram/element node the handleNode is invo\hich\af1\dbch\af18\loch\f1 
ked which in turn tries to call the create<diagram/elementType> for e.g createUseCaseDiagram, createUseCase. If such a method is not defined or if there is any other problem as described in the java.lang, java.lang.reflect API, certain exceptions are thro
\hich\af1\dbch\af18\loch\f1 w\hich\af1\dbch\af18\loch\f1 
n (like NoSuchMethodException, IllegalArgumentException). The handleNode wraps such exceptions in XMIHandlerException and rethrows which is handled in XMIParser. The XMIParser in turn wraps it in the XMIParserException and rethrows it.
\par \hich\af1\dbch\af18\loch\f1 Thus the component r\hich\af1\dbch\af18\loch\f1 ealizes chain-exception paradigm.
\par \tab 
\par }\pard \s16\sa120\widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 1.1\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 Design Patterns 

\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {\tab }{\ul \hich\af1\dbch\af18\loch\f1 Strategy Pattern}{\hich\af1\dbch\af18\loch\f1 : Separating the handling mechanism from the parser is important to \tab 
plugin new handlers. Each handler represents a new behavior encapsulated in its \tab handleNode() method separate from \hich\af1\dbch\af18\loch\f1 the parser. The DefaultXMIHandler is an example of \tab Strategy.
\par \tab 
\par \tab }{\ul \hich\af195\dbch\af18\loch\f195 \hich\f195 Fa\'e7\loch\f195 ade Pattern}{\hich\af1\dbch\af18\loch\f1 : The DefaultXMIHandler provides interface methods which makes it \tab 
easier for the client to obtain information like the concrete use cases in a given use case \tab diagram.
\par 
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 1.2\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 Industr
\hich\af1\dbch\af16\loch\f1 y Standards 
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {UML, XMI
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 1.3\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 
Required Algorithms
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s16\li720\sa120\widctlpar\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 The application flow with an example is given below. Referring to the class diagram, sequence diagrams will be helpful-
\par 
\par }{\i \hich\af1\dbch\af18\loch\f1 Example: The model has a Use Case Diagram. This diagram has an Actor, a Use Case and an asso\hich\af1\dbch\af18\loch\f1 ciation between them
\par }{
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 1.\tab}}\pard \s16\fi-360\li1080\sa120\widctlpar\jclisttab\tx1080\ls5\ilvl3\adjustright {\hich\af1\dbch\af18\loch\f1 \hich\f1 
Create configuration file handler.properties in the namespace   \'93\loch\f1 \hich\f1 com.topcoder.util.xmi.parser.default.handler\'94\loch\f1 . This contains the following properties \endash  Diagram=com.topcoder.util.xmi.parser.handler.DefaultXMIHandler

\par }\pard \s16\li1080\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 UseCase=com.topcod\hich\af1\dbch\af18\loch\f1 er.util.xmi.parser.handler.DefaultXMIHandler
\par \hich\af1\dbch\af18\loch\f1 We do not declare a handler for the Actor and Association
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 2.\tab}}\pard \s16\fi-360\li1080\sa120\widctlpar\jclisttab\tx1080\ls5\ilvl3\adjustright {\hich\af1\dbch\af18\loch\f1 Instantiate XMIParser with the namespace above.
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 3.\tab}\hich\af1\dbch\af18\loch\f1 In the constructor, first load the configuration using the configuration manager and fill the handlerRegi\hich\af1\dbch\af18\loch\f1 
ster map. Now it has the following key-value pairs.                 Diagram: com.topcoder.util.xmi.parser.handler.DefaultXMIHandler,                UseCase: com.topcoder.util.xmi.parser.handler.DefaultXMIHandler
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 4.\tab}\hich\af1\dbch\af18\loch\f1 Call parser.parse(<file to be parsed>)
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 5.\tab}\hich\af1\dbch\af18\loch\f1 Creat\hich\af1\dbch\af18\loch\f1 e a XML DOM out of the xmi input file using the parser API provided with SUN JDK
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 6.\tab}\hich\af1\dbch\af18\loch\f1 Get the <UML:Diagram> nodes using Element.getElementsByTagName as list
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 7.\tab}\hich\af1\dbch\af18\loch\f1 Get the next <UML:Diagram> node.
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 8.\tab}\hich\af1\dbch\af18\loch\f1 Get the <UML:GraphElement.semanticModel> node that is the direct child \hich\af1\dbch\af18\loch\f1 \hich\f1 
of this node. Get the <UML:SimpleSemanticModelElement> under this and get the value of \'93\loch\f1 \hich\f1 typeInfo\'94\loch\f1  attribute. This value tells what the diagram type is. It also matches the string constant in UMLDiagramTypes class.
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 9.\tab}\hich\af1\dbch\af18\loch\f1 If this attribute value is present in the \hich\af1\dbch\af18\loch\f1 
handlerRegister as key, get the name of handler. Else ignore and go to (7). 
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 10.\tab}\hich\af1\dbch\af18\loch\f1 If typeInfo attribute value is \lquote UseCaseDiagram\rquote , you will get \lquote com.topcoder.util.xmi.parser.handler.DefaultXMIHandler
\rquote  
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 11.\tab}\hich\af1\dbch\af18\loch\f1 From handlerMap(notice that this is different from handlerR\hich\af1\dbch\af18\loch\f1 egister), get the value of \lquote 
com.topcoder.util.xmi.parser.handler.DefaultXMIHandler\rquote  which is the key obtained from handlerRegister. 
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 12.\tab}\hich\af1\dbch\af18\loch\f1 If the key is present, get the value which is the handler object. go to (15)
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 13.\tab}\hich\af1\dbch\af18\loch\f1 If not present, create an instance of \lquote Default\hich\af1\dbch\af18\loch\f1 XMIHandler\rquote  using newInstance().
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 14.\tab}\hich\af1\dbch\af18\loch\f1 In the map handlerMap create an entry with key - \lquote com.topcoder.util.xmi.parser.handler.DefaultXMIHandler\rquote  and value \endash 
 defHandler (which is instance of XMIHandler created)
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 15.\tab}\hich\af1\dbch\af18\loch\f1 Call the method handleNode() on handler interface wi\hich\af1\dbch\af18\loch\f1 \hich\f1 
th the current node and the diagram type as arguments(<UML:Diagram node>, \'93\loch\f1 \hich\f1 UseCaseDiagram\'94\loch\f1 ).
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 16.\tab}\hich\af1\dbch\af18\loch\f1 In handleNode of DefaultXMIHandler, based on the node type which is the argument, in this case, \lquote UseCaseDiagram\rquote 
, call the method (which is defined in the same cla\hich\af1\dbch\af18\loch\f1 ss) create<type> reflectively, here, createUseCaseDiagram with the node and type as arguments.
\par }\pard \s16\li1080\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 In createUseCaseDiagram method, create a UMLUseCaseDiagram data object and fills the information like diagram name, id, type and description. 
\par \hich\af1\dbch\af18\loch\f1 Set the attributes\hich\af1\dbch\af18\loch\f1  this way -
\par \hich\af1\dbch\af18\loch\f1 diagramName \endash  \lquote name\rquote  attribute of the node
\par \hich\af1\dbch\af18\loch\f1 diagramId \endash  \lquote xmi.id\rquote  attribute of the node
\par \hich\af1\dbch\af18\loch\f1 diagramType \endash  type passed as parameter. This also matches a constant in UMLDiagramTypes class
\par }{\cs19\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\cf13 \hich\af17\dbch\af18\loch\f17 UML:Diagram xmi.id}{\cs19\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b \hich\af17\dbch\af18\loch\f17 I15155e1m10206505306mm7e75}{\cs19\cf2 \hich\af17\dbch\af18\loch\f17 "}{
\cs20\cf13 \hich\af17\dbch\af18\loch\f17  isVisible}{\cs19\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b \hich\af17\dbch\af18\loch\f17 true}{\cs19\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\cf13 \hich\af17\dbch\af18\loch\f17  name}{\cs19\cf2 
\hich\af17\dbch\af18\loch\f17 ="}{\b \hich\af17\dbch\af18\loch\f17 UseCase diagram_1}{\cs19\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\cf13 \hich\af17\dbch\af18\loch\f17  zoom}{\cs19\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b \hich\af17\dbch\af18\loch\f17 
1.0}{\cs19\cf2 \hich\af17\dbch\af18\loch\f17 ">
\par }{
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 17.\tab}}\pard \s16\fi-360\li1080\sa120\widctlpar\jclisttab\tx1080\ls5\ilvl3\adjustright {\hich\af1\dbch\af18\loch\f1 Then get all the <UML:UseCase>\~
 child nodes. For each, UseCase node, add an entry in the elementsMap of UMLUseCaseDiagram, where the key is the id\~in UseCase node. Add the diagram object to the diagrams list.Go to (7\hich\af1\dbch\af18\loch\f1 )
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 18.\tab}\hich\af1\dbch\af18\loch\f1 
Now in the parser get the <UML:Namespace> node in the <UML:Model> node. This contains all the elements in all diagrams. In this case, the node names reflect the element names like <UML:UseCase> represent a use case element. We will refer to this list of 
\hich\af1\dbch\af18\loch\f1 nodes as element nodes.
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 19.\tab}\hich\af1\dbch\af18\loch\f1 
Get the next node from the element node list. Get the node name. Find if this name is a key in handlerRegister. Get the handler name. If this handler name is present as key in handlerMap, get the value which is the handler. Else cre
\hich\af1\dbch\af18\loch\f1 ate the handler object and add the key-value to the handlerMap. In this case, the only nodes processed will will be <UML:UseCase> nodes and the DefaultXMIHandler is already present in the map. So, we simply get the object.

\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 20.\tab}\hich\af1\dbch\af18\loch\f1 Invoke the handleNode() method on\hich\af1\dbch\af18\loch\f1  handler with the element node and the node type as parameters.
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 21.\tab}\hich\af1\dbch\af18\loch\f1 
In the handleNode functions as described in (16). In this case, it invokes createUseCase passing the node and type to it. Get the id of the node passed( which the node corresponding to the Use\hich\af1\dbch\af18\loch\f1 
Case). Build the UMLUseCase object and fill the details. Get the diagrams from 'diagrams' list which are of type UMLUseCaseDiagram. From the elementsMap of this diagram object, match the key to the id of the element node. Add this UMLUseCase object to the
\hich\af1\dbch\af18\loch\f1  \hich\af1\dbch\af18\loch\f1 
elementsMap with that key. This way by end of processing the elementsMap will contain all UseCase elements. Because the XMIParser first processes all diagrams before the elements, there should be no scope of elements not finding a suitable diagram.
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 22.\tab}\hich\af1\dbch\af18\loch\f1 Go to (\hich\af1\dbch\af18\loch\f1 19)
\par }\pard \s16\sa120\widctlpar\adjustright {
\par }\pard \s16\li1065\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 // End of process description
\par \hich\af1\dbch\af18\loch\f1 For the other Diagram/element types, follow the same procedure for enhancing the handler. The parser need not be changed anymore. Only the configuration and the handler(s). Use the other sub-classes of UMLDiagram/UMLEleme
\hich\af1\dbch\af18\loch\f1 nt as shown in the class diagram. For this requirement, we do not need to build element maps for other type of diagrams.    
\par }\pard \s16\sa120\widctlpar\adjustright {
\par \tab \tab 
\par \tab }{\hich\af1\dbch\af18\loch\f1 Methods:
\par }\pard \s16\li720\sa120\widctlpar\adjustright {\tab }{\hich\af1\dbch\af18\loch\f1 For the method to get diagrams of a given type, get the handler from XMIParser. Get the diagrams list. Return the in\hich\af1\dbch\af18\loch\f1 
stances of type UML<diagram type>. The parameter must be one of the constants defined by UMLDiagramTypes class. If no diagrams are found, or an invalid type is supplied, null is returned.
\par 
\par \tab \hich\af1\dbch\af18\loch\f1 For the method to get abstract use cases from a given use case dia\hich\af1\dbch\af18\loch\f1 
gram name, get the diagram from the diagrams list whose name matches the parameter. Check if the type is UMLUseCaseDiagram. Call getUseCases(). This method returns the elements from the elementsMap which are instances of UMLUseCase. Return list of the sub
\hich\af1\dbch\af18\loch\f1 s\hich\af1\dbch\af18\loch\f1 et of the elements, whose isAbstract attribute is true.
\par }\pard \s16\sa120\widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 1.4\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 
Component Class Overview
\par }\pard\plain \widctlpar\adjustright \cgrid {\fs20 
\par \tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 IXMIParser}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par }\pard \li720\widctlpar\adjustright {\fs20 \hich\af1\dbch\af18\loch\f1 The interface implemented by the component\rquote s XMI Parser.
\par }\pard \widctlpar\adjustright {\fs20 
\par \tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 XMIParser}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par }\pard \li720\widctlpar\adjustright {\fs20 \\\hich\af1\dbch\af18\loch\f1 This is the main parser in the component. It uses DOM parsing and can be configured with t\hich\af1\dbch\af18\loch\f1 he following-
\par {\listtext\pard\plain\fs20\lang1033\cgrid \hich\af1\dbch\af18\loch\f1 1.\tab}}\pard \fi-360\li1080\widctlpar\jclisttab\tx1080\ls4\adjustright {\fs20 \hich\af1\dbch\af18\loch\f1 
namespace - Namespace in the Configuration Manager which allows the parser to retrieve the class names of the handlers for node encountered
\par }\pard \widctlpar\adjustright {\fs20 
\par 
\par }\pard \li720\widctlpar\adjustright {\b\fs20 \hich\af1\dbch\af18\loch\f1 XMIHandler}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par \hich\af1\dbch\af18\loch\f1 All handlers must implement this interface which defines the handleNode () method. The \hich\af1\dbch\af18\loch\f1 XMIParser uses this interface to call this method on the handlers
\par }\pard \widctlpar\adjustright {\fs20 
\par }\pard \fi720\li720\widctlpar\adjustright {\fs20 \tab 
\par }\pard \widctlpar\adjustright {\fs20 
\par \tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 DefaultXMIHandler:
\par }\pard \li720\widctlpar\adjustright {\fs20 \hich\af1\dbch\af18\loch\f1 Provides default implementation of the handler. Also contains several API methods to access the diagram information. Implements the handleNode () which, based on the 
\hich\af1\dbch\af18\loch\f1 type calls create<type> methods defined in itself reflectively.
\par \hich\af1\dbch\af18\loch\f1 The handler builds a data structure to store information regarding the diagrams/elements in the model. The API uses this data structure to return information regarding the diagrams/elements.
\par 
\par }{\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLDiagram}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par \hich\af1\dbch\af18\loch\f1 Data object representing the superclass of all diagrams.
\par }\pard \widctlpar\adjustright {\fs20 \tab 
\par 
\par \tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLClassDiagram}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par \tab \hich\af1\dbch\af18\loch\f1 Data object to hold information about UML Class diagram. Inherits UMLDiagram
\par 
\par \tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLUseCaseDiagram}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par }\pard \li720\widctlpar\adjustright {\fs20 \hich\af1\dbch\af18\loch\f1 Data object to hold information about UML Use Case diagram. Inher\hich\af1\dbch\af18\loch\f1 its UMLDiagram
\par }\pard \widctlpar\adjustright {\fs20 
\par }\pard \fi720\widctlpar\adjustright {\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLStateDiagram}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par }\pard \widctlpar\adjustright {\fs20 \tab \tab }{\fs20 \hich\af1\dbch\af18\loch\f1 Data object to hold information about UML State diagram. Inherits UMLDiagram
\par \tab 
\par }\pard \fi720\widctlpar\adjustright {\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLActivityDiagram}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par }\pard \li720\widctlpar\adjustright {\fs20 \hich\af1\dbch\af18\loch\f1 Data object to hold information about UML Activity diagram. Inherits UMLDiagram
\par }\pard \widctlpar\adjustright {\fs20 
\par }\pard \fi720\widctlpar\adjustright {\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLCollaborationDiagram}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par }\pard \li720\widctlpar\adjustright {\fs20 \hich\af1\dbch\af18\loch\f1 Data object to h\hich\af1\dbch\af18\loch\f1 old information about UML Collaboration diagram. Inherits UMLDiagram
\par }\pard \widctlpar\adjustright {\fs20 
\par }\pard \fi720\widctlpar\adjustright {\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLSequenceDiagram}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par }\pard \li720\widctlpar\adjustright {\fs20 \hich\af1\dbch\af18\loch\f1 Data object to hold information about UML Sequence diagram. Inherits UMLDiagram
\par }\pard \widctlpar\adjustright {\fs20 
\par }\pard \fi720\widctlpar\adjustright {\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLDeploymentDiagramt}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par }\pard \li720\widctlpar\adjustright {\fs20 \hich\af1\dbch\af18\loch\f1 Data object to hold information about UML Deployment diagram. \hich\af1\dbch\af18\loch\f1 Inherits UMLDiagram
\par }\pard \widctlpar\adjustright {\fs20 
\par \tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLElement}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par \tab \hich\af1\dbch\af18\loch\f1 Data object superclass for UML elements
\par 
\par \tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLUseCase}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par \tab \hich\af1\dbch\af18\loch\f1 Data object for a use case. Inherits UMLElement
\par 
\par }\pard \li720\widctlpar\adjustright {\fs20 \hich\af1\dbch\af18\loch\f1 The UML<type> classes are used by the DefaultHandler to hold information regarding the elements/diagrams in the mod\hich\af1\dbch\af18\loch\f1 el.
\par }\pard \widctlpar\adjustright {\fs20 
\par \tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLDiagramTypes}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par \tab \hich\af1\dbch\af18\loch\f1 Contains the constants representing diagram types.
\par 
\par \tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 UMLElementTypes}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par \tab \hich\af1\dbch\af18\loch\f1 Contains the constants representing element types.
\par 
\par }\pard \li720\widctlpar\adjustright {\b\fs20\cf2 \hich\af1\dbch\af18\loch\f1 UMLState:
\par }\pard\plain \s23\li720\widctlpar\adjustright \fs20\cgrid {\cf2 \hich\af1\dbch\af18\loch\f1 This class represents a single UML activity graph state. Each state is described by the following}{\cf2 \hich\af1\dbch\af18\loch\f1  }{\cf2 
\hich\af1\dbch\af18\loch\f1 information:}{\cf2 \hich\af1\dbch\af18\loch\f1  }{\cf2 \hich\af1\dbch\af18\loch\f1 an XMI id}{\cf2 \hich\af1\dbch\af18\loch\f1 , }{\cf2 \hich\af1\dbch\af18\loch\f1 a state type}{\cf2 \hich\af1\dbch\af18\loch\f1 , }{\cf2 
\hich\af1\dbch\af18\loch\f1 a state name}{\cf2 \hich\af1\dbch\af18\loch\f1 .
\par 
\par }{\b\cf2 \hich\af1\dbch\af18\loch\f1 UMLTransition:
\par }{\cf2 \hich\af1\dbch\af18\loch\f1 This class represents a single UML activity graph transition. The transition is described by the following}{\cf2 \hich\af1\dbch\af18\loch\f1  }{\cf2 \hich\af1\dbch\af18\loch\f1 data:}{\cf2 \hich\af1\dbch\af18\loch\f1  }{
\cf2 \hich\af1\dbch\af18\loch\f1 XMI id of the transition}{\cf2 \hich\af1\dbch\af18\loch\f1 , }{\cf2 \hich\af1\dbch\af18\loch\f1 XMI id of the from node}{\cf2 \hich\af1\dbch\af18\loch\f1 , }{\cf2 \hich\af1\dbch\af18\loch\f1 XMI id of the to node}{\cf2 
\hich\af1\dbch\af18\loch\f1 , \hich\af1\dbch\af18\loch\f1 transition name, \hich\af1\dbch\af18\loch\f1 guard condit}{\cf2 \hich\af1\dbch\af18\loch\f1 ion for transitio\hich\af1\dbch\af18\loch\f1 n to be executed}{\cf2 \hich\af1\dbch\af18\loch\f1 , }{\cf2 
\hich\af1\dbch\af18\loch\f1 guard effect for the executed transition}{\cf2 \hich\af1\dbch\af18\loch\f1 .
\par 
\par }{\b\cf2 \hich\af1\dbch\af18\loch\f1 UMLActivityDiagram:}{\cf2 
\par }{\cf2 \hich\af1\dbch\af18\loch\f1 This class represents\hich\af1\dbch\af18\loch\f1  a UML activity diagram. Note that this class keeps no additional information.}{\cf2 \hich\af1\dbch\af18\loch\f1  }{\cf2 \hich\af1\dbch\af18\loch\f1 
All necessary information is extracted from the map of UMLElements maintained by the base class.}{\cf2 
\par 
\par }{\b\cf2 \hich\af1\dbch\af18\loch\f1 UMLStateType:
\par }\pard \s23\li720\widctlpar\adjustright {\cf2 \hich\af1\dbch\af18\loch\f1 Represents a string description of the UML state type. It is assigned in the constructor and not changed}{\cf2 \hich\af1\dbch\af18\loch\f1  }{\cf2 \hich\af1\dbch\af18\loch\f1 
afterwards. The value can be retrieved using public getType() method. It can never be null or}{\cf2 \hich\af1\dbch\af18\loch\f1  }{\cf2 \hich\af1\dbch\af18\loch\f1 an empty string.}{\b 
\par }\pard\plain \widctlpar\adjustright \cgrid {\fs20 
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 1.5\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 
Component Exception Definitions
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {[List the custom Exceptions in the component design and explain the usage of each and scenarios when they are thrown.  Use the format below.]
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {\tab }{\b\fs24 ParserException
\par }\pard \s16\fi720\li720\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 Exception thrown by <code>Parser</code> interface, it wraps any Exception caught by the parser when parsing a given input.
\par }\pard \s16\sa120\widctlpar\adjustright {
\par }\pard\plain \widctlpar\adjustright \cgrid {\tab }{\b\fs20 \hich\af1\dbch\af18\loch\f1 XMIHandlerException}{\fs20 \hich\af1\dbch\af18\loch\f1 :
\par }\pard\plain \s16\fi720\sa120\widctlpar\adjustright \fs20\cgrid {\tab }{\hich\af1\dbch\af18\loch\f1 Exception thrown in handl\hich\af1\dbch\af18\loch\f1 ers during any parsing exception.
\par }\pard \s16\fi720\li720\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 
The handleNode () method in XMIHandler throws this exception. While finding the method create<nodeType>, if Class throws a NoSuchMethodException, it is wrapped in XMIHandlerException and re-thrown.
\par \hich\af1\dbch\af18\loch\f1 The reflection exception\hich\af1\dbch\af18\loch\f1 \hich\f1 s that might occur in this method are also wrapped in this exception and rethrown with the message containing \'93\loch\f1 \hich\f1 
Could not invoke method create<nodeType>\'94
\par }\pard \s16\sa120\widctlpar\adjustright {\tab 
\par \tab }{\b \hich\af1\dbch\af18\loch\f1 XMIParserException}{\hich\af1\dbch\af18\loch\f1 :
\par \tab \tab \hich\af1\dbch\af18\loch\f1 Exception thrown in parser.
\par }\pard \s16\li1440\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 The parser wraps any exception(including the XMIHa\hich\af1\dbch\af18\loch\f1 
ndlerException) that happens during processing and rethrows as this exception. The original exception is preserved as the cause.
\par }\pard \s16\fi720\li720\sa120\widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 1.6\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 Thread Safety

\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {The parser acts on one given file at a time and holds cache of the single instances of handler. The handlers the
mselves may need to maintain state. As a result, it is not safe for multiple threads to operate on the parser. The client application using the parser should consider the necessary means of sequential parsing.
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {
\par {\listtext\pard\plain\s1 \b\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 2.\tab}}\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\cgrid {\hich\af1\dbch\af16\loch\f1 Environment Requirements\tab 
\tab 
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 2.1\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 Environment
\par {\listtext\pard\plain\lang1033\cgrid \loch\af3\dbch\af18\hich\f3 \'b7\tab}}\pard\plain \fi-360\li1080\widctlpar\jclisttab\tx1080\ls2\adjustright \cgrid {\hich\af0\dbch\af18\loch\f0 Java1.\hich\af0\dbch\af18\loch\f0 
4 is required for compilation and executing test cases.}{\fs20 
\par }\pard \li720\widctlpar\adjustright {\fs20 
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 2.2\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 
TopCoder Software Components
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {ConfigurationManager
\par }\pard\plain \s16\li720\sa120\widctlpar\adjustright \fs20\cgrid {
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 2.3\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 
Third Party Components
\par }\pard\plain \qj\li720\widctlpar\adjustright \cgrid {
\par {\listtext\pard\plain\s1 \b\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 3.\tab}}\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\cgrid {\hich\af1\dbch\af16\loch\f1 Installation and Configuration

\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 3.1\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 Package Name

\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {com.topcoder.util.xmi.parser
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 3.2\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 
Configuration Parameters
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {The configuration manager is used by the parser to retrieve properties from \lquote handler.properties\rquote  in a given namespace. The namespace defaults to \lquote 
com.topcoder.util.xmi.parser.default.handler\rquote . The config file format will be }{\field\fldedit{\*\fldinst {\cs18 \hich\af1\dbch\af18\loch\f1  \hich\af1\dbch\af18\loch\f1 HYPERLINK\hich\af1\dbch\af18\loch\f1  "file:///C:\\\\vinay\\\\tcs\\\\
configuration_manager\hich\af1\dbch\af18\loch\f1 -2.1.3\\\\docs\\\\javadocs\\\\com\\\\topcoder\\\\util\\\\config\\\\ConfigManager.html" \\l "CONFIG_PROPERTIES_FORMAT" }{{\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b0200000009000000e0c9ea79f9bace118c8200aa004ba90bd80000002e002e002f002e002e002f002e002e002f002e002e002f00760069006e00610079002f007400630073002f0063006f006e00660069006700750072006100740069006f006e005f006d0061006e0061006700
650072002d0032002e0031002e0033002f0064006f00630073002f006a0061007600610064006f00630073002f0063006f006d002f0074006f00700063006f006400650072002f007500740069006c002f0063006f006e006600690067002f0043006f006e006600690067004d0061006e0061006700650072002e00680074
006d006c0000001900000043004f004e004600490047005f00500052004f0050004500520054004900450053005f0046004f0052004d0041005400000000000000000000}}}{\fldrslt {\cs15 \hich\af1\dbch\af18\loch\f1 CONFIG_PROPERTIES_FORMAT}}}{
\par The value is a fully qualified class name of handler
\par For the requirements of the default handler, the following configuration suffices
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \cltxlrtb \cellx1777\clvertalt\clbrdrt\brdrs\brdrw10 \cltxlrtb \cellx3907
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx8748\pard\plain \widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \cgrid {\b \hich\af0\dbch\af18\loch\f0 Parameter}{\b\fs20 \cell }{\b 
\hich\af0\dbch\af18\loch\f0 Description}{\b\fs20 \cell }{\b \hich\af0\dbch\af18\loch\f0 Values}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph108\trrh270\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb
\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clvertalt\clbrdrl\brdrs\brdrw10 \cltxlrtb \cellx1777\clvertalt\cltxlrtb \cellx3907\clvertalt\clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx8748\pard\plain 
\s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 UseCaseDiagram\cell \hich\af1\dbch\af18\loch\f1 Handler for UseCaseDiagram type\cell \hich\af1\dbch\af18\loch\f1 
com.topcoder.util.xmi.parser.handler.DefaultHandler\cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\pard\plain \s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {
\hich\af1\dbch\af18\loch\f1 UseCase\cell \hich\af1\dbch\af18\loch\f1 Handler for UseCase type\cell \hich\af1\dbch\af18\loch\f1 com.topcoder.util.xmi.parser.handler.DefaultHandler\cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\trowd 
\trgaph108\trrh270\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clvertalt\clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \cltxlrtb \cellx1777\clvertalt\clbrdrb\brdrs\brdrw10 \cltxlrtb \cellx3907
\clvertalt\clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx8748\pard\plain \s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\cell \cell \cell }\pard\plain \widctlpar\intbl\adjustright 
\cgrid {\row }\pard \widctlpar\adjustright {\fs20 
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {\line 
\par \tab }{\hich\af1\dbch\af18\loch\f1 For different handlers\hich\af1\dbch\af18\loch\f1  \endash 
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \cltxlrtb \cellx2172\clvertalt\clbrdrt\brdrs\brdrw10 \cltxlrtb \cellx5772
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx7920\pard\plain \widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \cgrid {\b \hich\af0\dbch\af18\loch\f0 Parameter}{\b\fs20 \cell }{\b 
\hich\af0\dbch\af18\loch\f0 Description}{\b\fs20 \cell }{\b \hich\af0\dbch\af18\loch\f0 Values}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\row }\trowd \trgaph108\trrh540\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb
\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clvertalt\clbrdrl\brdrs\brdrw10 \cltxlrtb \cellx2172\clvertalt\cltxlrtb \cellx5772\clvertalt\clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx7920\pard\plain 
\s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 UseCaseDiagram\cell \hich\af1\dbch\af18\loch\f1 Handler for UseCaseDiagram type\cell \hich\af1\dbch\af18\loch\f1 
<handler name>\cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\trowd \trgaph108\trrh600\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clvertalt\clbrdrl\brdrs\brdrw10 \cltxlrtb 
\cellx2172\clvertalt\cltxlrtb \cellx5772\clvertalt\clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx7920\pard\plain \s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 ClassDiagram
\cell \hich\af1\dbch\af18\loch\f1 Handler for Class Diagram type\cell \hich\af1\dbch\af18\loch\f1 <handler name>\cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\trowd \trgaph108\trrh270\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl
\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clvertalt\clbrdrl\brdrs\brdrw10 \cltxlrtb \cellx2172\clvertalt\cltxlrtb \cellx5772\clvertalt\clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx7920\pard\plain 
\s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 UseCase\cell \hich\af1\dbch\af18\loch\f1 Handler for UseCase type\cell \hich\af1\dbch\af18\loch\f1 <handler name>\cell 
}\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\trowd \trgaph108\trrh421\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \clvertalt\clbrdrl\brdrs\brdrw10 \cltxlrtb \cellx2172
\clvertalt\cltxlrtb \cellx5772\clvertalt\clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx7920\pard\plain \s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 Class\cell 
\hich\af1\dbch\af18\loch\f1 Handler for Class type\cell \hich\af1\dbch\af18\loch\f1 <handler name>\cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\pard\plain 
\s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 Activi\hich\af1\dbch\af18\loch\f1 ty\cell \hich\af1\dbch\af18\loch\f1 Handler for  Activity type\cell 
\hich\af1\dbch\af18\loch\f1 <handler name>\cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\pard\plain \s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 
Collaboration\cell \hich\af1\dbch\af18\loch\f1 Handler for Collaboration type\cell \hich\af1\dbch\af18\loch\f1 <handler name>\cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\pard\plain 
\s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 Sequence\cell \hich\af1\dbch\af18\loch\f1 Handler for Collaboration type\cell \hich\af1\dbch\af18\loch\f1 <handler name>
\cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\pard\plain \s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 State\cell \hich\af1\dbch\af18\loch\f1 
Handler for State type\cell \hich\af1\dbch\af18\loch\f1 <handler name>\cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\trowd \trgaph108\trrh421\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr
\brdrs\brdrw10 \clvertalt\clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \cltxlrtb \cellx2172\clvertalt\clbrdrb\brdrs\brdrw10 \cltxlrtb \cellx5772\clvertalt\clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx7920\pard\plain 
\s16\sa120\widctlpar\intbl\pvpara\posx827\posy0\dxfrtext180\dfrmtxtx180\dfrmtxty0\adjustright \fs20\cgrid {\loch\af1\dbch\af18\hich\f1 \'85\cell \cell \cell }\pard\plain \widctlpar\intbl\adjustright \cgrid {\row }\pard\plain 
\s16\sa120\widctlpar\adjustright \fs20\cgrid {\tab 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par }\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\outlinelevel1\adjustright \b\fs20\cgrid {
\par }\pard\plain \widctlpar\adjustright \cgrid {
\par 
\par }\pard \li720\widctlpar\adjustright {\hich\af0\dbch\af18\loch\f0 AddAdditional parameters may be\hich\af0\dbch\af18\loch\f0  defined based on requirements. 
\par }\pard \widctlpar\adjustright {
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 3.3\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 
Dependencies Configuration
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {The XMI Parser has a dependency on Configuration Manager Component
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {
\par {\listtext\pard\plain\s1 \b\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 4.\tab}}\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\cgrid {\hich\af1\dbch\af16\loch\f1 Usage Notes
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {
\par 
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 4.1\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 
Required steps to test the component
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \loch\af3\dbch\af18\hich\f3 \'b7\tab}}\pard\plain \s16\fi-360\li1080\sa120\widctlpar\jclisttab\tx1080\ls3\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 Extract the component distribution.
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \loch\af3\dbch\af18\hich\f3 \'b7\tab}\hich\af1\dbch\af18\loch\f1 Follow }{\field\fldedit{\*\fldinst {\hich\af1\dbch\af18\loch\f1  \hich\af1\dbch\af18\loch\f1 HYPERLINK\hich\af1\dbch\af18\loch\f1  "C:\\filez\\
work\\tc\\tcs\hich\af1\dbch\af18\loch\f1 _corp\\templates\\component\\" \\l "_Dependencies_Configuration" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000001000000e0c9ea79f9bace118c8200aa004ba90b8c0000002e002e002f002e002e002f002e002e002f002e002e002f00760069006e00610079002f0074006f00700063006f006400650072002f00660069006c0065007a0077006f0072006b0074006300740063007300
5f0063006f0072007000740065006d0070006c00610074006500730063006f006d0070006f006e0065006e00740025003200320020006c00000000000000000000}}}{\fldrslt {\cs15\ul\cf2 \hich\af1\dbch\af18\loch\f1 Dependencies Configuration}}}{\hich\af1\dbch\af18\loch\f1 .
\par {\listtext\pard\plain\s16 \fs20\lang1033\cgrid \loch\af3\dbch\af18\hich\f3 \'b7\tab}\hich\af1\dbch\af18\loch\f1 Execute \lquote ant test\rquote  within the directory that the distribution was extracted to.
\par }\pard \s16\sa120\widctlpar\adjustright {
\par 
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 4.2\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 
Required steps to use the component
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {The Configuration Manager component must be configured and accessible to this component.
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {
\par {\listtext\pard\plain\s2 \b\fs20\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 4.3\tab}}\pard\plain \s2\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx0\ls1\ilvl1\outlinelevel1\adjustright \b\fs20\cgrid {\hich\af1\dbch\af16\loch\f1 Demo
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s16\li720\sa120\widctlpar\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 \hich\f1 Parts of \'93\loch\f1 \hich\f1 test.xmi\'94\loch\f1  are included \endash 
\par }\pard\plain \fi-480\widctlpar\adjustright \cgrid {\cs19\fs16\cf2 
\par }{\cs19\fs16\cf2 \loch\af17\dbch\af18\hich\f17 \'85
\par \loch\af17\dbch\af18\hich\f17 \'85
\par \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Model xmi.id}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 sm$663731:10213f2b750:-7ffe}{\cs19\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  name}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 model 1}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 
\hich\af17\dbch\af18\loch\f17  isSpecification}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17   isRoot}{
\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isLeaf}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 
\hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isAbstract}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 ">}{\fs16 
\par }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Namespace.ownedElement}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >}{\fs16 
\par }{\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:UseCase}{\fs16 \hich\af17\dbch\af18\loch\f17  }{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 
xmi.id}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 sm$663731:10213f2b750:-7ffc}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  name}{\cs19\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 Register handlers from configuration}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  visibility}{\cs19\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 public}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isSpecification}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 
\hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isRoot}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isLeaf}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 
\hich\af17\dbch\af18\loch\f17  isAbstract}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 " />}{\fs16 \hich\af17\dbch\af18\loch\f17  
\par }{\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:UseCase}{\fs16 \hich\af17\dbch\af18\loch\f17  }{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 
xmi.id}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 sm$663731:10213f2b750:-7ff4}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  name}{\cs19\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 Pars\hich\af17\dbch\af18\loch\f17 e for UML diagrams and delegate to handlers}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 
 visibility}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 public}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isSpecification}{\cs19\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isRoot}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 
\hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isLeaf}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isAbstract}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 false}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 " />}{\fs16 
\par }{\fs16 \loch\af17\dbch\af18\hich\f17 \'85
\par \hich\af17\dbch\af18\loch\f17 <}{\fs16\cf12 \hich\af17\dbch\af18\loch\f17 UML:Namespace.ownedElement}{\fs16 \hich\af17\dbch\af18\loch\f17 >
\par \loch\af17\dbch\af18\hich\f17 \'85
\par \loch\af17\dbch\af18\hich\f17 \'85
\par }{\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Diagram xmi.id}{\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 di$663731:10213f2b750:-7fe0}{\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 "}{\fs16\cf13 \hich\af17\dbch\af18\loch\f17  isVisible}{\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 true}{\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\fs16\cf13 
\hich\af17\dbch\af18\loch\f17  name}{\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 XMI_Par\hich\af17\dbch\af18\loch\f17 ser_Use_Case_Diagram}{\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\fs16\cf13 
\hich\af17\dbch\af18\loch\f17  zoom}{\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 1.0}{\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ">}{\fs16 
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {\loch\af1\dbch\af18\hich\f1 \'85
\par }\pard\plain \fi-480\widctlpar\adjustright \cgrid {\fs20 \hich\af17\dbch\af18\loch\f17  \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:GraphElement.semanticModel}{\cs19\fs16\cf2 
\hich\af17\dbch\af18\loch\f17 >}{\fs16 
\par }{\cs19\fs16\cf2 \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Uml1SemanticModelBridge xmi.id}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 
di$663731:10213f2b750:-7fd5}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  presentation}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="">}{\fs16 
\par }{\cs19\fs16\cf2 \tab \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Uml1SemanticModelBridge.element}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >}{\fs16 
\par }{\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  \tab \tab \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:UseCase}{\fs16 \hich\af17\dbch\af18\loch\f17  }{\cs20\fs16\cf13 
\hich\af17\dbch\af18\loch\f17 xmi.idref}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 sm$663731:10213f2b750:-7ffc}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 " \hich\af17\dbch\af18\loch\f17 />}{\fs16 
\hich\af17\dbch\af18\loch\f17  
\par }\pard \fi-240\widctlpar\adjustright {\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  \tab \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 </}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Uml1SemanticModelBridge.element}{
\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >}{\fs16 
\par }{\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 </}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Uml1SemanticModelBridge}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >}{\fs16 

\par }{\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 </}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:GraphElement.semanticModel}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >
\par \hich\af17\dbch\af18\loch\f17 \hich\f17    \'85
\par }\pard \fi-480\widctlpar\adjustright {\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17        <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:GraphElement.semanticModel}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >}{\fs16 
\par }{\cs19\fs16\cf2 \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Uml1SemanticModelBridge xmi.id}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 
di$663731:10213f2b750:-7fd5}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 "}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17  presentation}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="">}{\fs16 
\par }{\cs19\fs16\cf2 \tab \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML\hich\af17\dbch\af18\loch\f17 :Uml1SemanticModelBridge.element}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >}{\fs16 

\par }{\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  \tab \tab \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 <}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:UseCase}{\fs16 \hich\af17\dbch\af18\loch\f17  }{\cs20\fs16\cf13 
\hich\af17\dbch\af18\loch\f17 xmi.idref}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 ="}{\b\fs16 \hich\af17\dbch\af18\loch\f17 sm$663731:10213f2b750:-7ffc}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 " />}{\fs16 \hich\af17\dbch\af18\loch\f17  
\par }\pard \fi-240\widctlpar\adjustright {\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  \tab \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 </}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Uml1SemanticModelBridge.element}{
\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >}{\fs16 
\par }{\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  \tab \tab }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 </}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:Uml1SemanticModelBridge}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >}{\fs16 

\par }{\cs21\b\fs16\cf6 \~}{\fs16 \hich\af17\dbch\af18\loch\f17  }{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 </}{\cs20\fs16\cf13 \hich\af17\dbch\af18\loch\f17 UML:GraphElement.semanticModel}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >
\par \hich\af17\dbch\af18\loch\f17 \hich\f17    \'85
\par }\pard \fi-180\li-360\widctlpar\adjustright {\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 </}{\cs19\fs16\cf12 \hich\af17\dbch\af18\loch\f17 UML:Diagram}{\cs19\fs16\cf2 \hich\af17\dbch\af18\loch\f17 >
\par \loch\af17\dbch\af18\hich\f17 \'85
\par \loch\af17\dbch\af18\hich\f17 \'85}{\fs16\cf2 
\par }\pard\plain \s16\sa120\widctlpar\adjustright \fs20\cgrid {
\par }\pard \s16\li720\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 Class ParserTest \{
\par \tab \hich\af1\dbch\af18\loch\f1 \hich\f1 File xmiFile = new File(\'93\loch\f1 \hich\f1 test.xmi\'94\loch\f1 );
\par \tab \hich\af1\dbch\af18\loch\f1 \hich\f1 String ns = \'93\loch\f1 \hich\f1 com.topcoder.util.xmi.parser.test\'94\loch\f1 ;
\par \tab \hich\af1\dbch\af18\loch\f1 XMIParser parser = new XMIParser(ns);
\par \tab \hich\af1\dbch\af18\loch\f1 parser.parse(xmiFile);
\par 
\par \tab \hich\af1\dbch\af18\loch\f1 MyHandler handler = (MyHandler)parser.getHandler();
\par 
\par \tab \hich\af1\dbch\af18\loch\f1 // Get diagram names
\par }\pard \s16\li1440\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 List diagramNames = handler.\hich\af1\dbch\af18\loch\f1 getDiagramNamesOfType(UMLDiagramTypes.UML_USE_CASE_DIAGRAM);
\par \hich\af1\dbch\af18\loch\f1 System.out.println(diagramNames.toArray());
\par 
\par 
\par \hich\af1\dbch\af18\loch\f1 /*
\par }\pard \s16\li1440\sa120\widctlpar\brdrt\brdrdb\brdrw15\brsp20 \brdrb\brdrdb\brdrw15\brsp20 \adjustright {\hich\af1\dbch\af18\loch\f1 Output:
\par }{\b\fs16 \hich\af17\dbch\af18\loch\f17 XMI_Parser_Use_Case_Diagram}{
\par }\pard \s16\li1440\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 */
\par \hich\af1\dbch\af18\loch\f1 // Get diagrams of a specific type
\par \hich\af1\dbch\af18\loch\f1 List diagrams = handler.getDiagramsOfType(UMLDiagramTypes.UML_USE_CASE_D\hich\af1\dbch\af18\loch\f1 IAGRAM);
\par 
\par \hich\af1\dbch\af18\loch\f1 for(int i=0;i<diagrams.size();i++) \{
\par \hich\af1\dbch\af18\loch\f1         UMLUseCaseDiagram ucDiag = (UMLUseCaseDiagram) diagrams.get(i);
\par \hich\af1\dbch\af18\loch\f1          System.out.println(ucDiag.getDiagramName());
\par \}
\par \hich\af1\dbch\af18\loch\f1 /*
\par }\pard \s16\li1440\sa120\widctlpar\brdrt\brdrdb\brdrw15\brsp20 \brdrb\brdrdb\brdrw15\brsp20 \adjustright {\hich\af1\dbch\af18\loch\f1 Output:
\par }{\b\fs16 \hich\af17\dbch\af18\loch\f17 XMI_Parser_Use_Case_Diagram}{
\par }\pard \s16\li1440\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 */
\par \hich\af1\dbch\af18\loch\f1 // Get concrete use cases
\par \hich\af1\dbch\af18\loch\f1 List concrete\hich\af1\dbch\af18\loch\f1 \hich\f1 UCs = handler.getConcreteUseCases(\'93\loch\f1 \hich\f1 MyUseCaseDiagram\'94\loch\f1 );
\par \hich\af1\dbch\af18\loch\f1 for(int i=0;i< concreteUCs.size();i++) \{
\par \hich\af1\dbch\af18\loch\f1         UMLUseCase uCase = (UMLUseCase) concreteUCs.get(i);
\par \hich\af1\dbch\af18\loch\f1          System.out.println(uCase.getElementName());
\par \}
\par \hich\af1\dbch\af18\loch\f1 /*
\par }\pard \s16\li1440\sa120\widctlpar\brdrt\brdrdb\brdrw15\brsp20 \brdrb\brdrdb\brdrw15\brsp20 \adjustright {\hich\af1\dbch\af18\loch\f1 Output:
\par }{\b\fs16 \hich\af17\dbch\af18\loch\f17 Register handlers from configurati\hich\af17\dbch\af18\loch\f17 on
\par \hich\af17\dbch\af18\loch\f17 Parse for UML diagrams and delegate to handlers}{
\par }\pard \s16\li1440\sa120\widctlpar\adjustright {\hich\af1\dbch\af18\loch\f1 */
\par }\pard \s16\li720\sa120\widctlpar\adjustright {\}
\par 
\par {\listtext\pard\plain\s1 \b\lang1033\cgrid \hich\af1\dbch\af16\loch\f1 5.\tab}}\pard\plain \s1\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\jclisttab\tx360\ls1\outlinelevel0\adjustright \b\cgrid {\hich\af1\dbch\af16\loch\f1 Future Enhancements
\par }\pard\plain \s17\qj\li720\sa120\sl240\slmult0\nowidctlpar\adjustright \fs20\cgrid {Provide more fine-grained details about the contents of XMI
\par }\pard\plain \s16\li360\sa120\widctlpar\adjustright \fs20\cgrid {\hich\af1\dbch\af18\loch\f1 2.   Provide more details about diagrams like associations, cardinality
\par }\pard \s16\sa120\widctlpar\adjustright {
\par 
\par 
\par 
\par }\pard\plain \widctlpar\adjustright \cgrid {
\par }}