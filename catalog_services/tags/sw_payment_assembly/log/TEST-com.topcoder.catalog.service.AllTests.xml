<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="0" hostname="tcs" name="com.topcoder.catalog.service.AllTests" tests="293" time="53.188" timestamp="2008-03-30T14:30:53">
  <properties>
    <property name="file.encoding.pkg" value="sun.io" />
    <property name="dist_testfiles" value="build/dist/catalog_services-1.1/test_files" />
    <property name="java.home" value="C:\Program Files\java\jdk1.5.0\jre" />
    <property name="dist_javadocs" value="build/dist/catalog_services-1.1/docs/javadocs" />
    <property name="debug" value="off" />
    <property name="build_distdir" value="build/dist" />
    <property name="distfilename" value="catalog_services" />
    <property name="component.dist.jar" value="build/dist/catalog_services-1.1.jar" />
    <property name="java.endorsed.dirs" value="C:\Program Files\java\jdk1.5.0\jre\lib\endorsed" />
    <property name="sun.os.patch.level" value="Service Pack 2" />
    <property name="design_dist.jar" value="Catalog_Services_1.1_design_dist.jar" />
    <property name="javadocsdir" value="docs/javadocs" />
    <property name="java.vendor.url" value="http://java.sun.com/" />
    <property name="id_generator.jar.name" value="id_generator.jar" />
    <property name="java.version" value="1.5.0" />
    <property name="mockejb.jar" value="../tcs/lib/third_party/mockejb/0.6/mockejb.jar" />
    <property name="java.vendor.url.bug" value="http://java.sun.com/cgi-bin/bugreport.cgi" />
    <property name="dist_src" value="build/dist/catalog_services-1.1/src" />
    <property name="ifxjdbc.jar" value="../tcs/lib/third_party/informix/3.0/ifxjdbc.jar" />
    <property name="cobertura.datafile" value="log/cobertura.ser" />
    <property name="user.name" value="ibm" />
    <property name="packagedir" value="com/topcoder/catalog/service" />
    <property name="sun.io.unicode.encoding" value="UnicodeLittle" />
    <property name="component_version" value="1.1" />
    <property name="sun.jnu.encoding" value="GB18030" />
    <property name="cronos_libdir" value="../tcs/lib/tcs" />
    <property name="java.runtime.name" value="Java(TM) 2 Runtime Environment, Standard Edition" />
    <property name="reports" value="reports" />
    <property name="build_webdir" value="build/web" />
    <property name="component.jar" value="build/dist/lib/tcs/catalog_services/1.1/catalog_services.jar" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="javamain" value="src/java/main" />
    <property name="build_lib" value="build/lib" />
    <property name="user.timezone" value="" />
    <property name="path.separator" value=";" />
    <property name="srcdir" value="src" />
    <property name="file.encoding" value="GB18030" />
    <property name="ant.file" value="D:\ks_workspace\Catalog_Services_1.1_dev_dist1\build.xml" />
    <property name="javasrc" value="src/java" />
    <property name="instrumented.dir" value="build/instrumented" />
    <property name="id_generator.version" value="3.0" />
    <property name="component.tests.jar" value="build/dist/lib/tcs/catalog_services_tests.jar" />
    <property name="java.io.tmpdir" value="C:\DOCUME~1\ibm\LOCALS~1\Temp\" />
    <property name="user.language" value="zh" />
    <property name="manifest_file_path" value="build/dist/catalog_services-1.1/META-INF/" />
    <property name="base_exception.path" value="base_exception/2.0" />
    <property name="line.separator" value="
" />
    <property name="verbose" value="no" />
    <property name="manifest_file" value="build/dist/catalog_services-1.1/META-INF//MANIFEST.MF" />
    <property name="jar_ext_libdir" value="../tcs/lib/third_party" />
    <property name="java.vm.info" value="mixed mode, sharing" />
    <property name="component_path" value="catalog_services/1.1" />
    <property name="sun.desktop" value="windows" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="dist_coverage" value="build/dist/catalog_services-1.1/docs/coverage" />
    <property name="builddir" value="build" />
    <property name="cobertura.dir" value="../tcs/lib/third_party/cobertura/1.8" />
    <property name="dist_conf" value="build/dist/catalog_services-1.1/conf" />
    <property name="id_generator.jar" value="../tcs/lib/tcs/id_generator/3.0/id_generator.jar" />
    <property name="docs_coverage" value="docs/coverage" />
    <property name="catalog_entities.jar" value="test_files/lib/catalog_entities.jar" />
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob" />
    <property name="configmanager.path" value="configuration_manager/2.1.5" />
    <property name="dist_lib" value="build/dist/lib/tcs" />
    <property name="base_exception.version" value="2.0" />
    <property name="junit.jar" value="../tcs/lib/third_party/junit/3.8.1/junit.jar" />
    <property name="configdir" value="conf" />
    <property name="build_tcsdistdir" value="build/dist/catalog_services-1.1" />
    <property name="ant.version" value="Apache Ant version 1.7.0 compiled on December 13 2006" />
    <property name="dist_docs" value="build/dist/catalog_services-1.1/docs" />
    <property name="testlogdir" value="log" />
    <property name="configuration_api.jar" value="../tcs/lib/tcs/configuration_api/1.0/configuration_api.jar" />
    <property name="os.name" value="Windows XP" />
    <property name="java.specification.vendor" value="Sun Microsystems Inc." />
    <property name="java.vm.name" value="Java HotSpot(TM) Client VM" />
    <property name="configmanager.jar" value="../tcs/lib/tcs/configuration_manager/2.1.5/configuration_manager.jar" />
    <property name="java.library.path" value="C:\Program Files\java\jdk1.5.0\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files\Intel\Wireless\Bin\;C:\Program Files\ThinkPad\ConnectUtilities;C:\Program Files\Common Files\Lenovo;C:\Program Files\Lenovo\Client Security Solution;C:\Program Files\Microsoft SQL Server\90\Tools\binn\;C:\Program Files\Intel\Wireless\Bin\;C:\Program Files\Intel\Wireless\Bin\;D:\tools\dev\apache-ant-1.7.0\bin;C:\Program Files\java\jdk1.5.0\bin" />
    <property name="docpackage.jar" value="catalog_services_docs.jar" />
    <property name="ant.java.version" value="1.5" />
    <property name="basedir" value="D:\ks_workspace\Catalog_Services_1.1_dev_dist1" />
    <property name="java.class.version" value="49.0" />
    <property name="configuration_api.path" value="configuration_api/1.0" />
    <property name="base_exception.jar.name" value="base_exception.jar" />
    <property name="ant.home" value="D:\tools\dev\apache-ant-1.7.0" />
    <property name="java_1_5_bootclasspath" value="c:\Program Files\Java\jre1.5.0_11\lib\rt.jar" />
    <property name="component.war" value="${dist_examples}/catalog_services.war" />
    <property name="configmanager.jar.name" value="configuration_manager.jar" />
    <property name="net.sourceforge.cobertura.datafile" value="D:\ks_workspace\Catalog_Services_1.1_dev_dist1\log\cobertura.ser" />
    <property name="sun.boot.library.path" value="C:\Program Files\java\jdk1.5.0\jre\bin" />
    <property name="ext_libdir" value="../tcs/lib/third_party" />
    <property name="sun.management.compiler" value="HotSpot Client Compiler" />
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment" />
    <property name="user.variant" value="" />
    <property name="ant.file.Catalog Services" value="D:\ks_workspace\Catalog_Services_1.1_dev_dist1\build.xml" />
    <property name="jar_tcs_libdir" value="../tcs/lib/tcs" />
    <property name="id_generator.path" value="id_generator/3.0" />
    <property name="build_targetclassdir" value="build/targetclasses" />
    <property name="docsdir" value="docs" />
    <property name="dev_dist.jar" value="Catalog_Services_1.1_dev_dist.jar" />
    <property name="configuration_api.jar.name" value="configuration_api.jar" />
    <property name="ant.project.name" value="Catalog Services" />
    <property name="java.vm.specification.version" value="1.0" />
    <property name="db_connection_factory.version" value="1.1" />
    <property name="db_connection_factory.jar.name" value="db_connection_factory.jar" />
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit" />
    <property name="webdir" value="web" />
    <property name="sun.cpu.isalist" value="pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86" />
    <property name="build_javadocsdir" value="build/docs/javadocs" />
    <property name="java.ext.dirs" value="C:\Program Files\java\jdk1.5.0\jre\lib\ext" />
    <property name="os.version" value="5.1" />
    <property name="user.home" value="C:\Documents and Settings\ibm" />
    <property name="javadoc.jar" value="javadocs.jar" />
    <property name="jboss.server.config" value="default" />
    <property name="build_classdir" value="build/classes" />
    <property name="java.vm.vendor" value="Sun Microsystems Inc." />
    <property name="build_testclassdir" value="build/testClasses" />
    <property name="package" value="com.topcoder.catalog.service" />
    <property name="base_exception.jar" value="../tcs/lib/tcs/base_exception/2.0/base_exception.jar" />
    <property name="user.dir" value="D:\ks_workspace\Catalog_Services_1.1_dev_dist1" />
    <property name="configmanager.version" value="2.1.5" />
    <property name="sun.cpu.endian" value="little" />
    <property name="dist_docpackage" value="build/doc_package" />
    <property name="java.vm.version" value="1.5.0-b64" />
    <property name="java.class.path" value="D:\ks_workspace\Catalog_Services_1.1_dev_dist1\build\instrumented;D:\ks_workspace\Catalog_Services_1.1_dev_dist1\build\testClasses;D:\ks_workspace\tcs\lib\third_party\junit\3.8.1\junit.jar;D:\ks_workspace\Catalog_Services_1.1_dev_dist1\build\classes;D:\ks_workspace\tcs\lib\tcs\base_exception\2.0\base_exception.jar;D:\ks_workspace\tcs\lib\tcs\configuration_api\1.0\configuration_api.jar;D:\ks_workspace\tcs\lib\tcs\configuration_manager\2.1.5\configuration_manager.jar;D:\ks_workspace\tcs\lib\tcs\db_connection_factory\1.1\db_connection_factory.jar;D:\ks_workspace\tcs\lib\tcs\id_generator\3.0\id_generator.jar;D:\ks_workspace\Catalog_Services_1.1_dev_dist1\test_files\lib\catalog_entities.jar;E:\server\jboss-4.2.0.GA\lib\commons-codec.jar;E:\server\jboss-4.2.0.GA\lib\commons-httpclient.jar;E:\server\jboss-4.2.0.GA\lib\commons-logging.jar;E:\server\jboss-4.2.0.GA\lib\concurrent.jar;E:\server\jboss-4.2.0.GA\lib\endorsed\serializer.jar;E:\server\jboss-4.2.0.GA\lib\endorsed\xalan.jar;E:\server\jboss-4.2.0.GA\lib\endorsed\xercesImpl.jar;E:\server\jboss-4.2.0.GA\lib\getopt.jar;E:\server\jboss-4.2.0.GA\lib\jboss-common.jar;E:\server\jboss-4.2.0.GA\lib\jboss-jmx.jar;E:\server\jboss-4.2.0.GA\lib\jboss-system.jar;E:\server\jboss-4.2.0.GA\lib\jboss-xml-binding.jar;E:\server\jboss-4.2.0.GA\lib\log4j-boot.jar;E:\server\jboss-4.2.0.GA\server\default\lib\activation.jar;E:\server\jboss-4.2.0.GA\server\default\lib\antlr.jar;E:\server\jboss-4.2.0.GA\server\default\lib\autonumber-plugin.jar;E:\server\jboss-4.2.0.GA\server\default\lib\bcel.jar;E:\server\jboss-4.2.0.GA\server\default\lib\bindingservice-plugin.jar;E:\server\jboss-4.2.0.GA\server\default\lib\bsf.jar;E:\server\jboss-4.2.0.GA\server\default\lib\bsh-deployer.jar;E:\server\jboss-4.2.0.GA\server\default\lib\bsh.jar;E:\server\jboss-4.2.0.GA\server\default\lib\cglib.jar;E:\server\jboss-4.2.0.GA\server\default\lib\commons-codec.jar;E:\server\jboss-4.2.0.GA\server\default\lib\commons-collections.jar;E:\server\jboss-4.2.0.GA\server\default\lib\commons-httpclient.jar;E:\server\jboss-4.2.0.GA\server\default\lib\commons-logging.jar;E:\server\jboss-4.2.0.GA\server\default\lib\dom4j.jar;E:\server\jboss-4.2.0.GA\server\default\lib\ejb3-persistence.jar;E:\server\jboss-4.2.0.GA\server\default\lib\el-api.jar;E:\server\jboss-4.2.0.GA\server\default\lib\hibernate-annotations.jar;E:\server\jboss-4.2.0.GA\server\default\lib\hibernate-entitymanager.jar;E:\server\jboss-4.2.0.GA\server\default\lib\hibernate3.jar;E:\server\jboss-4.2.0.GA\server\default\lib\hsqldb-plugin.jar;E:\server\jboss-4.2.0.GA\server\default\lib\hsqldb.jar;E:\server\jboss-4.2.0.GA\server\default\lib\ifxjdbc.jar;E:\server\jboss-4.2.0.GA\server\default\lib\javassist.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jaxen.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-cache-jdk50.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-common-jdbc-wrapper.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-ejb3x.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-hibernate.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-j2ee.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-jaxrpc.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-jca.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-jsr77.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-jsr88.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-management.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-monitoring.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-remoting-int.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-remoting.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-saaj.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-serialization.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-srp.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-transaction.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss-vfs.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jboss.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jbossjta-integration.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jbossjta.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jbossmq.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jbosssx.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jbossts-common.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jbossws-integration.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jmx-adaptor-plugin.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jnpserver.jar;E:\server\jboss-4.2.0.GA\server\default\lib\joesnmp.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jpl-pattern.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jpl-util.jar;E:\server\jboss-4.2.0.GA\server\default\lib\jsp-api.jar;E:\server\jboss-4.2.0.GA\server\default\lib\log4j-snmp-appender.jar;E:\server\jboss-4.2.0.GA\server\default\lib\log4j.jar;E:\server\jboss-4.2.0.GA\server\default\lib\mail-plugin.jar;E:\server\jboss-4.2.0.GA\server\default\lib\mail.jar;E:\server\jboss-4.2.0.GA\server\default\lib\properties-plugin.jar;E:\server\jboss-4.2.0.GA\server\default\lib\quartz.jar;E:\server\jboss-4.2.0.GA\server\default\lib\scheduler-plugin-example.jar;E:\server\jboss-4.2.0.GA\server\default\lib\scheduler-plugin.jar;E:\server\jboss-4.2.0.GA\server\default\lib\servlet-api.jar;E:\server\jboss-4.2.0.GA\server\default\lib\xmlentitymgr.jar;E:\server\jboss-4.2.0.GA\server\default\deploy\ejb3.deployer\jboss-annotations-ejb3.jar;E:\server\jboss-4.2.0.GA\server\default\deploy\ejb3.deployer\jboss-ejb3.jar;E:\server\jboss-4.2.0.GA\server\default\deploy\jboss-aop-jdk50.deployer\jboss-aop-jdk50.jar;E:\server\jboss-4.2.0.GA\server\default\deploy\jboss-aop-jdk50.deployer\jboss-aspect-library-jdk50.jar;E:\server\jboss-4.2.0.GA\server\default\deploy\jboss-aop-jdk50.deployer\trove.jar;D:\ks_workspace\Catalog_Services_1.1_dev_dist1\conf;D:\ks_workspace\Catalog_Services_1.1_dev_dist1\test_files;D:\ks_workspace\tcs\lib\third_party\cobertura\1.8\cobertura.jar;D:\ks_workspace\tcs\lib\third_party\cobertura\1.8\lib\asm-2.2.1.jar;D:\ks_workspace\tcs\lib\third_party\cobertura\1.8\lib\jakarta-oro-2.0.8.jar;D:\ks_workspace\tcs\lib\third_party\cobertura\1.8\lib\log4j-1.2.9.jar;D:\tools\dev\apache-ant-1.7.0\lib\junit-3.8.1.jar;D:\tools\dev\apache-ant-1.7.0\lib\ant-launcher.jar;D:\tools\dev\apache-ant-1.7.0\lib\ant.jar;D:\tools\dev\apache-ant-1.7.0\lib\ant-junit.jar" />
    <property name="dev_submission.jar" value="Catalog_Services_1.1_dev_submission.jar" />
    <property name="ant.library.dir" value="D:\tools\dev\apache-ant-1.7.0\lib" />
    <property name="os.arch" value="x86" />
    <property name="db_connection_factory.path" value="db_connection_factory/1.1" />
    <property name="easymock.jar" value="../tcs/lib/third_party/easymock/2.2/easymock.jar" />
    <property name="ant.core.lib" value="D:\tools\dev\apache-ant-1.7.0\lib\ant.jar" />
    <property name="java.vm.specification.vendor" value="Sun Microsystems Inc." />
    <property name="jboss.home" value="E:/server/jboss-4.2.0.GA" />
    <property name="file.separator" value="\" />
    <property name="java.runtime.version" value="1.5.0-b64" />
    <property name="build_docsdir" value="build/docs" />
    <property name="sun.boot.class.path" value="C:\Program Files\java\jdk1.5.0\jre\lib\rt.jar;C:\Program Files\java\jdk1.5.0\jre\lib\i18n.jar;C:\Program Files\java\jdk1.5.0\jre\lib\sunrsasign.jar;C:\Program Files\java\jdk1.5.0\jre\lib\jsse.jar;C:\Program Files\java\jdk1.5.0\jre\lib\jce.jar;C:\Program Files\java\jdk1.5.0\jre\lib\charsets.jar;C:\Program Files\java\jdk1.5.0\jre\classes" />
    <property name="design_submission.jar" value="Catalog_Services_1.1_design_submission.jar" />
    <property name="user.country" value="CN" />
    <property name="tcs_libdir" value="../tcs/lib/tcs" />
    <property name="component" value="Catalog_Services" />
    <property name="java.vendor" value="Sun Microsystems Inc." />
    <property name="db_connection_factory.jar" value="../tcs/lib/tcs/db_connection_factory/1.1/db_connection_factory.jar" />
    <property name="configuration_api.version" value="1.0" />
    <property name="java.specification.version" value="1.5" />
    <property name="testfiles" value="test_files" />
    <property name="sun.arch.data.model" value="32" />
    <property name="javatests" value="src/java/tests" />
  </properties>
  <testcase classname="com.topcoder.catalog.service.PersistenceExceptionTest" name="testConstructorWithMessage" time="0.016" />
  <testcase classname="com.topcoder.catalog.service.PersistenceExceptionTest" name="testConstructorWithMessageCause" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.EntityNotFoundExceptionTest" name="testConstructorWithMessage" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.EntityNotFoundExceptionTest" name="testConstructorWithMessageCause" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testAssetDTO" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetId" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testIdAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetCategories" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testCategoriesAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetClientIds" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testClientIdsAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetCurrentVersionAlsoLatestVersion" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetDetailedDescription" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testDetailedDescriptionAllowsNull" time="0.015" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetForum" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testForumAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetFunctionalDescription" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testFunctionalDescriptionAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetInformationComplete" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetLink" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testLinkAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetName" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testNameAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetProductionDate" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testProductionDateAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetRootCategory" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testRootCategoryAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetShortDescription" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testShortDescriptionAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetTechnologies" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testTechnologiesAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetUserIds" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testUserIdsAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetVersionId" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testVersionIdAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetVersionText" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testVersionTextAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetVersionNumber" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testVersionNumberAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetDocumentation" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testDocumentationAllowsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testName" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testSearchCriteria" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testUserId" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testClientId" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCategories" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testDescription" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCompCreateBeforeDate" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCompCreateAfterDate" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCompVersionCreateBeforeDate" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCompVersionCreateAfterDate" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testAllParametersNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testNameIsEmpty" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testDescriptionIsEmpty" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCategoriesIsEmpty" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCategoriesContainsNull" time="0.016" />
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCategoriesForNulls" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetPhases" time="3.469" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetActiveTechnologies" time="0.094" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetActiveCategories" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetAssetByIdCurrentVersion" time="0.375" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetAssetByIdLatestVersion" time="0.234" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetAssetByVersionId" time="0.563" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAsset" time="0.203" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetClients" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetClientsEmpty" time="0.141" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetUsers" time="0.171" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetUsersEmpty" time="0.141" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetForum" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetLink" time="0.203" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateVersion" time="0.891" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testUpdateAsset" time="0.094" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testUpdateAssetWithoutVersion" time="0.39" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testAssignUserToComponent" time="0.204" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testTwiceAssignUserToAsset" time="0.25" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testRemoveUserFromAsset" time="0.328" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testFindAsset" time="0.875" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testFindAsset_createDate_accuracy1" time="2.562" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testFindAsset_createDate_accuracy2" time="2.969" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetAllAssetVersions" time="0.375" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testEntityManagerNotInjected" time="0.047" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetPhasesJPAFailure" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetActiveTechnologiesJPAFailure" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetActiveCategoriesJPAFailure" time="0.047" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetAssetByNonExistingId" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetAssetJPAFailure" time="0.328" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetAssetByNonExistingVersionid" time="0.047" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetAssetByVersionJPAFailure" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateAssetJPAFailure" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateAssetNonExistingTechnology" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateAssetNonExistingCategory" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateVersionJPAFailure" time="0.906" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateVersionNonExistingAsset" time="0.079" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testUpdateAssetJPAFailure" time="0.218" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testUpdateAssetNonExistingAsset" time="0.234" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testUpdateVersionNonExistingVersion" time="0.172" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testAssignUserToNonExistingAsset" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testAssignUserToComponentJPAFailure" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testRemoveUserFromNonExistingComponent" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testRemoveUserFromNonExistingAssociation" time="0.594" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testRemoveUserFromComponentJPAFailure" time="0.219" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testFindAssetsNullParameter" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testFindAssetsJPAFailure" time="0.047" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetIdSet" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetVersionIdSet" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetNameIsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetNameIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetVersionTextIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetVersionTextIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetShortDescriptionIsNull" time="0.079" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetShortDescriptionIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetDetailedDescriptionIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetDetailedDescriptionIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetFunctionalDescriptionIsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetFunctionalDescriptionIsEmpty" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetRootCategoryIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetCategoriesIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetCategoriesIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetCategoriesContainsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetTechnologiesIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetTechnologiesIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetTechnologiesContainsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionNull" time="0.047" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionIdSet" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionVersionIdSet" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionNameIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionNameIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionVersionTextIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionVersionTextIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionShortDescriptionIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionShortDescriptionIsEmpty" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionDetailedDescriptionIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionDetailedDescriptionIsEmpty" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionFunctionalDescriptionIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionFunctionalDescriptionIsEmpty" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionRootCategoryIsNull" time="0.187" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionCategoriesIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionCategoriesIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionCategoriesContainsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionTechnologiesIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionTechnologiesIsEmpty" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionTechnologiesContainsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentNull" time="0.047" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentIdNull" time="0.172" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionIdSet" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentNameIsNull" time="0.406" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentNameIsEmpty" time="1.047" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionTextIsNull" time="0.172" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionTextIsEmpty" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionTextIsNullVersionIdToo" time="0.25" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionTextIsEmptyVersionIdToo" time="0.188" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentShortDescriptionIsNull" time="0.328" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentShortDescriptionIsEmpty" time="0.218" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentDetailedDescriptionIsNull" time="0.344" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentDetailedDescriptionIsEmpty" time="0.172" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentFunctionalDescriptionIsNull" time="0.39" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentFunctionalDescriptionIsEmpty" time="0.672" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentRootCategoryIsNull" time="0.188" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentCategoriesIsNull" time="0.141" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentCategoriesIsEmpty" time="0.172" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentCategoriesContainsNull" time="0.297" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesIsNull" time="0.328" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesIsEmpty" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesContainsNull" time="0.141" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesIsNullVersionIdIsNullToo" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesIsEmptyVersionIdIsNullToo" time="0.5" />
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesContainsNullVersionIdIsNullToo" time="0.672" />
  <testcase classname="com.topcoder.catalog.service.DemoTest" name="testCreateNewComponent" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.DemoTest" name="testCreateNewVersion" time="0.109" />
  <testcase classname="com.topcoder.catalog.service.DemoTest" name="testFindAssets" time="0.109" />
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest11" name="testFindAsset_createDate_accuracy1" time="3.125" />
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest11" name="testFindAsset_createDate_accuracy2" time="2.235" />
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest11" name="testGetAllAssetVersions" time="0.328" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_Null" time="0.562" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_IdSet" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_VersionIdSet" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_NameNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_NameIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_VersionTextIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_VersionTextIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_ShortDescriptionIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_ShortDescriptionIsEmpty" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_DetailedDescriptionIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_DetailedDescriptionIsEmpty" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_FunctionalDescriptionIsNull" time="0.094" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_FunctionalDescriptionIsEmpty" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_RootCategoryIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_CategoriesIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_CategoriesIsEmpty" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_CategoriesContainsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_TechnologiesIsNull" time="0.079" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_TechnologiesIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_TechnologiesContainsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_Null" time="0.047" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_IdSet" time="0.094" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_VersionIdSet" time="0.094" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_NameIsNull" time="0.125" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_NameIsEmpty" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_VersionTextIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_VersionTextIsEmpty" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_ShortDescriptionIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_ShortDescriptionIsEmpty" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_DetailedDescriptionIsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_DetailedDescriptionIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_FunctionalDescriptionIsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_FunctionalDescriptionIsEmpty" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_RootCategoryIsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_CategoriesIsNull" time="0.079" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_CategoriesIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_CategoriesContainsNull" time="0.25" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_TechnologiesIsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_TechnologiesIsEmpty" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_TechnologiesContainsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_Null" time="0.047" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_IdNull" time="0.438" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_NameIsNull" time="0.109" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_NameIsEmpty" time="0.172" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_ShortDescriptionIsNull" time="0.125" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_ShortDescriptionIsEmpty" time="0.265" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_DetailedDescriptionIsNull" time="0.719" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_DetailedDescriptionIsEmpty" time="0.14" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_FunctionalDescriptionIsNull" time="0.11" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_FunctionalDescriptionIsEmpty" time="0.11" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_RootCategoryIsNull" time="0.312" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_CategoriesIsNull" time="0.266" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_CategoriesIsEmpty" time="0.109" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_CategoriesContainsNull" time="0.11" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_TechnologiesIsNull" time="0.297" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_TechnologiesIsEmpty" time="0.125" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_TechnologiesContainsNull" time="0.765" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_DocumentationIsNull" time="0.094" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_DocumentationContainsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_DocumentationIsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_DocumentationContainsNull" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_UpdateAsset_fail_DocumentationIsNull" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_UpdateAsset_fail_DocumentationContainsNull" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_GetActiveCategories_fail_EntityManagerNotInjected" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_GetActiveCategories_fail_Cause_PE" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_GetActiveCategories_fail_Cause_IAE" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getActiveTechnologies_fail_Cause_PE" time="0.047" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getActiveTechnologies_fail_Cause_IAE" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getPhases_fail_Cause_PE" time="1.11" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getPhases_fail_Cause_IAE" time="0.046" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetById_fail_NonExistingId" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetById_fail_cause_PE" time="0.109" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetById_fail_cause_IAE" time="0.266" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetByVersionId_fail_NonExistingVersionid" time="0.046" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetByVersionId_fail_cause_PE" time="0.094" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetByVersionId_fail_cause_IAE" time="0.11" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_createAsset_fail_cause_PE" time="0.062" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_createAsset_fail_cause_IAE" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateAsset_NonExistingTechnology" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateAsset_NonExistingCategory" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateVersion_fail_cause_PE" time="0.234" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateVersion_fail_cause_IAE" time="0.688" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateVersion_fail_NonExistingAsset" time="0.187" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_UpdateAsset_fail_cause_PE" time="0.235" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_UpdateAsset_fail_cause_IAE" time="0.265" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_UpdateAsset_fail_NonExistingAsset" time="0.297" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_FindAssets_fail_NullParameter" time="0.14" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_FindAssets_fail_cause_PE" time="0.094" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_FindAssets_fail_cause_IAE" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_assignUserToAsset_fail_NonExistingAsset" time="0.063" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_assignUserToAsset_fail_cause_PE" time="0.14" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_assignUserToAsset_fail_cause_IAE" time="1.0" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_removeUserFromAsset_fail_NonExistingComponent" time="0.11" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_removeUserFromAsset_NonExistingAssociation" time="0.156" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_removeUserFromAsset_fail_cause_PE" time="0.594" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_removeUserFromAsset_fail_cause_IAE" time="0.203" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAllAssetVersions_fail_cause_EntityNotFoundException" time="0.078" />
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAllAssetVersions_fail_cause_PersistenceException" time="0.172" />
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_AllParametersNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_NameEmpty" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_DescriptionEmpty" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_CategoriesEmpty" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_CategoriesContainsNull" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServiceImplStressTest" name="testGetAllAssetVersions" time="1.531" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServiceImplStressTest" name="testFindAssets" time="0.641" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetName" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetCategories" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetDetailedDescription" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetForum" time="0.015" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetFunctionalDescription" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetTechnologies" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetVersionNumber" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetClientIds" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetLink" time="0.016" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetCategories" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetClientId" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetDescription" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetName" time="0.0" />
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetUserId" time="0.0" />
  <system-out><![CDATA[WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   logWarnings, SQL Warning: 0, SQLState: 01I01
WARN   logWarnings, Database has transactions
WARN   logWarnings, SQL Warning: 0, SQLState: 01I04
WARN   logWarnings, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select phase0_.phase_id as phase1_11_, phase0_.description as descript2_11_ from phase phase0_
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select technology0_.technology_type_id as technology1_10_, technology0_.technology_name as technology2_10_, technology0_.description as descript3_10_, technology0_.status_id as status4_10_ from technology_types technology0_ where technology0_.status_id=1
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_, category0_.category_name as category2_3_, category0_.description as descript3_3_, category0_.status_id as status4_3_, category0_.viewable as viewable3_, category0_.parent_category_id as parent6_3_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_ from categories category0_ where category0_.status_id=1 and category0_.viewable=1
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_jive_category_xref (comp_vers_id, jive_category_id) values (?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_link (link, comp_vers_id, comp_link_id) values (?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: update comp_catalog set component_name=?, status_id=?, short_desc=?, function_desc=?, description=?, root_category_id=?, current_version=? where component_id=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_user where user_id=? and component_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (B.create_time<='2008-03-30 00:00:00.0')
 AND (B.create_time>='2008-03-30 22:31:05.625'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (C.create_time<='2008-03-30 00:00:00.0')
 AND (C.create_time>='2008-03-30 00:00:00.0'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_catalog set component_name=?, status_id=?, short_desc=?, function_desc=?, description=?, root_category_id=?, current_version=? where component_id=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%catalog%'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   logWarnings, SQL Warning: 0, SQLState: 01I01
WARN   logWarnings, Database has transactions
WARN   logWarnings, SQL Warning: 0, SQLState: 01I04
WARN   logWarnings, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (B.create_time<='2008-03-30 00:00:00.0')
 AND (B.create_time>='2008-03-30 22:31:26.531'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (C.create_time<='2008-03-30 00:00:00.0')
 AND (C.create_time>='2008-03-30 00:00:00.0'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   logWarnings, SQL Warning: 0, SQLState: 01I01
WARN   logWarnings, Database has transactions
WARN   logWarnings, SQL Warning: 0, SQLState: 01I04
WARN   logWarnings, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select compversio0_.comp_vers_id as comp1_37_2_, compversio0_.component_id as component2_37_2_, compversio0_.version as version37_2_, compversio0_.version_text as version4_37_2_, compversio0_.phase_id as phase5_37_2_, compversio0_.phase_time as phase6_37_2_, compversio0_.price as price37_2_, compversio0_.comments as comments37_2_, compversio0_.suspended_ind as suspended9_37_2_, compforum1_.jive_category_id as jive1_42_0_, compforum1_.comp_vers_id as comp2_42_0_, complink2_.comp_link_id as comp1_43_1_, complink2_.link as link43_1_, complink2_.comp_vers_id as comp3_43_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_34_0_, users0_.component_id as component2_34_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_33_0_, category1_.category_name as category2_33_0_, category1_.description as descript3_33_0_, category1_.status_id as status4_33_0_, category1_.viewable as viewable33_0_, category1_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula4_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_35_0_, clients0_.component_id as component2_35_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   logWarnings, SQL Warning: 0, SQLState: 01I01
WARN   logWarnings, Database has transactions
WARN   logWarnings, SQL Warning: 0, SQLState: 01I04
WARN   logWarnings, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_55_0_, technology0_.technology_name as technology2_55_0_, technology0_.description as descript3_55_0_, technology0_.status_id as status4_55_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_55_0_, technology0_.technology_name as technology2_55_0_, technology0_.description as descript3_55_0_, technology0_.status_id as status4_55_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_56_0_, phase0_.description as descript2_56_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Stress test for the method getAllAssetVersions(long) took 15ms
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_55_0_, technology0_.technology_name as technology2_55_0_, technology0_.description as descript3_55_0_, technology0_.status_id as status4_55_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_55_0_, technology0_.technology_name as technology2_55_0_, technology0_.description as descript3_55_0_, technology0_.status_id as status4_55_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_56_0_, phase0_.description as descript2_56_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_46_, component0_.component_name as component2_46_, component0_.status_id as status3_46_, component0_.short_desc as short4_46_, component0_.function_desc as function5_46_, component0_.description as descript6_46_, component0_.root_category_id as root7_46_, component0_.current_version as current8_46_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_46_, component0_.component_name as component2_46_, component0_.status_id as status3_46_, component0_.short_desc as short4_46_, component0_.function_desc as function5_46_, component0_.description as descript6_46_, component0_.root_category_id as root7_46_, component0_.current_version as current8_46_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Stress test for the method findAssets(SearchCriteria, boolean) took 172ms
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
The test [AssetDTO#setName] run 1000 times, took time: 0 ms
The test [AssetDTO#setCategories] run 1000 times, took time: 0 ms
The test [AssetDTO#setDetailedDescription] run 1000 times, took time: 0 ms
The test [AssetDTO#setForum] run 1000 times, took time: 0 ms
The test [AssetDTO#setFunctionalDescription] run 1000 times, took time: 0 ms
The test [AssetDTO#setTechnologies] run 1000 times, took time: 0 ms
The test [AssetDTO#setVersionNumber] run 1000 times, took time: 0 ms
The test [AssetDTO#setClientIds] run 1000 times, took time: 0 ms
The test [AssetDTO#setLink] run 1000 times, took time: 16 ms
The test [SearchCriteria#getCategories] run 1000 times, took time: 0 ms
The test [SearchCriteria#getClientId] run 1000 times, took time: 0 ms
The test [SearchCriteria#getDescription] run 1000 times, took time: 0 ms
The test [SearchCriteria#getName] run 1000 times, took time: 0 ms
The test [SearchCriteria#getUserId] run 1000 times, took time: 0 ms
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
