Testsuite: com.topcoder.catalog.service.AllTests
Tests run: 293, Failures: 0, Errors: 0, Time elapsed: 53.188 sec
------------- Standard Output ---------------
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   logWarnings, SQL Warning: 0, SQLState: 01I01
WARN   logWarnings, Database has transactions
WARN   logWarnings, SQL Warning: 0, SQLState: 01I04
WARN   logWarnings, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select phase0_.phase_id as phase1_11_, phase0_.description as descript2_11_ from phase phase0_
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select technology0_.technology_type_id as technology1_10_, technology0_.technology_name as technology2_10_, technology0_.description as descript3_10_, technology0_.status_id as status4_10_ from technology_types technology0_ where technology0_.status_id=1
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_, category0_.category_name as category2_3_, category0_.description as descript3_3_, category0_.status_id as status4_3_, category0_.viewable as viewable3_, category0_.parent_category_id as parent6_3_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_ from categories category0_ where category0_.status_id=1 and category0_.viewable=1
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_jive_category_xref (comp_vers_id, jive_category_id) values (?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_link (link, comp_vers_id, comp_link_id) values (?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: update comp_catalog set component_name=?, status_id=?, short_desc=?, function_desc=?, description=?, root_category_id=?, current_version=? where component_id=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_user where user_id=? and component_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))
)
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))
)

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (B.create_time<='2008-03-30 00:00:00.0')
 AND (B.create_time>='2008-03-30 22:31:05.625'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (C.create_time<='2008-03-30 00:00:00.0')
 AND (C.create_time>='2008-03-30 00:00:00.0'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_2_, compversio0_.component_id as component2_7_2_, compversio0_.version as version7_2_, compversio0_.version_text as version4_7_2_, compversio0_.phase_id as phase5_7_2_, compversio0_.phase_time as phase6_7_2_, compversio0_.price as price7_2_, compversio0_.comments as comments7_2_, compversio0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_1_0_, component0_.component_name as component2_1_0_, component0_.status_id as status3_1_0_, component0_.short_desc as short4_1_0_, component0_.function_desc as function5_1_0_, component0_.description as descript6_1_0_, component0_.root_category_id as root7_1_0_, component0_.current_version as current8_1_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_9_0_, versiondat0_.phase_id as phase2_9_0_, versiondat0_.comp_vers_id as comp3_9_0_, versiondat0_.posting_date as posting4_9_0_, versiondat0_.initial_submission_date as initial5_9_0_, versiondat0_.winner_announced_date as winner6_9_0_, versiondat0_.final_submission_date as final7_9_0_, versiondat0_.estimated_dev_date as estimated8_9_0_, versiondat0_.price as price9_0_, versiondat0_.total_submissions as total10_9_0_, versiondat0_.status_id as status11_9_0_, versiondat0_.level_id as level12_9_0_, versiondat0_.screening_complete_date as screening13_9_0_, versiondat0_.review_complete_date as review14_9_0_, versiondat0_.aggregation_complete_date as aggrega15_9_0_, versiondat0_.phase_complete_date as phase16_9_0_, versiondat0_.production_date as production17_9_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_0_, versiondat0_.phase_complete_date_comment as phase19_9_0_, versiondat0_.review_complete_date_comment as review20_9_0_, versiondat0_.winner_announced_date_comment as winner21_9_0_, versiondat0_.initial_submission_date_comment as initial22_9_0_, versiondat0_.screening_complete_date_comment as screening23_9_0_, versiondat0_.final_submission_date_comment as final24_9_0_, versiondat0_.production_date_comment as production25_9_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_14_0_, documentat0_.comp_vers_id as comp2_14_0_, documentat0_.document_type_id as document3_14_0_, documentat0_.document_name as document4_14_0_, documentat0_.url as url14_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula1_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_catalog set component_name=?, status_id=?, short_desc=?, function_desc=?, description=?, root_category_id=?, current_version=? where component_id=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_7_2_, versions0_.component_id as component2_7_2_, versions0_.version as version7_2_, versions0_.version_text as version4_7_2_, versions0_.phase_id as phase5_7_2_, versions0_.phase_time as phase6_7_2_, versions0_.price as price7_2_, versions0_.comments as comments7_2_, versions0_.suspended_ind as suspended9_7_2_, compforum1_.jive_category_id as jive1_12_0_, compforum1_.comp_vers_id as comp2_12_0_, complink2_.comp_link_id as comp1_13_1_, complink2_.link as link13_1_, complink2_.comp_vers_id as comp3_13_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_0_, category0_.category_name as category2_3_0_, category0_.description as descript3_3_0_, category0_.status_id as status4_3_0_, category0_.viewable as viewable3_0_, category0_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_11_0_, phase0_.description as descript2_11_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%catalog%'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   logWarnings, SQL Warning: 0, SQLState: 01I01
WARN   logWarnings, Database has transactions
WARN   logWarnings, SQL Warning: 0, SQLState: 01I04
WARN   logWarnings, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (B.create_time<='2008-03-30 00:00:00.0')
 AND (B.create_time>='2008-03-30 22:31:26.531'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_22_2_, compversio0_.component_id as component2_22_2_, compversio0_.version as version22_2_, compversio0_.version_text as version4_22_2_, compversio0_.phase_id as phase5_22_2_, compversio0_.phase_time as phase6_22_2_, compversio0_.price as price22_2_, compversio0_.comments as comments22_2_, compversio0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: insert into comp_documentation (comp_vers_id, document_type_id, document_name, url, document_id) values (?, ?, ?, ?, ?)
Hibernate: select component0_.component_id as component1_16_0_, component0_.component_name as component2_16_0_, component0_.status_id as status3_16_0_, component0_.short_desc as short4_16_0_, component0_.function_desc as function5_16_0_, component0_.description as descript6_16_0_, component0_.root_category_id as root7_16_0_, component0_.current_version as current8_16_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select versions0_.component_id as component2_3_, versions0_.comp_vers_id as comp1_3_, versions0_.version as version3_, versions0_.comp_vers_id as comp1_22_2_, versions0_.component_id as component2_22_2_, versions0_.version as version22_2_, versions0_.version_text as version4_22_2_, versions0_.phase_id as phase5_22_2_, versions0_.phase_time as phase6_22_2_, versions0_.price as price22_2_, versions0_.comments as comments22_2_, versions0_.suspended_ind as suspended9_22_2_, compforum1_.jive_category_id as jive1_27_0_, compforum1_.comp_vers_id as comp2_27_0_, complink2_.comp_link_id as comp1_28_1_, complink2_.link as link28_1_, complink2_.comp_vers_id as comp3_28_1_ from comp_versions versions0_ left outer join comp_jive_category_xref compforum1_ on versions0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on versions0_.comp_vers_id=complink2_.comp_vers_id where versions0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_18_0_, category1_.category_name as category2_18_0_, category1_.description as descript3_18_0_, category1_.status_id as status4_18_0_, category1_.viewable as viewable18_0_, category1_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_20_0_, clients0_.component_id as component2_20_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_19_0_, users0_.component_id as component2_19_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_25_0_, technology1_.technology_name as technology2_25_0_, technology1_.description as descript3_25_0_, technology1_.status_id as status4_25_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_1_, versiondat0_.comp_version_dates_id as comp1_1_, versiondat0_.phase_id as phase2_1_, versiondat0_.comp_version_dates_id as comp1_24_0_, versiondat0_.phase_id as phase2_24_0_, versiondat0_.comp_vers_id as comp3_24_0_, versiondat0_.posting_date as posting4_24_0_, versiondat0_.initial_submission_date as initial5_24_0_, versiondat0_.winner_announced_date as winner6_24_0_, versiondat0_.final_submission_date as final7_24_0_, versiondat0_.estimated_dev_date as estimated8_24_0_, versiondat0_.price as price24_0_, versiondat0_.total_submissions as total10_24_0_, versiondat0_.status_id as status11_24_0_, versiondat0_.level_id as level12_24_0_, versiondat0_.screening_complete_date as screening13_24_0_, versiondat0_.review_complete_date as review14_24_0_, versiondat0_.aggregation_complete_date as aggrega15_24_0_, versiondat0_.phase_complete_date as phase16_24_0_, versiondat0_.production_date as production17_24_0_, versiondat0_.aggregation_complete_date_comment as aggrega18_24_0_, versiondat0_.phase_complete_date_comment as phase19_24_0_, versiondat0_.review_complete_date_comment as review20_24_0_, versiondat0_.winner_announced_date_comment as winner21_24_0_, versiondat0_.initial_submission_date_comment as initial22_24_0_, versiondat0_.screening_complete_date_comment as screening23_24_0_, versiondat0_.final_submission_date_comment as final24_24_0_, versiondat0_.production_date_comment as production25_24_0_ from comp_version_dates versiondat0_ where versiondat0_.comp_vers_id=?
Hibernate: select documentat0_.comp_vers_id as comp2_1_, documentat0_.document_id as document1_1_, documentat0_.document_id as document1_29_0_, documentat0_.comp_vers_id as comp2_29_0_, documentat0_.document_type_id as document3_29_0_, documentat0_.document_name as document4_29_0_, documentat0_.url as url29_0_, 
                (SELECT A.description FROM doc_types A
                    WHERE A.document_type_id = documentat0_.document_type_id)
             as formula3_0_ from comp_documentation documentat0_ where documentat0_.comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_16_, component0_.component_name as component2_16_, component0_.status_id as status3_16_, component0_.short_desc as short4_16_, component0_.function_desc as function5_16_, component0_.description as descript6_16_, component0_.root_category_id as root7_16_, component0_.current_version as current8_16_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (C.create_time<='2008-03-30 00:00:00.0')
 AND (C.create_time>='2008-03-30 00:00:00.0'))

Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_25_0_, technology0_.technology_name as technology2_25_0_, technology0_.description as descript3_25_0_, technology0_.status_id as status4_25_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_26_0_, phase0_.description as descript2_26_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: select category0_.category_id as category1_18_0_, category0_.category_name as category2_18_0_, category0_.description as descript3_18_0_, category0_.status_id as status4_18_0_, category0_.viewable as viewable18_0_, category0_.parent_category_id as parent6_18_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_0_ from categories category0_ where category0_.category_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   logWarnings, SQL Warning: 0, SQLState: 01I01
WARN   logWarnings, Database has transactions
WARN   logWarnings, SQL Warning: 0, SQLState: 01I04
WARN   logWarnings, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_categories where component_id=?
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select compversio0_.comp_vers_id as comp1_37_2_, compversio0_.component_id as component2_37_2_, compversio0_.version as version37_2_, compversio0_.version_text as version4_37_2_, compversio0_.phase_id as phase5_37_2_, compversio0_.phase_time as phase6_37_2_, compversio0_.price as price37_2_, compversio0_.comments as comments37_2_, compversio0_.suspended_ind as suspended9_37_2_, compforum1_.jive_category_id as jive1_42_0_, compforum1_.comp_vers_id as comp2_42_0_, complink2_.comp_link_id as comp1_43_1_, complink2_.link as link43_1_, complink2_.comp_vers_id as comp3_43_1_ from comp_versions compversio0_ left outer join comp_jive_category_xref compforum1_ on compversio0_.comp_vers_id=compforum1_.comp_vers_id left outer join comp_link complink2_ on compversio0_.comp_vers_id=complink2_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select component0_.component_id as component1_31_0_, component0_.component_name as component2_31_0_, component0_.status_id as status3_31_0_, component0_.short_desc as short4_31_0_, component0_.function_desc as function5_31_0_, component0_.description as descript6_31_0_, component0_.root_category_id as root7_31_0_, component0_.current_version as current8_31_0_ from comp_catalog component0_ where component0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_34_0_, users0_.component_id as component2_34_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_1_, categories0_.category_id as category2_1_, categories0_.comp_categories_id as comp3_1_, category1_.category_id as category1_33_0_, category1_.category_name as category2_33_0_, category1_.description as descript3_33_0_, category1_.status_id as status4_33_0_, category1_.viewable as viewable33_0_, category1_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula4_0_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id where categories0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_35_0_, clients0_.component_id as component2_35_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: insert into comp_user (user_id, component_id) values (?, ?)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_33_0_, category0_.category_name as category2_33_0_, category0_.description as descript3_33_0_, category0_.status_id as status4_33_0_, category0_.viewable as viewable33_0_, category0_.parent_category_id as parent6_33_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula4_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_40_0_, technology0_.technology_name as technology2_40_0_, technology0_.description as descript3_40_0_, technology0_.status_id as status4_40_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_41_0_, phase0_.description as descript2_41_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_31_, component0_.component_name as component2_31_, component0_.status_id as status3_31_, component0_.short_desc as short4_31_, component0_.function_desc as function5_31_, component0_.description as descript6_31_, component0_.root_category_id as root7_31_, component0_.current_version as current8_31_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   checkCompositeIdentifier, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   checkCompositeIdentifier, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
WARN   logWarnings, SQL Warning: 0, SQLState: 01I01
WARN   logWarnings, Database has transactions
WARN   logWarnings, SQL Warning: 0, SQLState: 01I04
WARN   logWarnings, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_55_0_, technology0_.technology_name as technology2_55_0_, technology0_.description as descript3_55_0_, technology0_.status_id as status4_55_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_55_0_, technology0_.technology_name as technology2_55_0_, technology0_.description as descript3_55_0_, technology0_.status_id as status4_55_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_56_0_, phase0_.description as descript2_56_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Stress test for the method getAllAssetVersions(long) took 15ms
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (300, 'type1', 1111)
Hibernate: insert into doc_types (document_type_id, description, status_id) values (301, 'type2', 1111)
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select category0_.category_id as category1_48_0_, category0_.category_name as category2_48_0_, category0_.description as descript3_48_0_, category0_.status_id as status4_48_0_, category0_.viewable as viewable48_0_, category0_.parent_category_id as parent6_48_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                    WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula6_0_ from categories category0_ where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_55_0_, technology0_.technology_name as technology2_55_0_, technology0_.description as descript3_55_0_, technology0_.status_id as status4_55_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_55_0_, technology0_.technology_name as technology2_55_0_, technology0_.description as descript3_55_0_, technology0_.status_id as status4_55_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select phase0_.phase_id as phase1_56_0_, phase0_.description as descript2_56_0_ from phase phase0_ where phase0_.phase_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_46_, component0_.component_name as component2_46_, component0_.status_id as status3_46_, component0_.short_desc as short4_46_, component0_.function_desc as function5_46_, component0_.description as descript6_46_, component0_.root_category_id as root7_46_, component0_.current_version as current8_46_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_catalog (component_name, status_id, short_desc, function_desc, description, root_category_id, current_version, component_id) values (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=?, version_text=?, phase_id=?, phase_time=?, price=?, comments=?, suspended_ind=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: insert into comp_versions (component_id, version, version_text, phase_id, phase_time, price, comments, suspended_ind, comp_vers_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into comp_version_dates (posting_date, initial_submission_date, winner_announced_date, final_submission_date, estimated_dev_date, price, total_submissions, status_id, level_id, screening_complete_date, review_complete_date, aggregation_complete_date, phase_complete_date, production_date, aggregation_complete_date_comment, phase_complete_date_comment, review_complete_date_comment, winner_announced_date_comment, initial_submission_date_comment, screening_complete_date_comment, final_submission_date_comment, production_date_comment, comp_vers_id, phase_id, comp_version_dates_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: delete from comp_categories where component_id=?
Hibernate: update comp_versions set component_id=?, version=? where comp_vers_id=?
Hibernate: update comp_version_dates set comp_vers_id=?, phase_id=? where comp_version_dates_id=?
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_technology (comp_vers_id, comp_tech_id, technology_type_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: insert into comp_categories (component_id, comp_categories_id, category_id) values (?, ?, ?)
Hibernate: select component0_.component_id as component1_46_, component0_.component_name as component2_46_, component0_.status_id as status3_46_, component0_.short_desc as short4_46_, component0_.function_desc as function5_46_, component0_.description as descript6_46_, component0_.root_category_id as root7_46_, component0_.current_version as current8_46_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
 WHERE (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
JOIN comp_client CL ON CL.component_id=C.component_id
 WHERE (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%short1%') OR (LOWER(C.short_desc) LIKE '%short1%') OR (LOWER(C.function_desc) LIKE '%short1%')
 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.description) LIKE '%functional1%') OR (LOWER(C.short_desc) LIKE '%functional1%') OR (LOWER(C.function_desc) LIKE '%functional1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.component_id=B.component_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))
AND version=(SELECT MAX(version) FROM comp_versions WHERE component_id=A.component_id)
Hibernate: SELECT A.component_id, A.component_name, A.short_desc, A.root_category_id, B.version_text, B.comp_vers_id FROM comp_catalog A
JOIN comp_versions B ON A.current_version=B.comp_vers_id
 where A.component_id IN (SELECT DISTINCT C.component_id FROM comp_catalog C
LEFT OUTER JOIN comp_user U ON C.component_id=U.component_id
LEFT OUTER JOIN comp_client CL ON CL.component_id=C.component_id
LEFT OUTER JOIN user_client UC ON UC.client_id=CL.client_id
 WHERE (U.user_id=? OR UC.user_id=?)

 AND (CL.client_id=?)
 AND (LOWER(C.component_name) LIKE '%services1%')
 AND (LOWER(C.description) LIKE '%clue1%') OR (LOWER(C.short_desc) LIKE '%clue1%') OR (LOWER(C.function_desc) LIKE '%clue1%')
 AND (C.root_category_id IN (?,?))

 AND (C.create_time<='2008-03-30 22:31:56.671')
 AND (C.create_time>='2008-01-09 00:00:00.0')
 AND (B.create_time<='2008-03-30 22:31:56.671')
 AND (B.create_time>='2008-01-09 00:00:00.0'))

Stress test for the method findAssets(SearchCriteria, boolean) took 172ms
Hibernate: delete from comp_documentation
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: delete from doc_types
Hibernate: commit
The test [AssetDTO#setName] run 1000 times, took time: 0 ms
The test [AssetDTO#setCategories] run 1000 times, took time: 0 ms
The test [AssetDTO#setDetailedDescription] run 1000 times, took time: 0 ms
The test [AssetDTO#setForum] run 1000 times, took time: 0 ms
The test [AssetDTO#setFunctionalDescription] run 1000 times, took time: 0 ms
The test [AssetDTO#setTechnologies] run 1000 times, took time: 0 ms
The test [AssetDTO#setVersionNumber] run 1000 times, took time: 0 ms
The test [AssetDTO#setClientIds] run 1000 times, took time: 0 ms
The test [AssetDTO#setLink] run 1000 times, took time: 16 ms
The test [SearchCriteria#getCategories] run 1000 times, took time: 0 ms
The test [SearchCriteria#getClientId] run 1000 times, took time: 0 ms
The test [SearchCriteria#getDescription] run 1000 times, took time: 0 ms
The test [SearchCriteria#getName] run 1000 times, took time: 0 ms
The test [SearchCriteria#getUserId] run 1000 times, took time: 0 ms
------------- ---------------- ---------------

Testcase: testConstructorWithMessage took 0.016 sec
Testcase: testConstructorWithMessageCause took 0 sec
Testcase: testConstructorWithMessage took 0 sec
Testcase: testConstructorWithMessageCause took 0 sec
Testcase: testAssetDTO took 0 sec
Testcase: testGetSetId took 0 sec
Testcase: testIdAllowsNull took 0 sec
Testcase: testGetSetCategories took 0 sec
Testcase: testCategoriesAllowsNull took 0 sec
Testcase: testGetSetClientIds took 0 sec
Testcase: testClientIdsAllowsNull took 0 sec
Testcase: testGetSetCurrentVersionAlsoLatestVersion took 0 sec
Testcase: testGetSetDetailedDescription took 0 sec
Testcase: testDetailedDescriptionAllowsNull took 0.015 sec
Testcase: testGetSetForum took 0 sec
Testcase: testForumAllowsNull took 0 sec
Testcase: testGetSetFunctionalDescription took 0 sec
Testcase: testFunctionalDescriptionAllowsNull took 0 sec
Testcase: testGetSetInformationComplete took 0 sec
Testcase: testGetSetLink took 0 sec
Testcase: testLinkAllowsNull took 0 sec
Testcase: testGetSetName took 0 sec
Testcase: testNameAllowsNull took 0 sec
Testcase: testGetSetProductionDate took 0 sec
Testcase: testProductionDateAllowsNull took 0 sec
Testcase: testGetSetRootCategory took 0 sec
Testcase: testRootCategoryAllowsNull took 0 sec
Testcase: testGetSetShortDescription took 0 sec
Testcase: testShortDescriptionAllowsNull took 0 sec
Testcase: testGetSetTechnologies took 0 sec
Testcase: testTechnologiesAllowsNull took 0 sec
Testcase: testGetSetUserIds took 0 sec
Testcase: testUserIdsAllowsNull took 0 sec
Testcase: testGetSetVersionId took 0 sec
Testcase: testVersionIdAllowsNull took 0 sec
Testcase: testGetSetVersionText took 0 sec
Testcase: testVersionTextAllowsNull took 0 sec
Testcase: testGetSetVersionNumber took 0 sec
Testcase: testVersionNumberAllowsNull took 0 sec
Testcase: testGetSetDocumentation took 0 sec
Testcase: testDocumentationAllowsNull took 0 sec
Testcase: testName took 0 sec
Testcase: testSearchCriteria took 0 sec
Testcase: testUserId took 0 sec
Testcase: testClientId took 0 sec
Testcase: testCategories took 0 sec
Testcase: testDescription took 0 sec
Testcase: testCompCreateBeforeDate took 0 sec
Testcase: testCompCreateAfterDate took 0 sec
Testcase: testCompVersionCreateBeforeDate took 0 sec
Testcase: testCompVersionCreateAfterDate took 0 sec
Testcase: testAllParametersNull took 0 sec
Testcase: testNameIsEmpty took 0 sec
Testcase: testDescriptionIsEmpty took 0 sec
Testcase: testCategoriesIsEmpty took 0 sec
Testcase: testCategoriesContainsNull took 0.016 sec
Testcase: testCategoriesForNulls took 0 sec
Testcase: testGetPhases took 3.469 sec
Testcase: testGetActiveTechnologies took 0.094 sec
Testcase: testGetActiveCategories took 0.078 sec
Testcase: testGetAssetByIdCurrentVersion took 0.375 sec
Testcase: testGetAssetByIdLatestVersion took 0.234 sec
Testcase: testGetAssetByVersionId took 0.563 sec
Testcase: testCreateAsset took 0.203 sec
Testcase: testCreateAssetClients took 0.156 sec
Testcase: testCreateAssetClientsEmpty took 0.141 sec
Testcase: testCreateAssetUsers took 0.171 sec
Testcase: testCreateAssetUsersEmpty took 0.141 sec
Testcase: testCreateAssetForum took 0.156 sec
Testcase: testCreateAssetLink took 0.203 sec
Testcase: testCreateVersion took 0.891 sec
Testcase: testUpdateAsset took 0.094 sec
Testcase: testUpdateAssetWithoutVersion took 0.39 sec
Testcase: testAssignUserToComponent took 0.204 sec
Testcase: testTwiceAssignUserToAsset took 0.25 sec
Testcase: testRemoveUserFromAsset took 0.328 sec
Testcase: testFindAsset took 0.875 sec
Testcase: testFindAsset_createDate_accuracy1 took 2.562 sec
Testcase: testFindAsset_createDate_accuracy2 took 2.969 sec
Testcase: testGetAllAssetVersions took 0.375 sec
Testcase: testEntityManagerNotInjected took 0.047 sec
Testcase: testGetPhasesJPAFailure took 0.062 sec
Testcase: testGetActiveTechnologiesJPAFailure took 0.063 sec
Testcase: testGetActiveCategoriesJPAFailure took 0.047 sec
Testcase: testGetAssetByNonExistingId took 0.062 sec
Testcase: testGetAssetJPAFailure took 0.328 sec
Testcase: testGetAssetByNonExistingVersionid took 0.047 sec
Testcase: testGetAssetByVersionJPAFailure took 0.156 sec
Testcase: testCreateAssetJPAFailure took 0.063 sec
Testcase: testCreateAssetNonExistingTechnology took 0.078 sec
Testcase: testCreateAssetNonExistingCategory took 0.062 sec
Testcase: testCreateVersionJPAFailure took 0.906 sec
Testcase: testCreateVersionNonExistingAsset took 0.079 sec
Testcase: testUpdateAssetJPAFailure took 0.218 sec
Testcase: testUpdateAssetNonExistingAsset took 0.234 sec
Testcase: testUpdateVersionNonExistingVersion took 0.172 sec
Testcase: testAssignUserToNonExistingAsset took 0.063 sec
Testcase: testAssignUserToComponentJPAFailure took 0.156 sec
Testcase: testRemoveUserFromNonExistingComponent took 0.062 sec
Testcase: testRemoveUserFromNonExistingAssociation took 0.594 sec
Testcase: testRemoveUserFromComponentJPAFailure took 0.219 sec
Testcase: testFindAssetsNullParameter took 0.062 sec
Testcase: testFindAssetsJPAFailure took 0.047 sec
Testcase: testCreateAssetNull took 0.063 sec
Testcase: testCreateAssetIdSet took 0.062 sec
Testcase: testCreateAssetVersionIdSet took 0.063 sec
Testcase: testCreateAssetNameIsNull took 0.078 sec
Testcase: testCreateAssetNameIsEmpty took 0.062 sec
Testcase: testCreateAssetVersionTextIsNull took 0.063 sec
Testcase: testCreateAssetVersionTextIsEmpty took 0.062 sec
Testcase: testCreateAssetShortDescriptionIsNull took 0.079 sec
Testcase: testCreateAssetShortDescriptionIsEmpty took 0.062 sec
Testcase: testCreateAssetDetailedDescriptionIsNull took 0.063 sec
Testcase: testCreateAssetDetailedDescriptionIsEmpty took 0.062 sec
Testcase: testCreateAssetFunctionalDescriptionIsNull took 0.078 sec
Testcase: testCreateAssetFunctionalDescriptionIsEmpty took 0.063 sec
Testcase: testCreateAssetRootCategoryIsNull took 0.062 sec
Testcase: testCreateAssetCategoriesIsNull took 0.063 sec
Testcase: testCreateAssetCategoriesIsEmpty took 0.062 sec
Testcase: testCreateAssetCategoriesContainsNull took 0.063 sec
Testcase: testCreateAssetTechnologiesIsNull took 0.063 sec
Testcase: testCreateAssetTechnologiesIsEmpty took 0.062 sec
Testcase: testCreateAssetTechnologiesContainsNull took 0.063 sec
Testcase: testCreateVersionNull took 0.047 sec
Testcase: testCreateVersionIdSet took 0.078 sec
Testcase: testCreateVersionVersionIdSet took 0.062 sec
Testcase: testCreateVersionNameIsNull took 0.063 sec
Testcase: testCreateVersionNameIsEmpty took 0.062 sec
Testcase: testCreateVersionVersionTextIsNull took 0.063 sec
Testcase: testCreateVersionVersionTextIsEmpty took 0.062 sec
Testcase: testCreateVersionShortDescriptionIsNull took 0.062 sec
Testcase: testCreateVersionShortDescriptionIsEmpty took 0.063 sec
Testcase: testCreateVersionDetailedDescriptionIsNull took 0.062 sec
Testcase: testCreateVersionDetailedDescriptionIsEmpty took 0.063 sec
Testcase: testCreateVersionFunctionalDescriptionIsNull took 0.062 sec
Testcase: testCreateVersionFunctionalDescriptionIsEmpty took 0.063 sec
Testcase: testCreateVersionRootCategoryIsNull took 0.187 sec
Testcase: testCreateVersionCategoriesIsNull took 0.063 sec
Testcase: testCreateVersionCategoriesIsEmpty took 0.062 sec
Testcase: testCreateVersionCategoriesContainsNull took 0.063 sec
Testcase: testCreateVersionTechnologiesIsNull took 0.062 sec
Testcase: testCreateVersionTechnologiesIsEmpty took 0.063 sec
Testcase: testCreateVersionTechnologiesContainsNull took 0.078 sec
Testcase: testUpdateComponentNull took 0.047 sec
Testcase: testUpdateComponentIdNull took 0.172 sec
Testcase: testUpdateComponentVersionIdSet took 0.156 sec
Testcase: testUpdateComponentNameIsNull took 0.406 sec
Testcase: testUpdateComponentNameIsEmpty took 1.047 sec
Testcase: testUpdateComponentVersionTextIsNull took 0.172 sec
Testcase: testUpdateComponentVersionTextIsEmpty took 0.156 sec
Testcase: testUpdateComponentVersionTextIsNullVersionIdToo took 0.25 sec
Testcase: testUpdateComponentVersionTextIsEmptyVersionIdToo took 0.188 sec
Testcase: testUpdateComponentShortDescriptionIsNull took 0.328 sec
Testcase: testUpdateComponentShortDescriptionIsEmpty took 0.218 sec
Testcase: testUpdateComponentDetailedDescriptionIsNull took 0.344 sec
Testcase: testUpdateComponentDetailedDescriptionIsEmpty took 0.172 sec
Testcase: testUpdateComponentFunctionalDescriptionIsNull took 0.39 sec
Testcase: testUpdateComponentFunctionalDescriptionIsEmpty took 0.672 sec
Testcase: testUpdateComponentRootCategoryIsNull took 0.188 sec
Testcase: testUpdateComponentCategoriesIsNull took 0.141 sec
Testcase: testUpdateComponentCategoriesIsEmpty took 0.172 sec
Testcase: testUpdateComponentCategoriesContainsNull took 0.297 sec
Testcase: testUpdateComponentTechnologiesIsNull took 0.328 sec
Testcase: testUpdateComponentTechnologiesIsEmpty took 0.156 sec
Testcase: testUpdateComponentTechnologiesContainsNull took 0.141 sec
Testcase: testUpdateComponentTechnologiesIsNullVersionIdIsNullToo took 0.156 sec
Testcase: testUpdateComponentTechnologiesIsEmptyVersionIdIsNullToo took 0.5 sec
Testcase: testUpdateComponentTechnologiesContainsNullVersionIdIsNullToo took 0.672 sec
Testcase: testCreateNewComponent took 0.078 sec
Testcase: testCreateNewVersion took 0.109 sec
Testcase: testFindAssets took 0.109 sec
Testcase: testFindAsset_createDate_accuracy1 took 3.125 sec
Testcase: testFindAsset_createDate_accuracy2 took 2.235 sec
Testcase: testGetAllAssetVersions took 0.328 sec
Testcase: test_CreateAsset_fail_Null took 0.562 sec
Testcase: test_CreateAsset_fail_IdSet took 0.063 sec
Testcase: test_CreateAsset_fail_VersionIdSet took 0.062 sec
Testcase: test_CreateAsset_fail_NameNull took 0.063 sec
Testcase: test_CreateAsset_fail_NameIsEmpty took 0.062 sec
Testcase: test_CreateAsset_fail_VersionTextIsNull took 0.063 sec
Testcase: test_CreateAsset_fail_VersionTextIsEmpty took 0.062 sec
Testcase: test_CreateAsset_fail_ShortDescriptionIsNull took 0.062 sec
Testcase: test_CreateAsset_fail_ShortDescriptionIsEmpty took 0.063 sec
Testcase: test_CreateAsset_fail_DetailedDescriptionIsNull took 0.062 sec
Testcase: test_CreateAsset_fail_DetailedDescriptionIsEmpty took 0.078 sec
Testcase: test_CreateAsset_fail_FunctionalDescriptionIsNull took 0.094 sec
Testcase: test_CreateAsset_fail_FunctionalDescriptionIsEmpty took 0.078 sec
Testcase: test_CreateAsset_fail_RootCategoryIsNull took 0.063 sec
Testcase: test_CreateAsset_fail_CategoriesIsNull took 0.062 sec
Testcase: test_CreateAsset_fail_CategoriesIsEmpty took 0.078 sec
Testcase: test_CreateAsset_fail_CategoriesContainsNull took 0.078 sec
Testcase: test_CreateAsset_fail_TechnologiesIsNull took 0.079 sec
Testcase: test_CreateAsset_fail_TechnologiesIsEmpty took 0.062 sec
Testcase: test_CreateAsset_fail_TechnologiesContainsNull took 0.078 sec
Testcase: test_CreateVersion_fail_Null took 0.047 sec
Testcase: test_CreateVersion_fail_IdSet took 0.094 sec
Testcase: test_CreateVersion_fail_VersionIdSet took 0.094 sec
Testcase: test_CreateVersion_fail_NameIsNull took 0.125 sec
Testcase: test_CreateVersion_fail_NameIsEmpty took 0.078 sec
Testcase: test_CreateVersion_fail_VersionTextIsNull took 0.062 sec
Testcase: test_CreateVersion_fail_VersionTextIsEmpty took 0.063 sec
Testcase: test_CreateVersion_fail_ShortDescriptionIsNull took 0.062 sec
Testcase: test_CreateVersion_fail_ShortDescriptionIsEmpty took 0.063 sec
Testcase: test_CreateVersion_fail_DetailedDescriptionIsNull took 0.062 sec
Testcase: test_CreateVersion_fail_DetailedDescriptionIsEmpty took 0.062 sec
Testcase: test_CreateVersion_fail_FunctionalDescriptionIsNull took 0.078 sec
Testcase: test_CreateVersion_fail_FunctionalDescriptionIsEmpty took 0.063 sec
Testcase: test_CreateVersion_fail_RootCategoryIsNull took 0.062 sec
Testcase: test_CreateVersion_fail_CategoriesIsNull took 0.079 sec
Testcase: test_CreateVersion_fail_CategoriesIsEmpty took 0.062 sec
Testcase: test_CreateVersion_fail_CategoriesContainsNull took 0.25 sec
Testcase: test_CreateVersion_fail_TechnologiesIsNull took 0.063 sec
Testcase: test_CreateVersion_fail_TechnologiesIsEmpty took 0.062 sec
Testcase: test_CreateVersion_fail_TechnologiesContainsNull took 0.062 sec
Testcase: test_updateAsset_fail_Null took 0.047 sec
Testcase: test_updateAsset_fail_IdNull took 0.438 sec
Testcase: test_updateAsset_fail_NameIsNull took 0.109 sec
Testcase: test_updateAsset_fail_NameIsEmpty took 0.172 sec
Testcase: test_updateAsset_fail_ShortDescriptionIsNull took 0.125 sec
Testcase: test_updateAsset_fail_ShortDescriptionIsEmpty took 0.265 sec
Testcase: test_updateAsset_fail_DetailedDescriptionIsNull took 0.719 sec
Testcase: test_updateAsset_fail_DetailedDescriptionIsEmpty took 0.14 sec
Testcase: test_updateAsset_fail_FunctionalDescriptionIsNull took 0.11 sec
Testcase: test_updateAsset_fail_FunctionalDescriptionIsEmpty took 0.11 sec
Testcase: test_updateAsset_fail_RootCategoryIsNull took 0.312 sec
Testcase: test_updateAsset_fail_CategoriesIsNull took 0.266 sec
Testcase: test_updateAsset_fail_CategoriesIsEmpty took 0.109 sec
Testcase: test_updateAsset_fail_CategoriesContainsNull took 0.11 sec
Testcase: test_updateAsset_fail_TechnologiesIsNull took 0.297 sec
Testcase: test_updateAsset_fail_TechnologiesIsEmpty took 0.125 sec
Testcase: test_updateAsset_fail_TechnologiesContainsNull took 0.765 sec
Testcase: test_CreateAsset_fail_DocumentationIsNull took 0.094 sec
Testcase: test_CreateAsset_fail_DocumentationContainsNull took 0.078 sec
Testcase: test_CreateVersion_fail_DocumentationIsNull took 0.078 sec
Testcase: test_CreateVersion_fail_DocumentationContainsNull took 0.063 sec
Testcase: test_UpdateAsset_fail_DocumentationIsNull took 0.078 sec
Testcase: test_UpdateAsset_fail_DocumentationContainsNull took 0.062 sec
Testcase: test_GetActiveCategories_fail_EntityManagerNotInjected took 0.063 sec
Testcase: test_GetActiveCategories_fail_Cause_PE took 0.062 sec
Testcase: test_GetActiveCategories_fail_Cause_IAE took 0.063 sec
Testcase: test_getActiveTechnologies_fail_Cause_PE took 0.047 sec
Testcase: test_getActiveTechnologies_fail_Cause_IAE took 0.062 sec
Testcase: test_getPhases_fail_Cause_PE took 1.11 sec
Testcase: test_getPhases_fail_Cause_IAE took 0.046 sec
Testcase: test_getAssetById_fail_NonExistingId took 0.063 sec
Testcase: test_getAssetById_fail_cause_PE took 0.109 sec
Testcase: test_getAssetById_fail_cause_IAE took 0.266 sec
Testcase: test_getAssetByVersionId_fail_NonExistingVersionid took 0.046 sec
Testcase: test_getAssetByVersionId_fail_cause_PE took 0.094 sec
Testcase: test_getAssetByVersionId_fail_cause_IAE took 0.11 sec
Testcase: test_createAsset_fail_cause_PE took 0.062 sec
Testcase: test_createAsset_fail_cause_IAE took 0.063 sec
Testcase: test_CreateAsset_NonExistingTechnology took 0.078 sec
Testcase: test_CreateAsset_NonExistingCategory took 0.078 sec
Testcase: test_CreateVersion_fail_cause_PE took 0.234 sec
Testcase: test_CreateVersion_fail_cause_IAE took 0.688 sec
Testcase: test_CreateVersion_fail_NonExistingAsset took 0.187 sec
Testcase: test_UpdateAsset_fail_cause_PE took 0.235 sec
Testcase: test_UpdateAsset_fail_cause_IAE took 0.265 sec
Testcase: test_UpdateAsset_fail_NonExistingAsset took 0.297 sec
Testcase: test_FindAssets_fail_NullParameter took 0.14 sec
Testcase: test_FindAssets_fail_cause_PE took 0.094 sec
Testcase: test_FindAssets_fail_cause_IAE took 0.156 sec
Testcase: test_assignUserToAsset_fail_NonExistingAsset took 0.063 sec
Testcase: test_assignUserToAsset_fail_cause_PE took 0.14 sec
Testcase: test_assignUserToAsset_fail_cause_IAE took 1 sec
Testcase: test_removeUserFromAsset_fail_NonExistingComponent took 0.11 sec
Testcase: test_removeUserFromAsset_NonExistingAssociation took 0.156 sec
Testcase: test_removeUserFromAsset_fail_cause_PE took 0.594 sec
Testcase: test_removeUserFromAsset_fail_cause_IAE took 0.203 sec
Testcase: test_getAllAssetVersions_fail_cause_EntityNotFoundException took 0.078 sec
Testcase: test_getAllAssetVersions_fail_cause_PersistenceException took 0.172 sec
Testcase: test_ctor_fail_AllParametersNull took 0 sec
Testcase: test_ctor_fail_NameEmpty took 0 sec
Testcase: test_ctor_fail_DescriptionEmpty took 0 sec
Testcase: test_ctor_fail_CategoriesEmpty took 0 sec
Testcase: test_ctor_fail_CategoriesContainsNull took 0 sec
Testcase: testGetAllAssetVersions took 1.531 sec
Testcase: testFindAssets took 0.641 sec
Testcase: testSetName took 0 sec
Testcase: testSetCategories took 0 sec
Testcase: testSetDetailedDescription took 0 sec
Testcase: testSetForum took 0.015 sec
Testcase: testSetFunctionalDescription took 0 sec
Testcase: testSetTechnologies took 0 sec
Testcase: testSetVersionNumber took 0 sec
Testcase: testSetClientIds took 0 sec
Testcase: testSetLink took 0.016 sec
Testcase: testGetCategories took 0 sec
Testcase: testGetClientId took 0 sec
Testcase: testGetDescription took 0 sec
Testcase: testGetName took 0 sec
Testcase: testGetUserId took 0 sec
