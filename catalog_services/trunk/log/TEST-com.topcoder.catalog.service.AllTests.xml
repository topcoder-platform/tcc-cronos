<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="0" name="com.topcoder.catalog.service.AllTests" tests="337" time="103.839">
  <properties>
    <property name="java.vendor" value="Sun Microsystems Inc."></property>
    <property name="javagenerated" value="src/java/generated"></property>
    <property name="package" value="com.topcoder.catalog.service"></property>
    <property name="docpackage.jar" value="catalog_services_docs.jar"></property>
    <property name="sun.java.launcher" value="SUN_STANDARD"></property>
    <property name="sun.management.compiler" value="HotSpot Client Compiler"></property>
    <property name="verbose" value="no"></property>
    <property name="os.name" value="Windows XP"></property>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.5.0_12\jre\lib\rt.jar;C:\Program Files\Java\jdk1.5.0_12\jre\lib\i18n.jar;C:\Program Files\Java\jdk1.5.0_12\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.5.0_12\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.5.0_12\jre\lib\jce.jar;C:\Program Files\Java\jdk1.5.0_12\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.5.0_12\jre\classes"></property>
    <property name="docsdir" value="docs"></property>
    <property name="ant.file.Hermes Events Accounting Entities" value="C:\projects\development\TC\CatalogServices10\build.xml"></property>
    <property name="javadoc.jar" value="javadocs.jar"></property>
    <property name="design_submission.jar" value="Catalog_Services_1.0dev_finalfix.jar"></property>
    <property name="sun.desktop" value="windows"></property>
    <property name="component.tests.jar" value="build/dist/catalog_services-1.0/lib/catalog_services_tests.jar"></property>
    <property name="java.vm.specification.vendor" value="Sun Microsystems Inc."></property>
    <property name="ant.home" value="C:\projects\sofware\apache-ant-1.6.5\bin\.."></property>
    <property name="java.runtime.version" value="1.5.0_12-b04"></property>
    <property name="component.ear" value="build/dist/catalog_services-1.0/lib/catalog_services/1.0/catalog_services.ear"></property>
    <property name="component_path" value="catalog_services/1.0"></property>
    <property name="cobertura.dir" value="C:/projects/sofware/cobertura-1.9"></property>
    <property name="user.name" value="All"></property>
    <property name="debug" value="off"></property>
    <property name="reports" value="reports"></property>
    <property name="testfiles" value="test_files"></property>
    <property name="dist_conf" value="build/dist/catalog_services-1.0/conf"></property>
    <property name="component_version" value="1.0"></property>
    <property name="user.language" value="ru"></property>
    <property name="cobertura.datafile" value="log/cobertura.ser"></property>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.5.0_12\jre\bin"></property>
    <property name="tcs_libdir" value="test_files/lib"></property>
    <property name="srcdir" value="src"></property>
    <property name="ant.project.name" value="Hermes Events Accounting Entities"></property>
    <property name="java.version" value="1.5.0_12"></property>
    <property name="user.timezone" value=""></property>
    <property name="dev_dist.jar" value="Catalog_Services_1.0_dev_dist.jar"></property>
    <property name="dev_finalfix.jar" value="Catalog_Services_1.0_dev_finalfix.jar"></property>
    <property name="sun.arch.data.model" value="32"></property>
    <property name="build_lib" value="build/lib"></property>
    <property name="webdir" value="web"></property>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.5.0_12\jre\lib\endorsed"></property>
    <property name="sun.cpu.isalist" value=""></property>
    <property name="packagedir" value="com/topcoder/catalog/service"></property>
    <property name="sun.jnu.encoding" value="Cp1251"></property>
    <property name="file.encoding.pkg" value="sun.io"></property>
    <property name="file.separator" value="\"></property>
    <property name="java.specification.name" value="Java Platform API Specification"></property>
    <property name="build_docsdir" value="build/docs"></property>
    <property name="dev_submission.jar" value="Catalog_Services_1.0_dev_submission.jar"></property>
    <property name="java.class.version" value="49.0"></property>
    <property name="build_testclassdir" value="build/testClasses"></property>
    <property name="user.country" value="RU"></property>
    <property name="java.home" value="C:\Program Files\Java\jdk1.5.0_12\jre"></property>
    <property name="java.vm.info" value="mixed mode"></property>
    <property name="jar_tcs_libdir" value="test_files/lib"></property>
    <property name="ant.file" value="C:\projects\development\TC\CatalogServices10\build.xml"></property>
    <property name="os.version" value="5.1"></property>
    <property name="build_distdir" value="build/dist"></property>
    <property name="dist_docpackage" value="build/doc_package"></property>
    <property name="build_tcsdistdir" value="build/dist/catalog_services-1.0"></property>
    <property name="path.separator" value=";"></property>
    <property name="java.vm.version" value="1.5.0_12-b04"></property>
    <property name="testlogdir" value="log"></property>
    <property name="user.variant" value=""></property>
    <property name="ant.library.dir" value="C:\projects\sofware\apache-ant-1.6.5\lib"></property>
    <property name="javamain" value="src/java/main"></property>
    <property name="dist_lib" value="build/dist/catalog_services-1.0/lib"></property>
    <property name="dist_testfiles" value="build/dist/catalog_services-1.0/test_files"></property>
    <property name="dist_javadocs" value="build/dist/catalog_services-1.0/docs/javadocs"></property>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"></property>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"></property>
    <property name="test.against.mocks" value="false"></property>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"></property>
    <property name="component" value="Catalog_Services"></property>
    <property name="component.war" value="${dist_examples}/catalog_services.war"></property>
    <property name="oracle.jdbc.dir" value="C:/projects/common-lib/oracle/10g"></property>
    <property name="user.home" value="C:\Documents and Settings\All"></property>
    <property name="java.specification.vendor" value="Sun Microsystems Inc."></property>
    <property name="java.vendor.url" value="http://java.sun.com/"></property>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.5.0_12\jre\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:\Oracle\product\10.1.0\Client_1\bin;C:\Oracle\product\10.1.0\Client_1\jre\1.4.2\bin\client;C:\Oracle\product\10.1.0\Client_1\jre\1.4.2\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem"></property>
    <property name="jboss.home" value="C:/projects/sofware/jboss-4.0.5-GA/jboss-4.0.5.GA"></property>
    <property name="build_javadocsdir" value="build/docs/javadocs"></property>
    <property name="configdir" value="conf"></property>
    <property name="java.vm.vendor" value="Sun Microsystems Inc."></property>
    <property name="java.runtime.name" value="Java(TM) 2 Runtime Environment, Standard Edition"></property>
    <property name="ant.version" value="Apache Ant version 1.6.5 compiled on June 2 2005"></property>
    <property name="java.class.path" value="C:\projects\sofware\cobertura-1.9\cobertura.jar;C:\projects\sofware\cobertura-1.9\lib\asm-2.2.1.jar;C:\projects\sofware\cobertura-1.9\lib\asm-tree-2.2.1.jar;C:\projects\sofware\cobertura-1.9\lib\jakarta-oro-2.0.8.jar;C:\projects\sofware\cobertura-1.9\lib\log4j-1.2.9.jar;C:\projects\development\TC\CatalogServices10\test_files;C:\projects\development\TC\CatalogServices10\build\testClasses;C:\projects\development\TC\CatalogServices10\build\classes;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\commons-httpclient.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\commons-logging.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\concurrent.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\endorsed\resolver.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\endorsed\serializer.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\endorsed\xalan.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\endorsed\xercesImpl.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\endorsed\xml-apis.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\getopt.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\jboss-common.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\jboss-jmx.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\jboss-system.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\jboss-xml-binding.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\log4j-boot.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\namespace.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\lib\webdavlib.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\activation.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\antlr-2.7.6.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\autonumber-plugin.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\avalon-framework.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\bcel.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\bindingservice-plugin.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\bsf.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\bsh-1.3.0.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\bsh-deployer.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\cglib.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\commons-collections.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\commons-httpclient.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\commons-logging.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\dom4j.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\ejb3-persistence.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\hibernate-annotations.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\hibernate-commons-annotations.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\hibernate-entitymanager.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\hibernate3.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\hsqldb-plugin.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\hsqldb.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jacorb.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\javassist.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\javax.servlet.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\javax.servlet.jsp.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jaxen.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-backport-concurrent.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-cache.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-common-jdbc-wrapper.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-hibernate.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-iiop.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-j2ee.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-jaxrpc.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-jca.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-jsr77.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-jsr88.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-management.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-monitoring.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-remoting-int.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-remoting.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-saaj.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-serialization.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-srp.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss-transaction.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jboss.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jbossha.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jbossmq.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jbossretro-rt.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jbosssx.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jdbc.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jgroups.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jmx-adaptor-plugin.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jnpserver.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\joesnmp.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jpl-pattern.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\jpl-util.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\log4j-snmp-appender.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\log4j.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\mail-plugin.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\mail.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\ojdbc14.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\orai18n.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\properties-plugin.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\quartz-all-1.5.2.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\scheduler-plugin-example.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\scheduler-plugin.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\wsdl4j.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\lib\xmlentitymgr.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\deploy\ejb3.deployer\jboss-annotations-ejb3.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\deploy\ejb3.deployer\jboss-ejb3.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\deploy\ejb3.deployer\jboss-ejb3x.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\deploy\jboss-aop-jdk50.deployer\jboss-aop-jdk50.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\deploy\jboss-aop-jdk50.deployer\jboss-aspect-library-jdk50.jar;C:\projects\sofware\jboss-4.0.5-GA\jboss-4.0.5.GA\server\all\deploy\jboss-aop-jdk50.deployer\trove.jar;C:\projects\development\TC\CatalogServices10\conf;C:\projects\development\TC\CatalogServices10\test_files\lib\base_exception.jar;C:\projects\development\TC\CatalogServices10\test_files\lib\catalog_entities.jar;C:\projects\development\TC\CatalogServices10\test_files\lib\configuration_api.jar;C:\projects\development\TC\CatalogServices10\test_files\lib\configuration_manager.jar;C:\projects\development\TC\CatalogServices10\test_files\lib\db_connection_factory.jar;C:\projects\development\TC\CatalogServices10\test_files\lib\id_generator.jar;C:\projects\development\TC\CatalogServices10\test_files\lib\jdbc.jar;C:\projects\development\TC\CatalogServices10\test_files\lib\mockups\easymock.jar;C:\projects\development\TC\CatalogServices10\test_files\lib\mockups\junit.jar;C:\projects\development\TC\CatalogServices10\test_files\lib\mockups\mockejb.jar;C:\projects\sofware\apache-ant-1.6.5\lib\junit.jar;C:\projects\sofware\apache-ant-1.6.5\lib\ant-launcher.jar;C:\projects\sofware\apache-ant-1.6.5\lib\ant.jar;C:\projects\sofware\apache-ant-1.6.5\lib\ant-junit.jar"></property>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"></property>
    <property name="ext_libdir" value="C:/projects/common-lib"></property>
    <property name="builddir" value="build"></property>
    <property name="java.vm.specification.version" value="1.0"></property>
    <property name="component.dist.jar" value="build/dist/catalog_services-1.0.jar"></property>
    <property name="junit.jar" value="C:/projects/common-lib/junit/3.8.2/junit.jar"></property>
    <property name="sun.cpu.endian" value="little"></property>
    <property name="sun.os.patch.level" value="Service Pack 2"></property>
    <property name="java.io.tmpdir" value="C:\DOCUME~1\All\LOCALS~1\Temp\"></property>
    <property name="java.vendor.url.bug" value="http://java.sun.com/cgi-bin/bugreport.cgi"></property>
    <property name="build_targetclassdir" value="build/targetclasses"></property>
    <property name="build_classdir" value="build/classes"></property>
    <property name="javatests" value="src/java/tests"></property>
    <property name="javadocsdir" value="docs/javadocs"></property>
    <property name="jboss.server.config" value="all"></property>
    <property name="instrumented.dir" value="build/instrumented"></property>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"></property>
    <property name="os.arch" value="x86"></property>
    <property name="build_webdir" value="build/web"></property>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.5.0_12\jre\lib\ext"></property>
    <property name="dist_src" value="build/dist/catalog_services-1.0/src"></property>
    <property name="user.dir" value="C:\projects\development\TC\CatalogServices10"></property>
    <property name="design_dist.jar" value="Catalog_Services_1.0_design_dist.jar"></property>
    <property name="javasrc" value="src/java"></property>
    <property name="jar_ext_libdir" value="test_files/lib"></property>
    <property name="build_generatedclassdir" value="build/generatedclasses"></property>
    <property name="line.separator" value="
"></property>
    <property name="java.vm.name" value="Java HotSpot(TM) Client VM"></property>
    <property name="java_1_3_bootclasspath" value="c:\program files\JavaSoft\JRE\1.3.1\lib\rt.jar"></property>
    <property name="distfilename" value="catalog_services"></property>
    <property name="basedir" value="C:\projects\development\TC\CatalogServices10"></property>
    <property name="ant.java.version" value="1.5"></property>
    <property name="file.encoding" value="Cp1251"></property>
    <property name="dist_docs" value="build/dist/catalog_services-1.0/docs"></property>
    <property name="component.jar" value="build/dist/catalog_services-1.0/lib/catalog_services/1.0/catalog_services.jar"></property>
    <property name="java.specification.version" value="1.5"></property>
  </properties>
  <testcase classname="com.topcoder.catalog.service.PersistenceExceptionTest" name="testConstructorWithMessage" time="0.02"></testcase>
  <testcase classname="com.topcoder.catalog.service.PersistenceExceptionTest" name="testConstructorWithMessageCause" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.EntityNotFoundExceptionTest" name="testConstructorWithMessage" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.EntityNotFoundExceptionTest" name="testConstructorWithMessageCause" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testAssetDTO" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetId" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testIdAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetCategories" time="0.01"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testCategoriesAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetClientIds" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testClientIdsAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetCurrentVersionAlsoLatestVersion" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetDetailedDescription" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testDetailedDescriptionAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetForum" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testForumAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetFunctionalDescription" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testFunctionalDescriptionAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetInformationComplete" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetLink" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testLinkAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetName" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testNameAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetProductionDate" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testProductionDateAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetRootCategory" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testRootCategoryAllowsNull" time="0.01"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetShortDescription" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testShortDescriptionAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetTechnologies" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testTechnologiesAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetUserIds" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testUserIdsAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetVersionId" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testVersionIdAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetVersionText" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testVersionTextAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testGetSetVersionNumber" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.AssetDTOTest" name="testVersionNumberAllowsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testSearchCriteria" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testUserId" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testClientId" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCategories" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testName" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testDescription" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testAllParametersNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testNameIsEmpty" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testDescriptionIsEmpty" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCategoriesIsEmpty" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCategoriesContainsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.SearchCriteriaTest" name="testCategoriesForNulls" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetPhases" time="8.162"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetActiveTechnologies" time="0.391"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetActiveCategories" time="0.27"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetAssetByIdCurrentVersion" time="1.232"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetAssetByIdLatestVersion" time="0.641"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testGetAssetByVersionId" time="0.881"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAsset" time="0.541"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetClients" time="0.46"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetClientsEmpty" time="0.591"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetUsers" time="0.431"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetUsersEmpty" time="0.35"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetForum" time="0.431"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateAssetLink" time="0.351"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testCreateVersion" time="0.761"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testUpdateAsset" time="0.841"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testUpdateAssetWithoutVersion" time="0.891"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testAssignUserToComponent" time="1.182"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testTwiceAssignUserToAsset" time="1.101"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testRemoveUserFromAsset" time="1.072"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplTest" name="testFindAsset" time="2.443"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testEntityManagerNotInjected" time="0.181"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetPhasesJPAFailure" time="0.33"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetActiveTechnologiesJPAFailure" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetActiveCategoriesJPAFailure" time="0.181"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetAssetByNonExistingId" time="0.32"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetAssetJPAFailure" time="2.494"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetAssetByNonExistingVersionid" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testGetAssetByVersionJPAFailure" time="0.621"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateAssetJPAFailure" time="0.25"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateAssetNonExistingTechnology" time="0.201"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateAssetNonExistingCategory" time="0.33"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateVersionJPAFailure" time="1.042"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testCreateVersionNonExistingAsset" time="0.21"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testUpdateAssetJPAFailure" time="0.581"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testUpdateAssetNonExistingAsset" time="0.49"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testUpdateVersionNonExistingVersion" time="0.511"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testAssignUserToNonExistingAsset" time="0.17"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testAssignUserToComponentJPAFailure" time="0.401"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testRemoveUserFromNonExistingComponent" time="0.17"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testRemoveUserFromNonExistingAssociation" time="0.581"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testRemoveUserFromComponentJPAFailure" time="0.811"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testFindAssetsNullParameter" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplFailTest" name="testFindAssetsJPAFailure" time="0.131"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetNull" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetIdSet" time="0.21"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetVersionIdSet" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetNameIsNull" time="0.201"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetNameIsEmpty" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetVersionTextIsNull" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetVersionTextIsEmpty" time="0.181"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetShortDescriptionIsNull" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetShortDescriptionIsEmpty" time="0.21"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetDetailedDescriptionIsNull" time="0.21"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetDetailedDescriptionIsEmpty" time="0.181"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetFunctionalDescriptionIsNull" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetFunctionalDescriptionIsEmpty" time="0.21"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetRootCategoryIsNull" time="0.201"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetCategoriesIsNull" time="0.22"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetCategoriesIsEmpty" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetCategoriesContainsNull" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetTechnologiesIsNull" time="0.181"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetTechnologiesIsEmpty" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateAssetIllegalArgumentsTest" name="testCreateAssetTechnologiesContainsNull" time="0.28"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionNull" time="0.201"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionIdSet" time="0.37"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionVersionIdSet" time="0.231"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionNameIsNull" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionNameIsEmpty" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionVersionTextIsNull" time="0.26"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionVersionTextIsEmpty" time="0.241"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionShortDescriptionIsNull" time="0.24"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionShortDescriptionIsEmpty" time="0.521"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionDetailedDescriptionIsNull" time="0.611"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionDetailedDescriptionIsEmpty" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionFunctionalDescriptionIsNull" time="0.22"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionFunctionalDescriptionIsEmpty" time="0.221"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionRootCategoryIsNull" time="0.17"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionCategoriesIsNull" time="0.23"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionCategoriesIsEmpty" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionCategoriesContainsNull" time="0.211"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionTechnologiesIsNull" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionTechnologiesIsEmpty" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplCreateVersionIllegalArgumentsTest" name="testCreateVersionTechnologiesContainsNull" time="0.201"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentNull" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentIdNull" time="0.901"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionIdSet" time="0.471"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentNameIsNull" time="0.691"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentNameIsEmpty" time="1.362"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionTextIsNull" time="0.621"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionTextIsEmpty" time="0.53"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionTextIsNullVersionIdToo" time="0.551"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentVersionTextIsEmptyVersionIdToo" time="0.561"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentShortDescriptionIsNull" time="0.731"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentShortDescriptionIsEmpty" time="0.791"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentDetailedDescriptionIsNull" time="0.531"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentDetailedDescriptionIsEmpty" time="0.561"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentFunctionalDescriptionIsNull" time="0.501"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentFunctionalDescriptionIsEmpty" time="0.66"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentRootCategoryIsNull" time="0.671"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentCategoriesIsNull" time="0.481"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentCategoriesIsEmpty" time="0.461"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentCategoriesContainsNull" time="0.511"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesIsNull" time="0.61"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesIsEmpty" time="0.711"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesContainsNull" time="0.441"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesIsNullVersionIdIsNullToo" time="0.561"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesIsEmptyVersionIdIsNullToo" time="0.531"></testcase>
  <testcase classname="com.topcoder.catalog.service.CatalogServiceImplUpdateComponentIllegalArgumentsTest" name="testUpdateComponentTechnologiesContainsNullVersionIdIsNullToo" time="0.711"></testcase>
  <testcase classname="com.topcoder.catalog.service.DemoTest" name="testCreateNewComponent" time="0.28"></testcase>
  <testcase classname="com.topcoder.catalog.service.DemoTest" name="testCreateNewVersion" time="0.461"></testcase>
  <testcase classname="com.topcoder.catalog.service.DemoTest" name="testFindAssets" time="0.31"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testCtorAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetIdAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetIdAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetCategoriesAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetCategoriesAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetClientIdsAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetClientIdsAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testIsCurrentVersionAlsoLatestVersionAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetCurrentVersionAlsoLatestVersionAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetDetailedDescriptionAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetDetailedDescriptionAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetForumAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetForumAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetFunctionalDescriptionAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetFunctionalDescriptionAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetInformationCompleteAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetInformationCompleteAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetLinkAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetLinkAccuracy" time="0.01"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetNameAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetSetNameAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetProductionDateAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetProductionDateAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetRootCategoryAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetRootCategoryAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetShortDescriptionAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetShortDescriptionAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetTechnologiesAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetTechnologiesAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetUserIdsAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetUserIdsAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetVersionIdAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetVersionIdAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetVersionTextAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetVersionTextAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testGetVersionNumberAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.AssetDTOAccuracyTest" name="testSetVersionNumberAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testGetPhasesAccuracy" time="0.801"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testGetActiveTechnologiesAccuracy" time="0.161"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testGetActiveCategoriesAccuracy" time="0.17"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testGetAssetByIdCurrentVersionAccuracy" time="0.531"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testGetAssetByIdLatestVersionAccuracy" time="0.51"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testGetAssetByVersionIdAccuracy" time="0.721"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testCreateAssetAccuracy" time="0.351"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testCreateAssetClientsAccuracy" time="0.45"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testCreateAssetClientsEmptyAccuracy" time="0.321"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testCreateAssetUsersAccuracy" time="0.31"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testCreateAssetUsersEmptyAccuracy" time="0.301"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testCreateAssetForumAccuracy" time="0.28"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testCreateAssetLinkAccuracy" time="0.271"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testCreateVersionAccuracy" time="0.761"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testUpdateAssetAccuracy" time="0.661"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testAssignUserToComponentAccuracy" time="0.5"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testTwiceAssignUserToAssetAccuracy" time="0.561"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testRemoveUserFromAssetAccuracy" time="0.561"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.CatalogServiceImplAccuracyTest" name="testFindAssetAccuracy" time="1.612"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.EntityNotFoundExceptionAccuracyTest" name="testCtor1Accuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.EntityNotFoundExceptionAccuracyTest" name="testCtor2Accuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.PersistenceExceptionAccuracyTest" name="testCtor1Accuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.PersistenceExceptionAccuracyTest" name="testCtor2Accuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.SearchCriteriaAccuracyTest" name="testCtorAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.SearchCriteriaAccuracyTest" name="testGetCategoriesAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.SearchCriteriaAccuracyTest" name="testGetNameAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.SearchCriteriaAccuracyTest" name="testGetUserIdAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.SearchCriteriaAccuracyTest" name="testGetClientIdAccuracy" time="0.01"></testcase>
  <testcase classname="com.topcoder.catalog.service.accuracytests.SearchCriteriaAccuracyTest" name="testGetDescriptionAccuracy" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_Null" time="0.882"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_IdSet" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_VersionIdSet" time="0.17"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_NameNull" time="0.22"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_NameIsEmpty" time="0.191"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_VersionTextIsNull" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_VersionTextIsEmpty" time="0.21"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_ShortDescriptionIsNull" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_ShortDescriptionIsEmpty" time="0.241"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_DetailedDescriptionIsNull" time="0.23"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_DetailedDescriptionIsEmpty" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_FunctionalDescriptionIsNull" time="0.551"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_FunctionalDescriptionIsEmpty" time="0.211"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_RootCategoryIsNull" time="0.29"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_CategoriesIsNull" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_CategoriesIsEmpty" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_CategoriesContainsNull" time="0.191"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_TechnologiesIsNull" time="0.22"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_TechnologiesIsEmpty" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateAsset_fail_TechnologiesContainsNull" time="0.191"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_Null" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_IdSet" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_VersionIdSet" time="0.21"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_NameIsNull" time="0.231"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_NameIsEmpty" time="0.35"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_VersionTextIsNull" time="0.291"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_VersionTextIsEmpty" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_ShortDescriptionIsNull" time="0.27"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_ShortDescriptionIsEmpty" time="0.181"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_DetailedDescriptionIsNull" time="0.47"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_DetailedDescriptionIsEmpty" time="0.221"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_FunctionalDescriptionIsNull" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_FunctionalDescriptionIsEmpty" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_RootCategoryIsNull" time="0.461"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_CategoriesIsNull" time="0.23"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_CategoriesIsEmpty" time="0.22"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_CategoriesContainsNull" time="0.251"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_TechnologiesIsNull" time="0.38"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_TechnologiesIsEmpty" time="0.281"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_CreateVersion_fail_TechnologiesContainsNull" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_Null" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_IdNull" time="1.082"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_NameIsNull" time="0.651"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_NameIsEmpty" time="1.402"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_ShortDescriptionIsNull" time="1.101"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_ShortDescriptionIsEmpty" time="0.731"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_DetailedDescriptionIsNull" time="0.671"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_DetailedDescriptionIsEmpty" time="0.882"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_FunctionalDescriptionIsNull" time="0.55"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_FunctionalDescriptionIsEmpty" time="0.621"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_RootCategoryIsNull" time="0.631"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_CategoriesIsNull" time="0.641"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_CategoriesIsEmpty" time="0.461"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_CategoriesContainsNull" time="0.581"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_TechnologiesIsNull" time="0.811"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_TechnologiesIsEmpty" time="0.611"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplArgumentFailureTest" name="test_updateAsset_fail_TechnologiesContainsNull" time="0.541"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_GetActiveCategories_fail_EntityManagerNotInjected" time="0.19"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_GetActiveCategories_fail_Cause_PE" time="0.15"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_GetActiveCategories_fail_Cause_IAE" time="0.17"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getActiveTechnologies_fail_Cause_PE" time="0.14"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getActiveTechnologies_fail_Cause_IAE" time="0.221"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getPhases_fail_Cause_PE" time="0.14"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getPhases_fail_Cause_IAE" time="0.15"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetById_fail_NonExistingId" time="0.22"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetById_fail_cause_PE" time="0.531"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetById_fail_cause_IAE" time="0.531"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetByVersionId_fail_NonExistingVersionid" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetByVersionId_fail_cause_PE" time="0.471"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_getAssetByVersionId_fail_cause_IAE" time="0.521"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_createAsset_fail_cause_PE" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_createAsset_fail_cause_IAE" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateAsset_NonExistingTechnology" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateAsset_NonExistingCategory" time="0.231"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateVersion_fail_cause_PE" time="0.2"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateVersion_fail_cause_IAE" time="0.321"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_CreateVersion_fail_NonExistingAsset" time="0.13"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_UpdateAsset_fail_cause_PE" time="0.531"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_UpdateAsset_fail_cause_IAE" time="0.55"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_UpdateAsset_fail_NonExistingAsset" time="0.501"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_FindAssets_fail_NullParameter" time="0.15"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_FindAssets_fail_cause_PE" time="0.221"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_FindAssets_fail_cause_IAE" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_assignUserToAsset_fail_NonExistingAsset" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_assignUserToAsset_fail_cause_PE" time="0.431"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_assignUserToAsset_fail_cause_IAE" time="0.41"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_removeUserFromAsset_fail_NonExistingComponent" time="0.16"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_removeUserFromAsset_NonExistingAssociation" time="0.772"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_removeUserFromAsset_fail_cause_PE" time="0.54"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.CatalogServiceImplFailureTest" name="test_removeUserFromAsset_fail_cause_IAE" time="0.531"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_AllParametersNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_NameEmpty" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_DescriptionEmpty" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_CategoriesEmpty" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.failuretests.SearchCriteriaFailureTest" name="test_ctor_fail_CategoriesContainsNull" time="0.0"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetName" time="0.04"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetCategories" time="0.18"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetDetailedDescription" time="0.04"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetForum" time="0.041"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetFunctionalDescription" time="0.04"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetTechnologies" time="0.29"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetVersionNumber" time="0.14"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetClientIds" time="0.221"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testSetLink" time="0.04"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetCategories" time="0.721"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetClientId" time="0.06"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetDescription" time="0.02"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetName" time="0.02"></testcase>
  <testcase classname="com.topcoder.catalog.service.stresstests.CatalogServicesStressTests" name="testGetUserId" time="0.08"></testcase>
  <system-out><![CDATA[WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, SQL Warning: 0, SQLState: 01I01
WARN   warn, Database has transactions
WARN   warn, SQL Warning: 0, SQLState: 01I04
WARN   warn, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, SQL Warning: 0, SQLState: 01I01
WARN   warn, Database has transactions
WARN   warn, SQL Warning: 0, SQLState: 01I04
WARN   warn, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select compuser0_.user_id as user1_18_, compuser0_.component_id as component2_18_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: select compuser0_.user_id as user1_18_, compuser0_.component_id as component2_18_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select compuser0_.user_id as user1_18_, compuser0_.component_id as component2_18_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: select compuser0_.user_id as user1_18_, compuser0_.component_id as component2_18_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, SQL Warning: 0, SQLState: 01I01
WARN   warn, Database has transactions
WARN   warn, SQL Warning: 0, SQLState: 01I04
WARN   warn, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
The test [AssetDTO#setName] run 1000000 times, took time: 40 ms
The test [AssetDTO#setCategories] run 1000000 times, took time: 180 ms
The test [AssetDTO#setDetailedDescription] run 1000000 times, took time: 40 ms
The test [AssetDTO#setForum] run 1000000 times, took time: 41 ms
The test [AssetDTO#setFunctionalDescription] run 1000000 times, took time: 40 ms
The test [AssetDTO#setTechnologies] run 1000000 times, took time: 290 ms
The test [AssetDTO#setVersionNumber] run 1000000 times, took time: 140 ms
The test [AssetDTO#setClientIds] run 1000000 times, took time: 221 ms
The test [AssetDTO#setLink] run 1000000 times, took time: 40 ms
The test [SearchCriteria#getCategories] run 1000000 times, took time: 711 ms
The test [SearchCriteria#getClientId] run 1000000 times, took time: 60 ms
The test [SearchCriteria#getDescription] run 1000000 times, took time: 20 ms
The test [SearchCriteria#getName] run 1000000 times, took time: 20 ms
The test [SearchCriteria#getUserId] run 1000000 times, took time: 80 ms
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
